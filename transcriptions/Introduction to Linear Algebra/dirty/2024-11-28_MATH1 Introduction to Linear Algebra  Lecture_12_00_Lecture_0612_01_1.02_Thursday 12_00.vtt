WEBVTT

00:00:00.420 --> 00:00:00.660
<v Speaker 0>So.

NOTE CONF {"raw":[50]}

00:00:03.450 --> 00:00:03.870
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:00:03.870 --> 00:00:04.500
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:00:05.010 --> 00:00:08.850
<v Speaker 0>So welcome to this, uh, last but final session of

NOTE CONF {"raw":[100,100,100,100,76,100,100,100,100,100]}

00:00:08.850 --> 00:00:09.390
<v Speaker 0>Ila.

NOTE CONF {"raw":[54]}

00:00:10.050 --> 00:00:13.950
<v Speaker 0>Um, as advised on the announcement, I will be doing

NOTE CONF {"raw":[82,100,100,100,100,100,51,51,100,61]}

00:00:13.950 --> 00:00:16.560
<v Speaker 0>a sort of high level revision session today.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:00:17.340 --> 00:00:20.790
<v Speaker 0>Um, and then tomorrow there's two tutors that will give

NOTE CONF {"raw":[91,100,100,100,75,100,100,100,100,100]}

00:00:20.790 --> 00:00:23.280
<v Speaker 0>a much more sort of practical examples.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:00:23.280 --> 00:00:24.060
<v Speaker 0>Type class.

NOTE CONF {"raw":[100,100]}

00:00:24.060 --> 00:00:24.300
<v Speaker 0>Yeah.

NOTE CONF {"raw":[52]}

00:00:24.300 --> 00:00:25.950
<v Speaker 0>I hope you're getting something from that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:00:26.310 --> 00:00:29.760
<v Speaker 0>Uh, so my, um, what I'm doing today is, is

NOTE CONF {"raw":[73,100,100,100,100,100,100,100,96,100]}

00:00:29.760 --> 00:00:32.009
<v Speaker 0>a quite different style to what I've done so far.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:32.009 --> 00:00:33.390
<v Speaker 0>So there's not new material.

NOTE CONF {"raw":[100,100,100,100,100]}

00:00:33.390 --> 00:00:36.660
<v Speaker 0>I won't be having any club polls, but rather I

NOTE CONF {"raw":[100,100,100,100,100,95,93,100,100,100]}

00:00:36.660 --> 00:00:38.670
<v Speaker 0>try to sort of organise a bit of all the

NOTE CONF {"raw":[100,100,100,100,54,100,100,100,100,100]}

00:00:38.670 --> 00:00:41.670
<v Speaker 0>stuff that we've done into sort of what, what are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:41.670 --> 00:00:42.900
<v Speaker 0>the really important things?

NOTE CONF {"raw":[100,100,100,100]}

00:00:42.900 --> 00:00:43.800
<v Speaker 0>How do they fit together?

NOTE CONF {"raw":[100,100,100,100,100]}

00:00:43.800 --> 00:00:45.600
<v Speaker 0>What are the things we expect you to be able

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:45.600 --> 00:00:49.170
<v Speaker 0>to do for the synoptic assessment, or people that later

NOTE CONF {"raw":[100,100,100,98,100,100,100,100,100,72]}

00:00:49.170 --> 00:00:51.810
<v Speaker 0>expect you to be able to know this of all

NOTE CONF {"raw":[86,86,100,100,100,100,100,100,100,100]}

00:00:51.810 --> 00:00:53.040
<v Speaker 0>the stuff that we've done.

NOTE CONF {"raw":[100,100,100,100,100]}

00:00:53.490 --> 00:00:55.920
<v Speaker 0>And I'm also trying to show you a little bit

NOTE CONF {"raw":[100,62,100,100,100,100,100,100,100,100]}

00:00:55.920 --> 00:00:59.460
<v Speaker 0>of where these things are used for outside of Ila.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,93]}

00:00:59.920 --> 00:01:00.250
<v Speaker 0>Yeah.

NOTE CONF {"raw":[99]}

00:01:00.700 --> 00:01:02.620
<v Speaker 0>So you probably had a little bit of that, but

NOTE CONF {"raw":[100,83,100,84,100,100,100,100,100,100]}

00:01:02.620 --> 00:01:04.089
<v Speaker 0>this is a sort of overview.

NOTE CONF {"raw":[100,100,98,100,100,100]}

00:01:04.480 --> 00:01:06.550
<v Speaker 0>And to some extent the slides that I've got here

NOTE CONF {"raw":[100,100,100,100,100,100,100,89,100,100]}

00:01:06.550 --> 00:01:08.920
<v Speaker 0>will be uploaded and they should be sort of reference

NOTE CONF {"raw":[100,100,100,95,95,100,100,100,100,100]}

00:01:08.920 --> 00:01:11.440
<v Speaker 0>material for you to be able to look through and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:11.440 --> 00:01:14.290
<v Speaker 0>say, oh yeah, these are the things I ought to

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,100,100]}

00:01:14.290 --> 00:01:14.800
<v Speaker 0>know.

NOTE CONF {"raw":[100]}

00:01:15.400 --> 00:01:15.880
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:01:15.880 --> 00:01:16.510
<v Speaker 0>Okay.

NOTE CONF {"raw":[98]}

00:01:16.540 --> 00:01:17.680
<v Speaker 0>Without further ado.

NOTE CONF {"raw":[100,100,100]}

00:01:17.680 --> 00:01:19.750
<v Speaker 0>So this is the stuff that we've done here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:01:19.900 --> 00:01:23.110
<v Speaker 0>I've just copied all the chapter titles from Nicholson there.

NOTE CONF {"raw":[100,100,100,31,100,100,70,100,100,100]}

00:01:23.890 --> 00:01:27.190
<v Speaker 0>That doesn't necessarily necessarily tell you very much.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:01:27.640 --> 00:01:31.000
<v Speaker 0>So rather organise this into a sort of few skills

NOTE CONF {"raw":[100,100,40,100,100,100,100,100,100,100]}

00:01:31.000 --> 00:01:32.440
<v Speaker 0>or things that we've done.

NOTE CONF {"raw":[66,100,100,100,100]}

00:01:32.440 --> 00:01:35.860
<v Speaker 0>So we've done we solve systems of linear equations.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:01:35.860 --> 00:01:37.660
<v Speaker 0>That was the first major bit.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:01:38.380 --> 00:01:41.320
<v Speaker 0>I talked a bit about matrix algebra algebra.

NOTE CONF {"raw":[100,100,100,100,100,100,91,100]}

00:01:41.320 --> 00:01:43.720
<v Speaker 0>And we had inverses of matrices.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:01:44.380 --> 00:01:46.000
<v Speaker 0>We had determinants.

NOTE CONF {"raw":[100,45,100]}

00:01:46.000 --> 00:01:47.680
<v Speaker 0>How to calculate them.

NOTE CONF {"raw":[100,100,100,100]}

00:01:48.400 --> 00:01:53.440
<v Speaker 0>We talked about transformations the relation between linear transformations and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:53.440 --> 00:01:54.400
<v Speaker 0>matrices.

NOTE CONF {"raw":[100]}

00:01:54.400 --> 00:01:57.760
<v Speaker 0>How to find the matrix for a given transformation.

NOTE CONF {"raw":[100,100,100,88,100,100,100,100,100]}

00:01:58.270 --> 00:02:01.470
<v Speaker 0>Um we've done, done quite a bit of, um, um,

NOTE CONF {"raw":[91,100,95,100,100,100,100,100,95,100]}

00:02:01.470 --> 00:02:05.760
<v Speaker 0>vector geometry, starting with dot products and cross products and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:05.760 --> 00:02:10.080
<v Speaker 0>how to use these to describe lines and planes in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:10.080 --> 00:02:11.460
<v Speaker 0>R2 and R3.

NOTE CONF {"raw":[100,100,100]}

00:02:12.120 --> 00:02:14.280
<v Speaker 0>Um, and then also sort of a bit more abstract

NOTE CONF {"raw":[89,100,94,72,100,100,100,100,100,100]}

00:02:14.280 --> 00:02:17.790
<v Speaker 0>bit of talking about a basis of subspaces.

NOTE CONF {"raw":[100,100,100,100,52,97,100,100]}

00:02:17.790 --> 00:02:22.020
<v Speaker 0>We have concepts that have no row column eigenspaces.

NOTE CONF {"raw":[100,97,100,99,100,100,100,100,100]}

00:02:22.710 --> 00:02:27.720
<v Speaker 0>Um, and we talked about orthogonal basis um and eigenvalues

NOTE CONF {"raw":[100,84,99,100,100,100,100,90,100,100]}

00:02:27.720 --> 00:02:29.130
<v Speaker 0>and eigenvectors.

NOTE CONF {"raw":[100,100]}

00:02:29.310 --> 00:02:29.640
<v Speaker 0>Yeah.

NOTE CONF {"raw":[100]}

00:02:30.600 --> 00:02:30.900
<v Speaker 0>Um.

NOTE CONF {"raw":[98]}

00:02:30.900 --> 00:02:31.380
<v Speaker 0>Oh yeah.

NOTE CONF {"raw":[100,100]}

00:02:31.380 --> 00:02:33.360
<v Speaker 0>And then finally diagonalising a matrix.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:02:33.360 --> 00:02:35.580
<v Speaker 0>So these are the sort of stuff that we've concentrated

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:35.580 --> 00:02:37.170
<v Speaker 0>on, the stuff that we taught you.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:02:37.800 --> 00:02:40.350
<v Speaker 0>Um, and just as a highlight and I want to

NOTE CONF {"raw":[97,100,100,100,99,100,100,100,100,100]}

00:02:40.350 --> 00:02:42.390
<v Speaker 0>go a little bit more into sort of most of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:42.390 --> 00:02:44.580
<v Speaker 0>these and tell you a few more things about that,

NOTE CONF {"raw":[100,100,100,100,65,100,100,100,100,100]}

00:02:44.580 --> 00:02:46.230
<v Speaker 0>what that means in practice.

NOTE CONF {"raw":[100,100,100,100,100]}

00:02:46.410 --> 00:02:48.720
<v Speaker 0>So let's start with Gaussian elimination.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:02:49.650 --> 00:02:54.120
<v Speaker 0>Um, the the first thing to say there is really

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:54.120 --> 00:02:55.650
<v Speaker 0>that Gaussian elimination.

NOTE CONF {"raw":[100,100,100]}

00:02:55.650 --> 00:02:58.930
<v Speaker 0>If there's one thing that you remember from this course.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:58.930 --> 00:03:01.570
<v Speaker 0>One skill you can do then this would be Gaussian

NOTE CONF {"raw":[100,100,100,100,100,100,94,56,100,100]}

00:03:01.570 --> 00:03:02.380
<v Speaker 0>elimination.

NOTE CONF {"raw":[100]}

00:03:02.860 --> 00:03:03.160
<v Speaker 0>Yeah.

NOTE CONF {"raw":[96]}

00:03:03.160 --> 00:03:06.130
<v Speaker 0>This is one of the most important algorithms, not just

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:06.130 --> 00:03:09.340
<v Speaker 0>in what we taught, but full stop anywhere really.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:03:10.000 --> 00:03:14.050
<v Speaker 0>Um, and it's sort of, um, drive home that point.

NOTE CONF {"raw":[97,100,78,100,100,100,100,100,100,100]}

00:03:14.140 --> 00:03:16.660
<v Speaker 0>So if I look here is an article from Nick

NOTE CONF {"raw":[100,89,89,67,42,38,100,100,100,100]}

00:03:16.660 --> 00:03:20.320
<v Speaker 0>Higham, um, one of the most, uh, sort of respected

NOTE CONF {"raw":[86,95,100,100,100,100,71,100,100,100]}

00:03:20.470 --> 00:03:22.420
<v Speaker 0>applied mathematicians in Britain.

NOTE CONF {"raw":[100,100,100,100]}

00:03:22.420 --> 00:03:25.330
<v Speaker 0>Unfortunately, he died at the start of this year.

NOTE CONF {"raw":[100,98,100,100,100,100,100,100,100]}

00:03:25.780 --> 00:03:28.480
<v Speaker 0>Um, actually, his brother death as a teacher, as a

NOTE CONF {"raw":[100,100,100,100,77,100,100,100,97,100]}

00:03:28.480 --> 00:03:31.090
<v Speaker 0>professor in the school of math here.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:03:31.720 --> 00:03:33.760
<v Speaker 0>Um, but he's he's a really known person.

NOTE CONF {"raw":[94,100,89,100,100,100,100,100]}

00:03:33.760 --> 00:03:35.980
<v Speaker 0>He had a sort of top ten algorithms in applied

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,99,100]}

00:03:35.980 --> 00:03:36.940
<v Speaker 0>mathematics.

NOTE CONF {"raw":[100]}

00:03:37.450 --> 00:03:40.330
<v Speaker 0>Um, and if you go further down here, um, there's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,90,97]}

00:03:40.330 --> 00:03:42.970
<v Speaker 0>the list of algorithms, and we should make this a

NOTE CONF {"raw":[100,100,100,100,100,52,99,100,100,100]}

00:03:42.970 --> 00:03:46.240
<v Speaker 0>little bit larger, um, in order actually.

NOTE CONF {"raw":[100,100,100,99,100,100,100]}

00:03:46.240 --> 00:03:50.830
<v Speaker 0>And in number two, you have matrix factorisation you into,

NOTE CONF {"raw":[100,49,100,100,100,100,100,100,79,54]}

00:03:50.830 --> 00:03:52.990
<v Speaker 0>let's say a little bit about where it's coming from.

NOTE CONF {"raw":[56,95,100,100,100,100,92,100,100,100]}

00:03:53.290 --> 00:03:55.840
<v Speaker 0>It's basically Gaussian elimination.

NOTE CONF {"raw":[75,100,100,100]}

00:03:56.330 --> 00:03:56.720
<v Speaker 0>Yeah.

NOTE CONF {"raw":[100]}

00:03:56.870 --> 00:03:59.390
<v Speaker 0>So this is this is really an algorithm that is

NOTE CONF {"raw":[100,97,100,100,100,100,100,100,100,100]}

00:03:59.390 --> 00:04:01.220
<v Speaker 0>used any everywhere.

NOTE CONF {"raw":[100,100,100]}

00:04:02.060 --> 00:04:02.600
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:04:02.600 --> 00:04:03.230
<v Speaker 0>Okay.

NOTE CONF {"raw":[89]}

00:04:03.410 --> 00:04:04.430
<v Speaker 0>Go back to that.

NOTE CONF {"raw":[100,100,100,100]}

00:04:04.430 --> 00:04:05.270
<v Speaker 0>Carry on.

NOTE CONF {"raw":[100,100]}

00:04:05.270 --> 00:04:09.170
<v Speaker 0>So, um, what have we sort of within our LA.

NOTE CONF {"raw":[99,96,100,71,86,100,100,100,55,61]}

00:04:09.470 --> 00:04:12.320
<v Speaker 0>Uh, we've used this obviously to solve linear systems of

NOTE CONF {"raw":[82,99,100,100,100,100,100,100,100,100]}

00:04:12.320 --> 00:04:15.740
<v Speaker 0>equations, but then quite a few other things where Gauss

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,99]}

00:04:15.740 --> 00:04:20.390
<v Speaker 0>elimination came up finding inverses of matrices, calculating determinant.

NOTE CONF {"raw":[100,100,100,100,100,100,100,97,100]}

00:04:20.930 --> 00:04:22.970
<v Speaker 0>Um, quite a bit of stuff to do with lines

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:22.970 --> 00:04:27.140
<v Speaker 0>and planes, vector geometry, um, testing whether some vector is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,99,99]}

00:04:27.140 --> 00:04:30.770
<v Speaker 0>a linear combination of other, whether they're linear independent.

NOTE CONF {"raw":[99,100,100,79,100,100,93,100,100]}

00:04:30.770 --> 00:04:33.620
<v Speaker 0>All of this has been done by Gaussian elimination.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:04:33.620 --> 00:04:38.480
<v Speaker 0>And also, uh, finding bases of various spaces and then

NOTE CONF {"raw":[100,100,95,100,49,100,100,100,100,100]}

00:04:38.480 --> 00:04:40.550
<v Speaker 0>finding eigenvalues and eigenvectors.

NOTE CONF {"raw":[100,100,100,100]}

00:04:40.550 --> 00:04:43.460
<v Speaker 0>So it's popped up in Ila pretty much in every

NOTE CONF {"raw":[100,87,100,100,91,48,100,100,100,100]}

00:04:43.460 --> 00:04:44.210
<v Speaker 0>topic.

NOTE CONF {"raw":[100]}

00:04:44.750 --> 00:04:48.740
<v Speaker 0>Um, and outside of Isla, as I said, um, everywhere.

NOTE CONF {"raw":[97,100,100,100,71,100,97,100,99,100]}

00:04:48.740 --> 00:04:49.070
<v Speaker 0>Yeah.

NOTE CONF {"raw":[99]}

00:04:49.070 --> 00:04:52.910
<v Speaker 0>It's just keep coming sometime in its variants of Lu

NOTE CONF {"raw":[86,100,81,100,74,100,77,81,100,99]}

00:04:53.060 --> 00:04:57.390
<v Speaker 0>decomposition or Cholesky decomposition is what Nick Higham here said.

NOTE CONF {"raw":[100,100,100,100,100,100,97,86,100,100]}

00:04:58.020 --> 00:05:00.390
<v Speaker 0>Both of those I think are covered in Nicholson.

NOTE CONF {"raw":[100,100,100,89,89,100,100,100,100]}

00:05:00.780 --> 00:05:03.780
<v Speaker 0>We just didn't go through them, you know.

NOTE CONF {"raw":[100,100,97,100,100,100,99,99]}

00:05:04.350 --> 00:05:07.380
<v Speaker 0>But you will you will likely see these again.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:05:07.560 --> 00:05:08.580
<v Speaker 0>Under these guises.

NOTE CONF {"raw":[100,100,100]}

00:05:08.580 --> 00:05:11.430
<v Speaker 0>But there's really not much going on other than what

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:11.430 --> 00:05:12.630
<v Speaker 0>we already had.

NOTE CONF {"raw":[100,100,100]}

00:05:12.840 --> 00:05:13.350
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:05:13.350 --> 00:05:13.770
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:05:13.770 --> 00:05:18.360
<v Speaker 0>I think I want to actually get away from the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:18.360 --> 00:05:20.820
<v Speaker 0>laptop here and have both screens.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:21.570 --> 00:05:22.110
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:05:22.110 --> 00:05:25.680
<v Speaker 0>So, um, I sort of each of these topics, I

NOTE CONF {"raw":[99,52,100,98,98,100,100,100,100,96]}

00:05:25.680 --> 00:05:29.130
<v Speaker 0>divide into sort of, um, skills, like things that, you

NOTE CONF {"raw":[100,100,100,100,100,95,100,100,100,100]}

00:05:29.130 --> 00:05:30.900
<v Speaker 0>know, should know how to do.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:31.230 --> 00:05:34.320
<v Speaker 0>And I also have something on theory that is applicable

NOTE CONF {"raw":[100,97,100,100,100,100,100,100,100,100]}

00:05:34.320 --> 00:05:37.140
<v Speaker 0>that you should be aware of, you know, so Gauss

NOTE CONF {"raw":[100,100,100,100,100,100,99,99,100,91]}

00:05:37.140 --> 00:05:40.290
<v Speaker 0>elimination, the skills are you should be able to perform

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:40.290 --> 00:05:43.290
<v Speaker 0>row operation to guess to row echelon form or reduced

NOTE CONF {"raw":[100,57,100,92,100,100,100,100,100,100]}

00:05:43.290 --> 00:05:44.010
<v Speaker 0>row echelon form.

NOTE CONF {"raw":[100,100,100]}

00:05:44.010 --> 00:05:48.810
<v Speaker 0>Obviously, um, find elementary matrices corresponding to the row operation

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:48.810 --> 00:05:53.010
<v Speaker 0>and use these all to determine solutions to system of

NOTE CONF {"raw":[100,100,93,68,100,100,100,100,100,100]}

00:05:53.010 --> 00:05:57.590
<v Speaker 0>equations, But also we know that there's not always just

NOTE CONF {"raw":[100,100,100,100,100,100,96,100,100,100]}

00:05:57.590 --> 00:05:58.460
<v Speaker 0>one solution.

NOTE CONF {"raw":[100,100]}

00:05:58.460 --> 00:06:01.250
<v Speaker 0>There can be zero and infinitely many.

NOTE CONF {"raw":[100,100,100,100,97,100,100]}

00:06:01.250 --> 00:06:04.220
<v Speaker 0>So you should be able to distinguish these cases and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:04.220 --> 00:06:08.390
<v Speaker 0>if necessary, or if applicable, write down a basis of

NOTE CONF {"raw":[100,100,100,100,100,95,100,100,100,100]}

00:06:08.390 --> 00:06:09.710
<v Speaker 0>the solution space.

NOTE CONF {"raw":[100,100,100]}

00:06:09.740 --> 00:06:11.960
<v Speaker 0>Now substituting in parameters.

NOTE CONF {"raw":[100,100,100,100]}

00:06:11.960 --> 00:06:16.100
<v Speaker 0>Doing that um and know how to apply this to.

NOTE CONF {"raw":[100,100,58,100,100,100,100,100,100,100]}

00:06:16.100 --> 00:06:18.350
<v Speaker 0>For example, find the inverse of the matrix.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:06:18.350 --> 00:06:20.870
<v Speaker 0>Find an eigenspace for an eigenvector.

NOTE CONF {"raw":[100,100,82,100,100,100]}

00:06:21.260 --> 00:06:21.380
<v Speaker 0>Um.

NOTE CONF {"raw":[70]}

00:06:21.380 --> 00:06:24.260
<v Speaker 0>Determine the basis of knowledge space, common space, or so

NOTE CONF {"raw":[100,100,100,100,100,37,97,100,43,100]}

00:06:24.260 --> 00:06:24.740
<v Speaker 0>on.

NOTE CONF {"raw":[100]}

00:06:25.070 --> 00:06:25.190
<v Speaker 0>Um.

NOTE CONF {"raw":[97]}

00:06:25.190 --> 00:06:25.760
<v Speaker 0>There's more.

NOTE CONF {"raw":[100,100]}

00:06:25.760 --> 00:06:28.070
<v Speaker 0>When I get to that, um, that I'll tell you

NOTE CONF {"raw":[100,100,100,100,100,96,96,90,100,100]}

00:06:28.070 --> 00:06:29.480
<v Speaker 0>where where these things are.

NOTE CONF {"raw":[88,100,100,100,100]}

00:06:30.290 --> 00:06:30.650
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:06:30.650 --> 00:06:31.070
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:06:31.100 --> 00:06:34.070
<v Speaker 0>Theory, um, applicable to Gaussian elimination.

NOTE CONF {"raw":[100,78,100,100,100,100]}

00:06:34.190 --> 00:06:36.530
<v Speaker 0>Um, so the effect of row operations.

NOTE CONF {"raw":[69,100,100,100,100,100,100]}

00:06:36.530 --> 00:06:39.260
<v Speaker 0>No, they don't change the solution space.

NOTE CONF {"raw":[90,100,92,100,100,98,100]}

00:06:39.260 --> 00:06:41.600
<v Speaker 0>They don't change the null space, they don't change the

NOTE CONF {"raw":[100,91,100,100,100,100,100,86,100,100]}

00:06:41.600 --> 00:06:42.440
<v Speaker 0>row space.

NOTE CONF {"raw":[100,100]}

00:06:42.890 --> 00:06:46.220
<v Speaker 0>Um, they may change the determinant depending on what you're

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:06:46.220 --> 00:06:46.670
<v Speaker 0>doing.

NOTE CONF {"raw":[100]}

00:06:47.450 --> 00:06:50.690
<v Speaker 0>Uh, type three I think, or, um, just adding one

NOTE CONF {"raw":[93,100,100,100,100,76,100,100,100,100]}

00:06:50.690 --> 00:06:53.190
<v Speaker 0>column to run row to the other doesn't, but more

NOTE CONF {"raw":[100,100,63,98,100,100,100,97,100,57]}

00:06:53.190 --> 00:06:56.550
<v Speaker 0>deploying or swapping rows has an effect, so be careful

NOTE CONF {"raw":[57,100,100,93,100,100,100,100,100,100]}

00:06:56.550 --> 00:06:57.150
<v Speaker 0>with that.

NOTE CONF {"raw":[100,100]}

00:06:57.990 --> 00:07:02.070
<v Speaker 0>Um, there's an equivalent with elementary matrices, and we can

NOTE CONF {"raw":[95,100,100,100,93,100,100,100,100,100]}

00:07:02.070 --> 00:07:06.600
<v Speaker 0>determine the rank here by leading ones in row echelon

NOTE CONF {"raw":[100,100,100,100,100,98,100,100,100,100]}

00:07:06.600 --> 00:07:07.050
<v Speaker 0>form.

NOTE CONF {"raw":[100]}

00:07:07.410 --> 00:07:07.680
<v Speaker 0>Yeah.

NOTE CONF {"raw":[74]}

00:07:08.520 --> 00:07:08.850
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:07:08.850 --> 00:07:11.130
<v Speaker 0>And just as a note, we didn't say much or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,85]}

00:07:11.130 --> 00:07:14.250
<v Speaker 0>that we've done this or for row operations, pretty much

NOTE CONF {"raw":[98,100,100,100,94,100,100,100,100,100]}

00:07:14.250 --> 00:07:16.770
<v Speaker 0>the sort of same or similar theory can be developed

NOTE CONF {"raw":[100,96,96,100,96,100,100,100,100,100]}

00:07:17.040 --> 00:07:19.050
<v Speaker 0>regarding column operations.

NOTE CONF {"raw":[100,100,100]}

00:07:19.230 --> 00:07:21.990
<v Speaker 0>But we haven't really done this here just as a

NOTE CONF {"raw":[96,100,100,100,100,100,100,100,100,100]}

00:07:21.990 --> 00:07:23.040
<v Speaker 0>sort of awareness.

NOTE CONF {"raw":[100,100,100]}

00:07:24.060 --> 00:07:24.690
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:07:24.690 --> 00:07:28.860
<v Speaker 0>So after, um, Gaussian elimination, the next thing we did

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:28.860 --> 00:07:30.120
<v Speaker 0>was matrix algebra.

NOTE CONF {"raw":[100,100,100]}

00:07:30.120 --> 00:07:33.330
<v Speaker 0>So how to work how to calculate with matrices and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:33.330 --> 00:07:34.050
<v Speaker 0>vectors.

NOTE CONF {"raw":[100]}

00:07:34.890 --> 00:07:37.710
<v Speaker 0>Um, so things you should know how to do obviously

NOTE CONF {"raw":[92,100,100,100,100,100,100,100,100,100]}

00:07:37.710 --> 00:07:38.730
<v Speaker 0>is the rules here.

NOTE CONF {"raw":[100,100,100,100]}

00:07:38.730 --> 00:07:41.190
<v Speaker 0>So how do I multiply a matrix with a vector.

NOTE CONF {"raw":[100,100,100,100,100,100,100,88,74,100]}

00:07:41.220 --> 00:07:43.650
<v Speaker 0>How do I multiply matrix with a matrix.

NOTE CONF {"raw":[100,100,100,100,84,98,98,100]}

00:07:43.650 --> 00:07:46.470
<v Speaker 0>How do I do a dot product or scalar product.

NOTE CONF {"raw":[100,100,100,100,100,100,100,98,100,100]}

00:07:46.470 --> 00:07:48.060
<v Speaker 0>How do I do a cross product.

NOTE CONF {"raw":[100,100,100,100,79,66,66]}

00:07:48.600 --> 00:07:50.640
<v Speaker 0>Um, I should you should be able to find the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:50.640 --> 00:07:54.280
<v Speaker 0>inverse of the matrix and determine when a matrix has

NOTE CONF {"raw":[100,100,100,100,96,100,100,100,100,100]}

00:07:54.280 --> 00:07:55.120
<v Speaker 0>an inverse.

NOTE CONF {"raw":[100,100]}

00:07:55.390 --> 00:07:56.890
<v Speaker 0>Again Gaussian elimination.

NOTE CONF {"raw":[100,100,100]}

00:07:57.250 --> 00:07:58.330
<v Speaker 0>We've just done that.

NOTE CONF {"raw":[100,100,100,100]}

00:07:59.020 --> 00:08:02.800
<v Speaker 0>Um, the theory that we have is while the usual

NOTE CONF {"raw":[97,50,100,100,100,100,100,40,100,97]}

00:08:02.800 --> 00:08:04.630
<v Speaker 0>rules of calculating with matrices.

NOTE CONF {"raw":[100,100,100,100,100]}

00:08:04.630 --> 00:08:06.640
<v Speaker 0>So we had associativity there.

NOTE CONF {"raw":[100,100,100,100,100]}

00:08:06.640 --> 00:08:08.680
<v Speaker 0>We had the distributive law.

NOTE CONF {"raw":[100,86,100,100,100]}

00:08:09.250 --> 00:08:11.080
<v Speaker 0>Um, those work as you'd expect.

NOTE CONF {"raw":[96,100,100,100,100,100]}

00:08:11.080 --> 00:08:13.510
<v Speaker 0>We had things that do not work like matrices.

NOTE CONF {"raw":[100,100,100,100,72,72,100,100,80]}

00:08:13.540 --> 00:08:16.960
<v Speaker 0>Matrix multiplication isn't isn't symmetric.

NOTE CONF {"raw":[100,100,58,64,100]}

00:08:17.230 --> 00:08:18.610
<v Speaker 0>The order matters.

NOTE CONF {"raw":[100,100,100]}

00:08:18.610 --> 00:08:18.940
<v Speaker 0>Yeah.

NOTE CONF {"raw":[56]}

00:08:19.720 --> 00:08:23.860
<v Speaker 0>Uh, we had stuff that um, so c a equals

NOTE CONF {"raw":[62,100,100,100,100,100,100,100,100,100]}

00:08:23.860 --> 00:08:27.670
<v Speaker 0>c b for just highlight that there, does that follow

NOTE CONF {"raw":[100,100,100,100,100,100,92,94,100,100]}

00:08:27.670 --> 00:08:29.050
<v Speaker 0>that a equals b.

NOTE CONF {"raw":[100,100,100,100]}

00:08:30.400 --> 00:08:31.270
<v Speaker 0>And you remember.

NOTE CONF {"raw":[100,100,100]}

00:08:34.330 --> 00:08:38.620
<v Speaker 0>You can tell me whether that's true or not true

NOTE CONF {"raw":[100,100,100,100,100,96,100,100,100,100]}

00:08:40.419 --> 00:08:40.960
<v Speaker 0>up there.

NOTE CONF {"raw":[100,100]}

00:08:42.669 --> 00:08:44.890
<v Speaker 0>It is true when C is invertible.

NOTE CONF {"raw":[99,100,100,100,100,100,100]}

00:08:44.890 --> 00:08:45.340
<v Speaker 0>Yes.

NOTE CONF {"raw":[100]}

00:08:45.340 --> 00:08:48.910
<v Speaker 0>So if C is invertible you can multiply both sides

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:48.910 --> 00:08:50.440
<v Speaker 0>from the left with c inverse.

NOTE CONF {"raw":[63,100,100,100,100,100]}

00:08:50.460 --> 00:08:52.950
<v Speaker 0>Otherwise this might not be the case.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:08:53.280 --> 00:08:55.680
<v Speaker 0>Be aware of things like that.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:08:56.400 --> 00:09:00.180
<v Speaker 0>Um, also, if you do something like multiplying matrices together,

NOTE CONF {"raw":[86,100,100,100,100,100,100,100,100,100]}

00:09:00.180 --> 00:09:02.310
<v Speaker 0>the dimensions much must match.

NOTE CONF {"raw":[100,100,58,100,100]}

00:09:02.340 --> 00:09:05.820
<v Speaker 0>You can't do all matrix matrix product or matrix vector

NOTE CONF {"raw":[100,100,100,100,100,100,92,100,100,100]}

00:09:05.820 --> 00:09:10.470
<v Speaker 0>products and to some extent in this aspect calculating with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:10.470 --> 00:09:13.650
<v Speaker 0>them vectors are really just a special case of matrices.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:15.120 --> 00:09:15.600
<v Speaker 0>Right okay.

NOTE CONF {"raw":[100,100]}

00:09:15.600 --> 00:09:17.700
<v Speaker 0>We have these only of course invertible.

NOTE CONF {"raw":[100,95,100,77,97,96,100]}

00:09:17.820 --> 00:09:18.540
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:09:18.540 --> 00:09:21.300
<v Speaker 0>So we talked about inverses of matrices.

NOTE CONF {"raw":[100,54,100,100,100,100,100]}

00:09:21.630 --> 00:09:24.210
<v Speaker 0>So we had quite a few sort of matrix inversion

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:24.210 --> 00:09:29.550
<v Speaker 0>theorem um telling you properties about matrices that are equivalent

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:30.000 --> 00:09:31.770
<v Speaker 0>to a matrix being invertible.

NOTE CONF {"raw":[100,100,100,100,100]}

00:09:32.100 --> 00:09:34.110
<v Speaker 0>I put this sort of in the sort of order

NOTE CONF {"raw":[100,100,100,100,100,100,64,100,100,100]}

00:09:34.110 --> 00:09:36.540
<v Speaker 0>of importance rather than the order in which we've done

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:36.540 --> 00:09:36.990
<v Speaker 0>that.

NOTE CONF {"raw":[100]}

00:09:37.620 --> 00:09:40.260
<v Speaker 0>Um, so the most important is probably determinant not being

NOTE CONF {"raw":[94,100,100,100,100,100,100,100,100,100]}

00:09:40.260 --> 00:09:41.310
<v Speaker 0>equal to zero.

NOTE CONF {"raw":[100,100,100]}

00:09:41.940 --> 00:09:43.230
<v Speaker 0>Um, but there's quite a few others.

NOTE CONF {"raw":[90,99,100,100,100,100,100]}

00:09:43.230 --> 00:09:45.870
<v Speaker 0>So that is equivalent with a rank on the matrix

NOTE CONF {"raw":[100,100,100,100,100,64,100,26,79,100]}

00:09:45.870 --> 00:09:47.130
<v Speaker 0>being a full rank.

NOTE CONF {"raw":[100,100,100,100]}

00:09:47.670 --> 00:09:51.340
<v Speaker 0>Um, there's a couple of properties regarding systems of equations.

NOTE CONF {"raw":[100,96,100,100,100,100,100,100,100,100]}

00:09:52.120 --> 00:09:56.200
<v Speaker 0>So for example, homogeneous system only has the trivial solution.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:56.230 --> 00:10:00.130
<v Speaker 0>Homogeneous system is a system where the right hand side

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:00.130 --> 00:10:00.880
<v Speaker 0>is zero.

NOTE CONF {"raw":[100,100]}

00:10:01.750 --> 00:10:02.110
<v Speaker 0>Yeah.

NOTE CONF {"raw":[93]}

00:10:02.110 --> 00:10:03.970
<v Speaker 0>Or indeed.

NOTE CONF {"raw":[100,100]}

00:10:03.970 --> 00:10:04.300
<v Speaker 0>This.

NOTE CONF {"raw":[100]}

00:10:04.300 --> 00:10:06.580
<v Speaker 0>Here is a special case of the one below.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:10:07.150 --> 00:10:10.420
<v Speaker 0>There is a unique solution for every right hand side.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:10.540 --> 00:10:13.150
<v Speaker 0>So in homogeneous system the unique solution has to be

NOTE CONF {"raw":[82,96,100,100,100,100,100,100,100,100]}

00:10:13.150 --> 00:10:13.750
<v Speaker 0>zero.

NOTE CONF {"raw":[100]}

00:10:14.590 --> 00:10:14.890
<v Speaker 0>Yeah.

NOTE CONF {"raw":[96]}

00:10:15.220 --> 00:10:18.610
<v Speaker 0>Um something to do with the growth or the columns.

NOTE CONF {"raw":[100,100,100,100,100,100,98,100,100,100]}

00:10:18.970 --> 00:10:22.750
<v Speaker 0>So if the matrix is invertible, the rows or the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:22.750 --> 00:10:27.220
<v Speaker 0>columns are linearly independent and each set of them spans

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:27.220 --> 00:10:28.420
<v Speaker 0>the whole of RN.

NOTE CONF {"raw":[100,100,100,81]}

00:10:29.320 --> 00:10:32.110
<v Speaker 0>And the first thing we had actually was that you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:32.110 --> 00:10:35.080
<v Speaker 0>can reduce the matrix to the identity by elementary row

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:35.080 --> 00:10:35.920
<v Speaker 0>operations.

NOTE CONF {"raw":[100]}

00:10:36.220 --> 00:10:40.180
<v Speaker 0>So this is all um, or the same as um.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,97]}

00:10:41.230 --> 00:10:42.940
<v Speaker 1>Um, as um.

NOTE CONF {"raw":[100,100,100]}

00:10:43.390 --> 00:10:44.920
<v Speaker 0>The matrix being invertible.

NOTE CONF {"raw":[100,100,99,100]}

00:10:45.190 --> 00:10:47.410
<v Speaker 0>So that brings us to determinant.

NOTE CONF {"raw":[100,100,100,100,100,78]}

00:10:47.710 --> 00:10:51.920
<v Speaker 0>So um, these are used for, we use them for

NOTE CONF {"raw":[100,97,100,100,100,100,100,96,100,100]}

00:10:51.920 --> 00:10:54.530
<v Speaker 0>first of all, determining whether a matrix is invertible, that

NOTE CONF {"raw":[100,100,100,100,100,97,100,100,100,100]}

00:10:54.530 --> 00:10:55.910
<v Speaker 0>how we introduce them.

NOTE CONF {"raw":[100,100,100,100]}

00:10:56.360 --> 00:10:58.130
<v Speaker 0>Um, but then they had quite a big role to

NOTE CONF {"raw":[91,100,100,98,100,100,100,100,100,100]}

00:10:58.130 --> 00:11:03.260
<v Speaker 0>play in finding eigenvalues, um, through the correct characteristic polynomial.

NOTE CONF {"raw":[100,100,100,100,72,100,100,57,100,100]}

00:11:04.160 --> 00:11:07.250
<v Speaker 0>Um, and I also said these can be useful for

NOTE CONF {"raw":[98,100,93,100,71,89,100,100,100,100]}

00:11:07.250 --> 00:11:10.370
<v Speaker 0>determining whether a set of vectors is linearly independent.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:11:10.580 --> 00:11:13.460
<v Speaker 0>If you've got n vectors and n dimensions, you can

NOTE CONF {"raw":[100,100,100,100,100,84,100,100,100,100]}

00:11:13.460 --> 00:11:14.990
<v Speaker 0>work out the determinant.

NOTE CONF {"raw":[100,100,100,100]}

00:11:15.470 --> 00:11:21.020
<v Speaker 0>Um, and if that is non-zero, these are linearly independent.

NOTE CONF {"raw":[97,100,100,100,100,63,100,100,100,100]}

00:11:21.800 --> 00:11:25.160
<v Speaker 0>Um, there's a few oddities that came up like aggregate

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:25.160 --> 00:11:26.480
<v Speaker 0>or Cramer's rule.

NOTE CONF {"raw":[100,100,100]}

00:11:26.510 --> 00:11:28.640
<v Speaker 0>Um, not sure how important they are.

NOTE CONF {"raw":[93,100,100,100,100,100,100]}

00:11:28.670 --> 00:11:31.040
<v Speaker 0>They come up sometimes as an oddity, sort of.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:11:31.040 --> 00:11:33.200
<v Speaker 0>They allow you to do some proofs.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:11:33.680 --> 00:11:35.900
<v Speaker 0>You suddenly say, oh yeah, yeah, I've got Cramer's root

NOTE CONF {"raw":[99,80,100,100,93,99,100,100,99,67]}

00:11:35.900 --> 00:11:36.680
<v Speaker 0>and then everything.

NOTE CONF {"raw":[100,100,100]}

00:11:36.680 --> 00:11:37.670
<v Speaker 0>Everything works out.

NOTE CONF {"raw":[100,100,100]}

00:11:37.670 --> 00:11:41.120
<v Speaker 0>But I'm not really sure whether there's much practical applications

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:41.120 --> 00:11:41.540
<v Speaker 0>there.

NOTE CONF {"raw":[100]}

00:11:43.010 --> 00:11:43.610
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:11:43.610 --> 00:11:46.400
<v Speaker 0>So, um, things you should know how to do with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,88,100]}

00:11:46.400 --> 00:11:47.300
<v Speaker 0>determinants.

NOTE CONF {"raw":[100]}

00:11:47.850 --> 00:11:49.530
<v Speaker 0>Obviously calculating them.

NOTE CONF {"raw":[100,100,100]}

00:11:49.980 --> 00:11:52.470
<v Speaker 0>So we've got an explicit formula for two by two

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:52.470 --> 00:11:55.770
<v Speaker 0>matrices for higher dimensions.

NOTE CONF {"raw":[100,100,100,100]}

00:11:56.010 --> 00:11:58.740
<v Speaker 0>You typically want to expand by row columns, try to

NOTE CONF {"raw":[100,100,95,95,100,100,98,100,100,100]}

00:11:58.740 --> 00:12:02.910
<v Speaker 0>exploit zeros or in some cases actually doing row and

NOTE CONF {"raw":[100,86,100,100,100,100,100,100,100,100]}

00:12:02.910 --> 00:12:06.030
<v Speaker 0>column operations to try to bring the matrix into triangular

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:06.030 --> 00:12:06.600
<v Speaker 0>form.

NOTE CONF {"raw":[100]}

00:12:07.320 --> 00:12:10.770
<v Speaker 0>And then the determinant is just the mould, the, the

NOTE CONF {"raw":[100,100,100,100,100,100,100,54,79,100]}

00:12:10.770 --> 00:12:13.530
<v Speaker 0>the product of all the diagonal elements there.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:12:13.800 --> 00:12:16.920
<v Speaker 0>So that might be the best way actually most efficient

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:16.920 --> 00:12:21.990
<v Speaker 0>way here for general matrix rules for working with determinants.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:22.140 --> 00:12:25.620
<v Speaker 0>Um, so to some extent this is what you'd expect.

NOTE CONF {"raw":[79,100,100,100,100,100,100,100,100,100]}

00:12:25.800 --> 00:12:28.860
<v Speaker 0>Um I want to make you aware, um, first of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:28.860 --> 00:12:30.900
<v Speaker 0>all, maybe maybe the bottom one here.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:12:31.080 --> 00:12:33.570
<v Speaker 0>So you can take the product determinant of A and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:33.570 --> 00:12:37.320
<v Speaker 0>B apart here, um, which also means that within a

NOTE CONF {"raw":[72,45,84,75,100,100,100,100,100,100]}

00:12:37.320 --> 00:12:40.920
<v Speaker 0>determinant you can actually swap the order of matrices without

NOTE CONF {"raw":[100,100,85,100,100,100,100,100,100,100]}

00:12:40.920 --> 00:12:42.270
<v Speaker 0>changing the determinant.

NOTE CONF {"raw":[100,100,100]}

00:12:42.540 --> 00:12:42.810
<v Speaker 0>Yeah.

NOTE CONF {"raw":[48]}

00:12:42.810 --> 00:12:45.360
<v Speaker 0>That can be that can be really quite useful in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:45.360 --> 00:12:46.530
<v Speaker 0>a lot of things.

NOTE CONF {"raw":[100,100,100,100]}

00:12:46.580 --> 00:12:47.720
<v Speaker 0>Remember that.

NOTE CONF {"raw":[100,100]}

00:12:48.320 --> 00:12:51.170
<v Speaker 0>And the other one, if you take a factor k

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,99]}

00:12:51.170 --> 00:12:52.580
<v Speaker 0>out of the determinant.

NOTE CONF {"raw":[100,100,100,100]}

00:12:53.150 --> 00:12:54.260
<v Speaker 0>Now you might be used.

NOTE CONF {"raw":[100,100,100,100,100]}

00:12:54.260 --> 00:12:56.780
<v Speaker 0>We've talked about linear transformation a lot of stuff.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:12:56.780 --> 00:12:58.790
<v Speaker 0>If you take a factor out it's just the factor

NOTE CONF {"raw":[100,100,100,100,100,69,95,100,100,100]}

00:12:58.790 --> 00:12:59.600
<v Speaker 0>that stays there.

NOTE CONF {"raw":[100,100,100]}

00:12:59.600 --> 00:13:01.370
<v Speaker 0>That seems to be a natural thing.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:01.370 --> 00:13:03.860
<v Speaker 0>And you might think this works everywhere.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:04.250 --> 00:13:06.500
<v Speaker 0>Um, for determinants this doesn't work.

NOTE CONF {"raw":[88,100,100,100,94,100]}

00:13:06.710 --> 00:13:08.720
<v Speaker 0>If you take a factor out, it comes out with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,98]}

00:13:08.720 --> 00:13:10.460
<v Speaker 0>s k to the power of n.

NOTE CONF {"raw":[52,100,100,100,100,100,100]}

00:13:10.790 --> 00:13:13.010
<v Speaker 0>Now be aware of that easy mistake, mate.

NOTE CONF {"raw":[98,100,100,100,100,98,99,51]}

00:13:13.880 --> 00:13:16.940
<v Speaker 0>Um, so I said about effect of row column operations

NOTE CONF {"raw":[100,100,100,100,100,98,100,72,100,100]}

00:13:16.940 --> 00:13:17.960
<v Speaker 0>on the determinant.

NOTE CONF {"raw":[100,100,100]}

00:13:17.960 --> 00:13:21.560
<v Speaker 0>And this is used to determine whether a matrix is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:21.560 --> 00:13:22.400
<v Speaker 0>invertible.

NOTE CONF {"raw":[100]}

00:13:23.180 --> 00:13:23.870
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:13:23.870 --> 00:13:27.230
<v Speaker 0>So we use this to do vector geometry.

NOTE CONF {"raw":[100,100,89,100,100,100,100,100]}

00:13:28.610 --> 00:13:31.850
<v Speaker 0>Um, so we've had quite um, sort of these are

NOTE CONF {"raw":[98,100,100,100,100,58,100,100,100,100]}

00:13:31.850 --> 00:13:35.810
<v Speaker 0>various different lines and lines in our 2 or 3

NOTE CONF {"raw":[100,100,100,100,100,100,44,100,100,100]}

00:13:35.810 --> 00:13:39.980
<v Speaker 0>planes in R3 that we could describe by different forms

NOTE CONF {"raw":[100,100,96,100,100,100,100,100,100,100]}

00:13:40.340 --> 00:13:44.750
<v Speaker 0>of a parametric or normal version of these equations.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:13:44.750 --> 00:13:45.180
<v Speaker 0>Smell.

NOTE CONF {"raw":[41]}

00:13:45.600 --> 00:13:49.380
<v Speaker 0>So I, I claim that there's really only two that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:49.380 --> 00:13:50.940
<v Speaker 0>you have to have to work.

NOTE CONF {"raw":[100,100,100,100,100,61]}

00:13:50.970 --> 00:13:51.660
<v Speaker 0>Um, no.

NOTE CONF {"raw":[67,70]}

00:13:52.140 --> 00:13:55.140
<v Speaker 0>Um, one the normal form, um, and the other, which

NOTE CONF {"raw":[99,100,100,100,100,58,100,100,100,100]}

00:13:55.140 --> 00:13:56.310
<v Speaker 0>is here called vector form.

NOTE CONF {"raw":[100,100,100,100,100]}

00:13:56.310 --> 00:13:58.680
<v Speaker 0>I tend to think about this as the parametric form.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:59.250 --> 00:14:02.250
<v Speaker 0>So in the parametric form of vector form, you have

NOTE CONF {"raw":[100,63,100,100,100,100,100,100,100,100]}

00:14:02.250 --> 00:14:04.260
<v Speaker 0>a sort of one point on your line or a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:04.260 --> 00:14:04.800
<v Speaker 0>plane.

NOTE CONF {"raw":[100]}

00:14:05.460 --> 00:14:08.760
<v Speaker 0>Um, and then some vectors that give you direction which

NOTE CONF {"raw":[93,100,100,100,100,100,100,100,100,100]}

00:14:08.760 --> 00:14:10.500
<v Speaker 0>you can move along this plane.

NOTE CONF {"raw":[95,100,100,100,100,100]}

00:14:10.590 --> 00:14:14.730
<v Speaker 0>Now, um, the one that I have greyed out there,

NOTE CONF {"raw":[43,100,100,100,100,52,50,71,100,100]}

00:14:14.730 --> 00:14:17.040
<v Speaker 0>the parametric form is at the very bottom is really

NOTE CONF {"raw":[100,100,100,98,89,100,100,100,100,100]}

00:14:17.040 --> 00:14:20.130
<v Speaker 0>just the vector form written in components.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:14:20.610 --> 00:14:22.200
<v Speaker 0>There's nothing different going on.

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:22.200 --> 00:14:24.240
<v Speaker 0>It's just it's just different notation.

NOTE CONF {"raw":[92,100,100,100,100,100]}

00:14:25.080 --> 00:14:25.440
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:14:25.440 --> 00:14:26.400
<v Speaker 0>Going back.

NOTE CONF {"raw":[100,100]}

00:14:27.000 --> 00:14:30.600
<v Speaker 0>Now the normal form um, again you've got P here

NOTE CONF {"raw":[100,100,100,100,97,100,100,100,97,100]}

00:14:30.600 --> 00:14:34.230
<v Speaker 0>which is any point on your line or on the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:34.230 --> 00:14:34.890
<v Speaker 0>plane.

NOTE CONF {"raw":[100]}

00:14:35.550 --> 00:14:39.630
<v Speaker 0>Um, and then you, um, I just realised this.

NOTE CONF {"raw":[100,100,100,100,100,88,100,55,100]}

00:14:39.630 --> 00:14:41.280
<v Speaker 0>You should be the same P obviously.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:14:41.940 --> 00:14:44.160
<v Speaker 0>Um, and then you've got a normal vector vector which

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,100,100]}

00:14:44.160 --> 00:14:47.890
<v Speaker 0>is perpendicular to that line in R2 or to the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:47.890 --> 00:14:49.090
<v Speaker 0>plane and R3.

NOTE CONF {"raw":[100,100,100]}

00:14:49.210 --> 00:14:51.400
<v Speaker 0>Or actually, if you want to describe a line in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:51.400 --> 00:14:53.440
<v Speaker 0>R3 unit two of these vectors here.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:14:54.400 --> 00:14:55.210
<v Speaker 0>Um, right.

NOTE CONF {"raw":[100,90]}

00:14:55.210 --> 00:14:55.540
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:14:55.540 --> 00:14:57.190
<v Speaker 0>So you should know these forms.

NOTE CONF {"raw":[100,100,96,100,100,100]}

00:14:57.880 --> 00:14:58.720
<v Speaker 0>Uh, you should yeah.

NOTE CONF {"raw":[100,100,100,100]}

00:14:58.720 --> 00:15:00.550
<v Speaker 0>You should know all of these units.

NOTE CONF {"raw":[100,100,100,100,100,100,95]}

00:15:00.580 --> 00:15:02.620
<v Speaker 0>You should know how to set them up.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:15:02.620 --> 00:15:05.650
<v Speaker 0>You should know how to convert between one or the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:05.650 --> 00:15:08.770
<v Speaker 0>other using stuff like cross products or so that might

NOTE CONF {"raw":[100,100,100,100,96,96,92,100,100,100]}

00:15:08.770 --> 00:15:09.910
<v Speaker 0>be quite useful.

NOTE CONF {"raw":[100,100,100]}

00:15:10.450 --> 00:15:12.940
<v Speaker 0>Uh, you should also have a sort of intuitive feel

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:12.940 --> 00:15:16.240
<v Speaker 0>for them knowing what they really what they really tell

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:16.240 --> 00:15:17.170
<v Speaker 0>you, you know.

NOTE CONF {"raw":[86,100,90]}

00:15:17.320 --> 00:15:20.140
<v Speaker 0>So an example that I have here is the following.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:20.470 --> 00:15:23.290
<v Speaker 0>So if I've got a plane in R3 that goes

NOTE CONF {"raw":[100,100,96,100,100,100,100,100,100,100]}

00:15:23.290 --> 00:15:27.580
<v Speaker 0>through the origin, does that mean that the vector, the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,98]}

00:15:27.580 --> 00:15:30.400
<v Speaker 0>p here in the vector form has to be equal

NOTE CONF {"raw":[98,100,77,100,100,100,100,100,100,100]}

00:15:30.400 --> 00:15:31.210
<v Speaker 0>to zero?

NOTE CONF {"raw":[100,100]}

00:15:35.110 --> 00:15:37.390
<v Speaker 0>You know, it just has to be a scalar multiple

NOTE CONF {"raw":[97,97,100,100,100,100,100,100,100,100]}

00:15:37.870 --> 00:15:38.680
<v Speaker 0>direction vector.

NOTE CONF {"raw":[100,100]}

00:15:39.580 --> 00:15:40.360
<v Speaker 0>Doesn't necessarily.

NOTE CONF {"raw":[100,100]}

00:15:40.840 --> 00:15:41.200
<v Speaker 0>Yeah.

NOTE CONF {"raw":[100]}

00:15:41.710 --> 00:15:43.740
<v Speaker 0>It doesn't necessarily have to be zero.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:15:43.740 --> 00:15:47.070
<v Speaker 0>Yeah, the P in all these forms actually is just

NOTE CONF {"raw":[91,100,89,100,100,100,100,100,100,100]}

00:15:47.250 --> 00:15:50.820
<v Speaker 0>one point on the plane or on the line.

NOTE CONF {"raw":[100,100,100,100,97,100,100,100,100]}

00:15:50.820 --> 00:15:51.900
<v Speaker 0>It could be the origin.

NOTE CONF {"raw":[100,100,100,100,100]}

00:15:52.020 --> 00:15:54.210
<v Speaker 0>And indeed, if I see that the P is zero,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:54.210 --> 00:15:57.060
<v Speaker 0>that it must go through the origin, but otherwise it

NOTE CONF {"raw":[89,100,100,100,100,100,100,100,100,100]}

00:15:57.060 --> 00:15:57.810
<v Speaker 0>could just be any.

NOTE CONF {"raw":[100,100,100,100]}

00:15:57.810 --> 00:15:58.830
<v Speaker 0>There's plenty of others.

NOTE CONF {"raw":[98,100,96,100]}

00:15:58.830 --> 00:15:59.190
<v Speaker 0>Yeah.

NOTE CONF {"raw":[58]}

00:15:59.310 --> 00:16:02.100
<v Speaker 0>So know that these things, what they stand for and

NOTE CONF {"raw":[100,85,100,100,100,100,100,100,100,100]}

00:16:02.100 --> 00:16:04.440
<v Speaker 0>what, what what they actually try to encode them.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:16:04.590 --> 00:16:04.860
<v Speaker 0>Mhm.

NOTE CONF {"raw":[71]}

00:16:06.180 --> 00:16:06.630
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:16:06.630 --> 00:16:07.140
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:16:07.140 --> 00:16:10.860
<v Speaker 0>So um to some extent the vector geometry is a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:10.860 --> 00:16:13.950
<v Speaker 0>bit unrelated to the rest of Illus in this application.

NOTE CONF {"raw":[100,100,100,100,100,100,75,58,79,100]}

00:16:13.950 --> 00:16:16.800
<v Speaker 0>But it is important in other areas, you know, so

NOTE CONF {"raw":[100,100,100,100,100,100,100,49,49,100]}

00:16:16.800 --> 00:16:19.320
<v Speaker 0>there's quite a bit of sort of physics engineering, machine

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:19.320 --> 00:16:21.960
<v Speaker 0>learning actually uses quite a lot of ideas from vector

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:21.960 --> 00:16:22.770
<v Speaker 0>geometry.

NOTE CONF {"raw":[100]}

00:16:23.370 --> 00:16:26.130
<v Speaker 0>Um, obviously something like computer graphics or so.

NOTE CONF {"raw":[98,100,100,100,100,100,100,100]}

00:16:26.130 --> 00:16:28.110
<v Speaker 0>Um, you tend to do these things.

NOTE CONF {"raw":[81,100,100,100,100,100,100]}

00:16:28.290 --> 00:16:31.440
<v Speaker 0>So things you should know how to do is uh,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:31.440 --> 00:16:37.080
<v Speaker 0>like calculating cross product, scalar product, determining angles between lines

NOTE CONF {"raw":[90,100,50,50,100,100,100,100,100,100]}

00:16:37.080 --> 00:16:40.260
<v Speaker 0>and planes, determining volume of certain things.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:16:40.590 --> 00:16:46.150
<v Speaker 0>Uh, calculate Projections onto lines, planes being able to calculate

NOTE CONF {"raw":[84,100,100,100,100,100,100,100,100,100]}

00:16:46.150 --> 00:16:48.880
<v Speaker 0>the length of a vector or distances.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:16:48.910 --> 00:16:52.870
<v Speaker 0>Now the theory that that leads into is the I

NOTE CONF {"raw":[49,100,100,100,97,100,100,100,98,86]}

00:16:52.870 --> 00:16:55.090
<v Speaker 0>have put down here the triangle inequality.

NOTE CONF {"raw":[86,100,100,100,100,100,100]}

00:16:55.720 --> 00:16:58.060
<v Speaker 0>That is something again that comes up everywhere.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:16:58.090 --> 00:17:01.870
<v Speaker 0>The triangle inequality in all places where you don't expect

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:01.870 --> 00:17:04.300
<v Speaker 0>that there have nothing to do with geometry.

NOTE CONF {"raw":[100,79,100,100,100,100,100,100]}

00:17:04.300 --> 00:17:07.480
<v Speaker 0>It's a very, very powerful theoretical tool.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:17:08.350 --> 00:17:10.839
<v Speaker 0>And one thing that I wanted to make you aware

NOTE CONF {"raw":[100,100,100,100,100,97,100,100,100,100]}

00:17:10.839 --> 00:17:15.069
<v Speaker 0>here is if I look at those that are highlighted

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,96,100]}

00:17:15.069 --> 00:17:20.290
<v Speaker 0>in red here, um, scalar product determining angles, length of

NOTE CONF {"raw":[100,100,100,98,95,95,95,100,98,100]}

00:17:20.290 --> 00:17:23.170
<v Speaker 0>vectors, distances, projections.

NOTE CONF {"raw":[100,100,100]}

00:17:23.170 --> 00:17:26.230
<v Speaker 0>And if we're talking about length and the triangle inequality,

NOTE CONF {"raw":[100,100,90,100,100,100,98,100,100,100]}

00:17:26.800 --> 00:17:30.550
<v Speaker 0>all of those really rely on and only rely on

NOTE CONF {"raw":[100,80,100,100,100,100,100,100,100,100]}

00:17:30.550 --> 00:17:31.810
<v Speaker 0>the scalar product.

NOTE CONF {"raw":[100,100,100]}

00:17:32.590 --> 00:17:34.780
<v Speaker 0>You know, if I know a scalar product between two

NOTE CONF {"raw":[67,67,100,100,100,81,100,100,100,100]}

00:17:34.780 --> 00:17:37.540
<v Speaker 0>vectors, I can work out all of these.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:17:38.410 --> 00:17:40.330
<v Speaker 0>I don't need to know anything else about what a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,92]}

00:17:40.330 --> 00:17:41.660
<v Speaker 0>length, what the distance is or so.

NOTE CONF {"raw":[100,90,100,96,47,91,96]}

00:17:41.810 --> 00:17:44.390
<v Speaker 0>I only need to know what a scalar product is.

NOTE CONF {"raw":[94,100,100,100,100,100,100,100,100,100]}

00:17:44.750 --> 00:17:46.490
<v Speaker 0>Now I can generalise these.

NOTE CONF {"raw":[100,100,100,100,94]}

00:17:46.490 --> 00:17:48.290
<v Speaker 0>So I say all of these depend on the scalar

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:48.290 --> 00:17:48.920
<v Speaker 0>product.

NOTE CONF {"raw":[100]}

00:17:49.340 --> 00:17:51.530
<v Speaker 0>I said we can work in other vector space.

NOTE CONF {"raw":[100,77,100,100,100,100,100,100,100]}

00:17:51.560 --> 00:17:53.060
<v Speaker 0>It doesn't have to be the real number.

NOTE CONF {"raw":[97,100,100,100,100,100,100,100]}

00:17:53.060 --> 00:17:55.190
<v Speaker 0>I can for example a function space is a really

NOTE CONF {"raw":[100,100,100,100,58,91,95,95,95,100]}

00:17:55.190 --> 00:17:56.060
<v Speaker 0>odd things.

NOTE CONF {"raw":[100,100]}

00:17:56.510 --> 00:17:59.570
<v Speaker 0>As long as I can determine or define something that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:59.570 --> 00:18:03.800
<v Speaker 0>is a scalar product in them, I automatically get all

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:03.800 --> 00:18:07.220
<v Speaker 0>of these, get projections, get length of vectors, get angles,

NOTE CONF {"raw":[100,100,100,94,100,100,95,100,100,100]}

00:18:07.220 --> 00:18:09.200
<v Speaker 0>and something like that that I can define in all

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,94,100]}

00:18:09.200 --> 00:18:09.740
<v Speaker 0>of these things.

NOTE CONF {"raw":[100,100,100]}

00:18:09.740 --> 00:18:12.800
<v Speaker 0>So I can can define angles between two functions for

NOTE CONF {"raw":[100,100,70,100,100,100,100,100,100,100]}

00:18:12.800 --> 00:18:14.870
<v Speaker 0>example, and things like that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:18:15.260 --> 00:18:17.960
<v Speaker 0>And these tend to be quite useful actually.

NOTE CONF {"raw":[97,100,100,100,100,100,100,100]}

00:18:18.530 --> 00:18:19.850
<v Speaker 0>So be aware of that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:18:20.480 --> 00:18:22.460
<v Speaker 0>Scalar product is quite important.

NOTE CONF {"raw":[100,100,100,100,100]}

00:18:22.910 --> 00:18:25.100
<v Speaker 0>Stuff like the draw of generalisation is what is called

NOTE CONF {"raw":[100,100,100,41,66,98,100,100,100,100]}

00:18:25.100 --> 00:18:26.120
<v Speaker 0>a Hilbert space.

NOTE CONF {"raw":[100,100,100]}

00:18:26.840 --> 00:18:29.120
<v Speaker 0>That's a vector space with a scalar product.

NOTE CONF {"raw":[93,88,100,100,100,100,100,100]}

00:18:29.330 --> 00:18:31.580
<v Speaker 0>And at least those of you who are doing mathematicians

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:31.580 --> 00:18:32.840
<v Speaker 0>will will see them.

NOTE CONF {"raw":[100,100,100,100]}

00:18:34.520 --> 00:18:38.060
<v Speaker 0>Okay, so I'm starting to get a little bit more

NOTE CONF {"raw":[100,95,78,100,100,100,100,100,100,100]}

00:18:38.060 --> 00:18:39.080
<v Speaker 0>abstract.

NOTE CONF {"raw":[100]}

00:18:39.600 --> 00:18:42.690
<v Speaker 0>Um, so the next thing is linear transformations.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:18:44.100 --> 00:18:44.700
<v Speaker 0>Um, right.

NOTE CONF {"raw":[100,100]}

00:18:44.700 --> 00:18:44.940
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:18:44.940 --> 00:18:45.870
<v Speaker 0>This is quite small.

NOTE CONF {"raw":[100,100,100,100]}

00:18:45.870 --> 00:18:46.560
<v Speaker 0>You've seen this.

NOTE CONF {"raw":[98,100,100]}

00:18:46.560 --> 00:18:48.540
<v Speaker 0>This is a page from Nicholson again.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:18:49.380 --> 00:18:53.820
<v Speaker 0>Um, so a linear transformation, um, is a transformation of

NOTE CONF {"raw":[100,100,97,100,100,100,100,72,100,95]}

00:18:53.820 --> 00:18:57.870
<v Speaker 0>it if it satisfies these two axioms that we had

NOTE CONF {"raw":[95,100,100,100,100,100,100,100,100,100]}

00:18:58.140 --> 00:19:01.050
<v Speaker 0>and we talked about this, that they preserve addition and

NOTE CONF {"raw":[89,100,100,100,93,100,55,99,99,100]}

00:19:01.050 --> 00:19:02.550
<v Speaker 0>scalar multiplication.

NOTE CONF {"raw":[100,100]}

00:19:02.550 --> 00:19:05.340
<v Speaker 0>Now I talked about this in the context here of

NOTE CONF {"raw":[72,69,100,100,100,100,100,100,100,100]}

00:19:05.340 --> 00:19:07.440
<v Speaker 0>the determinant which isn't linear.

NOTE CONF {"raw":[100,100,100,92,100]}

00:19:07.680 --> 00:19:10.620
<v Speaker 0>But typically if I've gotten a and take that out,

NOTE CONF {"raw":[100,100,100,97,58,100,100,100,100,100]}

00:19:10.620 --> 00:19:13.530
<v Speaker 0>it just stays less than a um, and I can

NOTE CONF {"raw":[84,73,100,100,91,100,60,100,100,100]}

00:19:13.530 --> 00:19:17.520
<v Speaker 0>break up an addition between two vectors by just adding

NOTE CONF {"raw":[100,100,70,84,100,100,100,100,100,100]}

00:19:17.520 --> 00:19:18.570
<v Speaker 0>their, their things.

NOTE CONF {"raw":[71,68,100]}

00:19:19.530 --> 00:19:22.380
<v Speaker 0>So the important thing we had about them was this

NOTE CONF {"raw":[100,100,100,100,100,98,100,100,100,100]}

00:19:22.380 --> 00:19:26.940
<v Speaker 0>theorem here, um, which says the main thing here is

NOTE CONF {"raw":[100,100,88,100,100,100,100,100,100,100]}

00:19:26.940 --> 00:19:29.940
<v Speaker 0>if I've got a linear transformation or a linear transformation

NOTE CONF {"raw":[100,100,100,100,100,100,100,58,100,99]}

00:19:29.940 --> 00:19:32.610
<v Speaker 0>is linear if and only if it is a matrix

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:19:32.610 --> 00:19:33.540
<v Speaker 0>transformation.

NOTE CONF {"raw":[100]}

00:19:33.870 --> 00:19:38.250
<v Speaker 0>So matrices and linear transformation to some extent are the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:38.250 --> 00:19:39.080
<v Speaker 0>same thing.

NOTE CONF {"raw":[100,100]}

00:19:40.310 --> 00:19:42.470
<v Speaker 0>So I said at the beginning, we can think about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:42.650 --> 00:19:46.190
<v Speaker 0>one question that this course addresses is what are actually

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:46.190 --> 00:19:47.030
<v Speaker 0>matrices?

NOTE CONF {"raw":[100]}

00:19:47.720 --> 00:19:49.250
<v Speaker 0>And so this is one answer.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:49.280 --> 00:19:51.890
<v Speaker 0>A matrix is a linear transformation or can describe a

NOTE CONF {"raw":[91,100,100,100,100,100,100,100,100,100]}

00:19:51.890 --> 00:19:53.120
<v Speaker 0>linear transformation.

NOTE CONF {"raw":[100,100]}

00:19:54.740 --> 00:19:55.340
<v Speaker 0>Right okay.

NOTE CONF {"raw":[100,100]}

00:19:55.340 --> 00:19:57.860
<v Speaker 0>The other thing is that is quite useful is that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:57.860 --> 00:20:00.830
<v Speaker 0>this theorem tell you if I know the effect of

NOTE CONF {"raw":[100,100,58,98,100,100,100,100,100,100]}

00:20:00.830 --> 00:20:04.730
<v Speaker 0>a linear transformation on some vectors, I can actually write

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:04.730 --> 00:20:05.750
<v Speaker 0>on the matrix.

NOTE CONF {"raw":[78,100,100]}

00:20:06.080 --> 00:20:06.440
<v Speaker 0>Yeah.

NOTE CONF {"raw":[63]}

00:20:06.500 --> 00:20:10.460
<v Speaker 0>And indeed I think I have that right.

NOTE CONF {"raw":[100,100,100,100,100,100,67,100]}

00:20:10.460 --> 00:20:10.700
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:20:10.700 --> 00:20:11.630
<v Speaker 0>I'll come back to that.

NOTE CONF {"raw":[99,100,100,100,100]}

00:20:11.960 --> 00:20:16.760
<v Speaker 0>So some trivial examples of linear transformations where like the

NOTE CONF {"raw":[100,100,100,100,100,100,100,73,100,100]}

00:20:16.760 --> 00:20:19.370
<v Speaker 0>identity if I don't don't do anything that's a linear

NOTE CONF {"raw":[100,100,100,100,100,100,100,94,56,100]}

00:20:19.370 --> 00:20:20.420
<v Speaker 0>transformation.

NOTE CONF {"raw":[100]}

00:20:21.230 --> 00:20:23.480
<v Speaker 0>If I met everything to the zero vector, that's the

NOTE CONF {"raw":[100,99,65,100,100,100,100,100,96,74]}

00:20:23.480 --> 00:20:24.770
<v Speaker 0>linear transformation.

NOTE CONF {"raw":[100,100]}

00:20:25.130 --> 00:20:27.770
<v Speaker 0>Um, note that that only works for the zero vector.

NOTE CONF {"raw":[100,100,100,92,100,100,96,100,100,100]}

00:20:28.490 --> 00:20:32.090
<v Speaker 0>Um, if I map everything to another fixed vector that

NOTE CONF {"raw":[72,100,100,100,100,100,100,100,100,100]}

00:20:32.090 --> 00:20:33.860
<v Speaker 0>isn't zero, that isn't linear.

NOTE CONF {"raw":[100,100,100,99,100]}

00:20:34.550 --> 00:20:38.550
<v Speaker 0>You know, we did say one easy way of recognising

NOTE CONF {"raw":[57,57,100,100,100,100,100,100,100,83]}

00:20:38.550 --> 00:20:39.990
<v Speaker 0>them is a linear transformation.

NOTE CONF {"raw":[100,83,100,100,100]}

00:20:39.990 --> 00:20:41.910
<v Speaker 0>Must map 0 to 0.

NOTE CONF {"raw":[100,100,100,100,100]}

00:20:42.780 --> 00:20:46.080
<v Speaker 0>Anything that doesn't do that can it cannot be linear.

NOTE CONF {"raw":[100,100,97,100,100,55,52,100,100,100]}

00:20:46.290 --> 00:20:46.560
<v Speaker 0>Yep.

NOTE CONF {"raw":[55]}

00:20:47.670 --> 00:20:48.240
<v Speaker 0>Um.

NOTE CONF {"raw":[100]}

00:20:48.240 --> 00:20:50.010
<v Speaker 0>Scalar multiplication.

NOTE CONF {"raw":[100,100]}

00:20:50.250 --> 00:20:54.210
<v Speaker 0>Um, so also if I'm scaling so say everything, I

NOTE CONF {"raw":[87,100,100,100,100,100,100,100,100,96]}

00:20:54.210 --> 00:20:55.740
<v Speaker 0>double every vector.

NOTE CONF {"raw":[100,100,100]}

00:20:55.740 --> 00:20:57.420
<v Speaker 0>That's a linear transformation.

NOTE CONF {"raw":[100,100,100,100]}

00:20:57.420 --> 00:20:59.550
<v Speaker 0>I can have different scales in different directions.

NOTE CONF {"raw":[100,68,68,100,100,79,100,100]}

00:20:59.730 --> 00:21:02.970
<v Speaker 0>I can double the x component and multiply the y

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:02.970 --> 00:21:04.260
<v Speaker 0>component by three.

NOTE CONF {"raw":[100,100,100]}

00:21:04.830 --> 00:21:07.530
<v Speaker 0>Um that will also give me a linear transformation.

NOTE CONF {"raw":[100,100,100,100,100,100,88,100,100]}

00:21:07.920 --> 00:21:08.970
<v Speaker 0>Um so these works.

NOTE CONF {"raw":[44,100,100,100]}

00:21:09.360 --> 00:21:13.760
<v Speaker 0>Translation is not a linear transformation doesn't map 0 to

NOTE CONF {"raw":[100,100,100,100,100,100,89,100,100,100]}

00:21:13.760 --> 00:21:14.040
<v Speaker 0>0.

NOTE CONF {"raw":[100]}

00:21:14.040 --> 00:21:17.190
<v Speaker 0>So just moving everything to the side isn't linear.

NOTE CONF {"raw":[100,89,100,100,100,100,100,94,100]}

00:21:19.260 --> 00:21:20.700
<v Speaker 0>Uh, projections are linear.

NOTE CONF {"raw":[100,100,100,100]}

00:21:21.390 --> 00:21:25.470
<v Speaker 0>Um, we have this weird property there that, um, a

NOTE CONF {"raw":[100,100,80,100,100,100,100,100,100,100]}

00:21:25.620 --> 00:21:28.560
<v Speaker 0>transformation is defined to be a projection.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:21:28.560 --> 00:21:32.400
<v Speaker 0>If I apply twice, it's the same as applying it

NOTE CONF {"raw":[100,100,99,100,100,100,100,100,100,100]}

00:21:32.400 --> 00:21:32.970
<v Speaker 0>once.

NOTE CONF {"raw":[100]}

00:21:33.390 --> 00:21:35.040
<v Speaker 0>Um, which is a funny sort of.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:21:35.520 --> 00:21:37.360
<v Speaker 0>You can think about it and think that this is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:37.360 --> 00:21:37.750
<v Speaker 0>true.

NOTE CONF {"raw":[100]}

00:21:37.750 --> 00:21:40.510
<v Speaker 0>But it's again, a sort of funny thing about defining

NOTE CONF {"raw":[100,94,100,100,100,100,100,100,100,100]}

00:21:40.510 --> 00:21:43.810
<v Speaker 0>things by their properties rather than telling you directly what

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:43.810 --> 00:21:44.350
<v Speaker 0>they are.

NOTE CONF {"raw":[100,100]}

00:21:45.400 --> 00:21:47.770
<v Speaker 0>Um, rotations are linear transformations.

NOTE CONF {"raw":[51,100,100,100,100]}

00:21:47.980 --> 00:21:50.530
<v Speaker 0>Now that's a that's a big example.

NOTE CONF {"raw":[77,100,98,100,100,100,100]}

00:21:50.950 --> 00:21:55.360
<v Speaker 0>Um, I haven't put on, but, uh, like mirroring reflections

NOTE CONF {"raw":[98,100,100,100,100,100,85,100,100,100]}

00:21:55.360 --> 00:21:56.980
<v Speaker 0>or also linear transformations.

NOTE CONF {"raw":[98,88,100,100]}

00:21:56.980 --> 00:21:57.850
<v Speaker 0>Be aware of this.

NOTE CONF {"raw":[89,100,100,100]}

00:21:58.840 --> 00:22:00.910
<v Speaker 0>Uh, now I've got a rotation there and I say

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,98,100]}

00:22:00.910 --> 00:22:02.980
<v Speaker 0>rotation by theta degrees.

NOTE CONF {"raw":[100,100,100,100]}

00:22:03.190 --> 00:22:05.890
<v Speaker 0>Um, so the obvious question if I say that is

NOTE CONF {"raw":[91,100,100,100,100,100,100,100,100,82]}

00:22:05.890 --> 00:22:08.290
<v Speaker 0>this clockwise or anti-clockwise?

NOTE CONF {"raw":[100,100,100,49]}

00:22:11.860 --> 00:22:13.150
<v Speaker 0>You say anti-clockwise.

NOTE CONF {"raw":[100,100,56]}

00:22:14.530 --> 00:22:16.180
<v Speaker 0>It's a relatively safe answer.

NOTE CONF {"raw":[92,100,100,100,100]}

00:22:16.180 --> 00:22:16.390
<v Speaker 0>Yeah.

NOTE CONF {"raw":[93]}

00:22:16.420 --> 00:22:19.840
<v Speaker 0>Typically, typically, if I don't say anything in mathematics, I

NOTE CONF {"raw":[100,100,100,100,76,100,100,100,100,100]}

00:22:19.840 --> 00:22:21.730
<v Speaker 0>always assume it's going to be anticlockwise.

NOTE CONF {"raw":[100,100,100,100,100,100,79]}

00:22:22.570 --> 00:22:26.140
<v Speaker 0>Um, I might have tried to confuse you, but this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:26.140 --> 00:22:27.580
<v Speaker 0>is actually anticlockwise.

NOTE CONF {"raw":[100,100,77]}

00:22:27.790 --> 00:22:29.470
<v Speaker 0>This is the matrix for anticlockwise.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:22:29.560 --> 00:22:30.850
<v Speaker 0>How would I check that?

NOTE CONF {"raw":[100,100,100,92,100]}

00:22:39.090 --> 00:22:41.730
<v Speaker 0>So I said here the second part of this theorem,

NOTE CONF {"raw":[100,89,71,99,100,100,100,100,100,100]}

00:22:41.730 --> 00:22:43.950
<v Speaker 0>that all I need to know is what the matrix

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:43.950 --> 00:22:47.010
<v Speaker 0>or what the transformation does on the basis vectors.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:22:48.000 --> 00:22:50.460
<v Speaker 0>Um, so it's fully specified by the image of the

NOTE CONF {"raw":[69,100,95,100,100,100,100,100,100,100]}

00:22:50.460 --> 00:22:53.520
<v Speaker 0>basis vectors actually with respect to any basis.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:22:53.910 --> 00:22:56.550
<v Speaker 0>Uh, we've done this here with respect to the standard

NOTE CONF {"raw":[79,100,100,100,100,100,100,100,100,100]}

00:22:56.550 --> 00:22:59.280
<v Speaker 0>basis, but you could do this with any basis.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:22:59.280 --> 00:23:00.360
<v Speaker 0>It would still work.

NOTE CONF {"raw":[97,100,100,100]}

00:23:00.840 --> 00:23:01.110
<v Speaker 0>Yeah.

NOTE CONF {"raw":[92]}

00:23:01.110 --> 00:23:03.810
<v Speaker 0>So, um, so we have the following there that we

NOTE CONF {"raw":[100,100,100,100,80,100,100,100,100,100]}

00:23:03.810 --> 00:23:06.180
<v Speaker 0>say if we've got a transformation that maps the first

NOTE CONF {"raw":[100,100,58,100,100,100,100,100,100,100]}

00:23:06.180 --> 00:23:09.150
<v Speaker 0>basis vector to AC and the second one for to

NOTE CONF {"raw":[100,100,100,97,100,100,100,100,100,93]}

00:23:09.150 --> 00:23:13.560
<v Speaker 0>BD, well then it must have a C and BD

NOTE CONF {"raw":[93,100,100,100,100,100,95,95,100,97]}

00:23:13.560 --> 00:23:17.280
<v Speaker 0>as its columns, which you can quickly sort of satisfy.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:17.280 --> 00:23:20.640
<v Speaker 0>If I multiply this out one zero times that makes

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,58]}

00:23:20.640 --> 00:23:24.570
<v Speaker 0>it gives me AC01 times that makes this gives me

NOTE CONF {"raw":[67,100,100,32,100,100,100,100,100,100]}

00:23:24.570 --> 00:23:25.170
<v Speaker 0>bd.

NOTE CONF {"raw":[92]}

00:23:25.170 --> 00:23:27.030
<v Speaker 0>So that must be the matrix here.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:23:27.150 --> 00:23:29.280
<v Speaker 0>So I can now go and apply that to the

NOTE CONF {"raw":[100,100,100,100,100,68,100,100,100,100]}

00:23:29.280 --> 00:23:33.480
<v Speaker 0>rotation and think well what does the rotation do if

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:33.480 --> 00:23:35.320
<v Speaker 0>I have the first unit vector there.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:23:35.320 --> 00:23:39.400
<v Speaker 0>So this one here, um on rotate that by theta

NOTE CONF {"raw":[100,100,100,100,72,100,100,100,100,100]}

00:23:39.400 --> 00:23:41.200
<v Speaker 0>degrees anti-clockwise.

NOTE CONF {"raw":[100,70]}

00:23:41.200 --> 00:23:43.540
<v Speaker 0>That will give me this green one there.

NOTE CONF {"raw":[62,62,100,100,100,100,100,100]}

00:23:44.350 --> 00:23:46.450
<v Speaker 0>Um, and then I need to do a little bit

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:46.450 --> 00:23:50.080
<v Speaker 0>of trigonometry and realise that those components are actually the

NOTE CONF {"raw":[100,100,100,62,100,100,100,100,100,100]}

00:23:50.080 --> 00:23:51.610
<v Speaker 0>cos and the sine.

NOTE CONF {"raw":[97,100,100,93]}

00:23:51.610 --> 00:23:54.760
<v Speaker 0>So that's got to be the first column of my

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:54.760 --> 00:23:55.480
<v Speaker 0>matrix.

NOTE CONF {"raw":[100]}

00:23:56.200 --> 00:23:58.240
<v Speaker 0>And I can do the same with the other unit

NOTE CONF {"raw":[100,100,86,100,100,100,100,100,100,100]}

00:23:58.240 --> 00:23:58.990
<v Speaker 0>vector.

NOTE CONF {"raw":[100]}

00:23:59.500 --> 00:24:01.030
<v Speaker 0>And that gives me the other one.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:24:01.270 --> 00:24:03.610
<v Speaker 0>So if you want to know something about a matrix

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:03.610 --> 00:24:05.110
<v Speaker 0>what transformation is it.

NOTE CONF {"raw":[100,100,100,92]}

00:24:05.110 --> 00:24:07.690
<v Speaker 0>If you've got a transformation want to know what matrix

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:07.690 --> 00:24:08.230
<v Speaker 0>is it?

NOTE CONF {"raw":[100,94]}

00:24:08.230 --> 00:24:11.500
<v Speaker 0>First thing probably is just look at the unit vectors.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:11.860 --> 00:24:15.100
<v Speaker 0>That typically tells you everything you need to know about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:15.100 --> 00:24:16.210
<v Speaker 0>what's going on here.

NOTE CONF {"raw":[100,100,100,100]}

00:24:18.010 --> 00:24:18.670
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:24:18.670 --> 00:24:22.330
<v Speaker 0>So, um, things you should be able to do, um,

NOTE CONF {"raw":[100,87,89,100,100,100,100,100,100,100]}

00:24:22.330 --> 00:24:24.820
<v Speaker 0>determine if I give you a transformation or describe a

NOTE CONF {"raw":[100,100,100,100,100,88,100,100,100,100]}

00:24:24.820 --> 00:24:27.010
<v Speaker 0>transformation, should be able to tell me whether this is

NOTE CONF {"raw":[100,100,100,100,100,99,99,100,83,83]}

00:24:27.010 --> 00:24:27.790
<v Speaker 0>linear or not.

NOTE CONF {"raw":[100,100,100]}

00:24:28.600 --> 00:24:31.900
<v Speaker 0>Um, similarly, it should be able to find the matrix.

NOTE CONF {"raw":[100,100,39,38,100,100,100,100,100,100]}

00:24:32.560 --> 00:24:34.430
<v Speaker 0>Um, just showed you how to do that.

NOTE CONF {"raw":[87,100,90,100,100,100,100,100]}

00:24:34.460 --> 00:24:36.200
<v Speaker 0>You said to some extent be able to go the

NOTE CONF {"raw":[92,100,100,100,100,100,100,100,100,100]}

00:24:36.200 --> 00:24:37.100
<v Speaker 0>other way around.

NOTE CONF {"raw":[100,100,91]}

00:24:37.400 --> 00:24:40.190
<v Speaker 0>Describe the transformation defined by a given matrix.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:24:40.220 --> 00:24:42.320
<v Speaker 0>Now, we haven't done that completely.

NOTE CONF {"raw":[91,100,96,100,100,100]}

00:24:43.250 --> 00:24:45.680
<v Speaker 0>Um, like complete that I have given you a set

NOTE CONF {"raw":[100,100,100,100,52,52,100,100,100,83]}

00:24:45.680 --> 00:24:46.160
<v Speaker 0>of rules.

NOTE CONF {"raw":[100,90]}

00:24:46.520 --> 00:24:48.290
<v Speaker 0>It's come up in different ways.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:24:48.590 --> 00:24:49.940
<v Speaker 0>So I'll just say this here.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:24:50.150 --> 00:24:52.940
<v Speaker 0>I say a little bit more later when I talk

NOTE CONF {"raw":[58,100,100,100,100,100,100,100,100,100]}

00:24:52.940 --> 00:24:54.200
<v Speaker 0>about eigenvalues.

NOTE CONF {"raw":[100,100]}

00:24:55.160 --> 00:24:58.100
<v Speaker 0>Um, we've talked a bit about concatenation of two matrix

NOTE CONF {"raw":[100,77,100,100,100,100,100,100,100,100]}

00:24:58.100 --> 00:25:00.050
<v Speaker 0>transformations again.

NOTE CONF {"raw":[100,83]}

00:25:00.230 --> 00:25:02.360
<v Speaker 0>If in doubt, have a look at what happens to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:02.360 --> 00:25:03.410
<v Speaker 0>the unit vectors.

NOTE CONF {"raw":[100,100,100]}

00:25:04.760 --> 00:25:06.500
<v Speaker 0>Um that usually will get you there.

NOTE CONF {"raw":[66,100,100,93,100,100,100]}

00:25:07.550 --> 00:25:09.800
<v Speaker 0>Um theorems or theory.

NOTE CONF {"raw":[100,100,100,100]}

00:25:10.100 --> 00:25:15.200
<v Speaker 0>Um, the definition obviously of linearity being able to apply

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:15.200 --> 00:25:15.740
<v Speaker 0>them.

NOTE CONF {"raw":[100]}

00:25:16.370 --> 00:25:19.040
<v Speaker 0>Um, so that means if I do know this image

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:19.040 --> 00:25:21.800
<v Speaker 0>x and y of x and y, I actually know

NOTE CONF {"raw":[100,100,100,100,100,100,100,96,100,100]}

00:25:21.800 --> 00:25:23.720
<v Speaker 0>the image of x plus y.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:25:24.980 --> 00:25:28.220
<v Speaker 0>Um, that might be hidden in some way or so,

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:25:28.220 --> 00:25:31.040
<v Speaker 0>but, um, that's a useful thing to know.

NOTE CONF {"raw":[100,89,100,86,100,100,100,100]}

00:25:31.970 --> 00:25:35.310
<v Speaker 0>Um, it's completely defined by its action on the basis

NOTE CONF {"raw":[100,95,100,100,100,100,100,100,100,100]}

00:25:35.310 --> 00:25:37.110
<v Speaker 0>vector set that a few times.

NOTE CONF {"raw":[93,98,100,97,100,100]}

00:25:37.200 --> 00:25:40.770
<v Speaker 0>Another thing, because linear transformation are the same as matrixes,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:40.770 --> 00:25:43.500
<v Speaker 0>they allow you to determine whether a matrix is invertible

NOTE CONF {"raw":[100,100,100,100,100,100,97,100,100,100]}

00:25:44.010 --> 00:25:47.880
<v Speaker 0>by thinking, whether the linear transformation that it describes can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:47.880 --> 00:25:48.810
<v Speaker 0>be undone.

NOTE CONF {"raw":[100,100]}

00:25:49.200 --> 00:25:50.730
<v Speaker 0>You know, a rotation.

NOTE CONF {"raw":[95,95,100,100]}

00:25:50.730 --> 00:25:52.860
<v Speaker 0>If I rotate, I can rotate back.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:25:53.010 --> 00:25:53.310
<v Speaker 0>Yeah.

NOTE CONF {"raw":[88]}

00:25:53.520 --> 00:25:54.300
<v Speaker 0>No problem.

NOTE CONF {"raw":[100,100]}

00:25:54.300 --> 00:25:57.540
<v Speaker 0>If I mirror a reflection of a if I reflect,

NOTE CONF {"raw":[100,100,100,100,100,96,76,100,99,100]}

00:25:57.540 --> 00:25:58.980
<v Speaker 0>I can reflect back again.

NOTE CONF {"raw":[100,100,100,100,100]}

00:25:58.980 --> 00:26:01.830
<v Speaker 0>No problem on doing that a projection.

NOTE CONF {"raw":[100,100,96,96,100,100,100]}

00:26:01.830 --> 00:26:04.620
<v Speaker 0>If I project, I can't undo it.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:26:04.620 --> 00:26:07.110
<v Speaker 0>At least I don't know exactly where I've come from.

NOTE CONF {"raw":[100,100,100,85,100,100,100,100,100,100]}

00:26:07.110 --> 00:26:09.690
<v Speaker 0>Yeah, so the projection cannot be invertible.

NOTE CONF {"raw":[74,97,69,100,100,100,100]}

00:26:10.260 --> 00:26:12.960
<v Speaker 0>Again, this is a nice test to see whether stuff

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:12.960 --> 00:26:14.250
<v Speaker 0>is invertible or not.

NOTE CONF {"raw":[100,100,100,100]}

00:26:15.750 --> 00:26:16.410
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:26:16.410 --> 00:26:18.540
<v Speaker 0>So after that we've sort of gone really to the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:18.540 --> 00:26:23.730
<v Speaker 0>sort of more abstract part of things, um, subspaces basis,

NOTE CONF {"raw":[100,100,100,100,99,100,100,100,93,63]}

00:26:23.730 --> 00:26:27.000
<v Speaker 0>linear independence, rank nullity, all these things.

NOTE CONF {"raw":[100,100,100,100,95,100,100]}

00:26:27.000 --> 00:26:29.790
<v Speaker 0>So we've done a few things about subspaces.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:26:30.660 --> 00:26:32.960
<v Speaker 0>Um, so again, we sort of have axioms of what

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:32.960 --> 00:26:34.130
<v Speaker 0>a subspace is.

NOTE CONF {"raw":[100,100,100]}

00:26:34.640 --> 00:26:36.560
<v Speaker 0>And we sort of set hand-waving.

NOTE CONF {"raw":[100,100,100,100,93,100]}

00:26:36.980 --> 00:26:39.530
<v Speaker 0>Um, so this looks similar to linear transformation.

NOTE CONF {"raw":[80,100,100,100,100,100,100,100]}

00:26:39.530 --> 00:26:41.900
<v Speaker 0>A subspace is something that we can define a linear

NOTE CONF {"raw":[100,100,86,100,100,100,100,100,79,100]}

00:26:41.900 --> 00:26:43.100
<v Speaker 0>transformation on.

NOTE CONF {"raw":[100,100]}

00:26:45.410 --> 00:26:51.050
<v Speaker 0>Um, so what are subspaces, um, in R3 lines and

NOTE CONF {"raw":[96,100,100,100,100,100,100,72,100,98]}

00:26:51.050 --> 00:26:53.300
<v Speaker 0>planes through the origin of subspaces.

NOTE CONF {"raw":[100,100,100,92,83,100]}

00:26:53.300 --> 00:26:55.310
<v Speaker 0>Or they're sort of a generalisation.

NOTE CONF {"raw":[100,77,100,100,100,94]}

00:26:55.310 --> 00:26:58.430
<v Speaker 0>If you go to a higher dimensions, uh, lines and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:58.430 --> 00:27:01.040
<v Speaker 0>planes that not don't go through the origin or not

NOTE CONF {"raw":[100,100,100,54,100,100,100,100,29,100]}

00:27:01.040 --> 00:27:05.030
<v Speaker 0>subspaces, then a subspace must include the zero vector.

NOTE CONF {"raw":[100,60,100,100,100,100,100,100,100]}

00:27:05.030 --> 00:27:07.520
<v Speaker 0>And indeed that was one of the axioms of a

NOTE CONF {"raw":[94,88,100,100,100,100,100,100,100,100]}

00:27:07.520 --> 00:27:08.120
<v Speaker 0>subspace.

NOTE CONF {"raw":[100]}

00:27:09.470 --> 00:27:12.920
<v Speaker 0>Um, we've had a lot of different things that are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:12.920 --> 00:27:17.420
<v Speaker 0>subspaces null space, column space, row space a set of

NOTE CONF {"raw":[100,100,100,100,100,65,100,100,100,100]}

00:27:17.420 --> 00:27:22.550
<v Speaker 0>eigenvectors to a particular to a particular eigenvalue is also

NOTE CONF {"raw":[100,77,100,100,100,100,100,100,100,100]}

00:27:22.550 --> 00:27:23.510
<v Speaker 0>a subspace.

NOTE CONF {"raw":[100,100]}

00:27:24.740 --> 00:27:26.480
<v Speaker 0>Um, so be aware of that.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:27:26.840 --> 00:27:29.240
<v Speaker 0>Um, the span of vectors is a subspace.

NOTE CONF {"raw":[77,100,100,100,100,97,100,100]}

00:27:29.240 --> 00:27:29.630
<v Speaker 0>Indeed.

NOTE CONF {"raw":[100]}

00:27:29.630 --> 00:27:32.520
<v Speaker 0>That's how we sort of motivated, um, the span.

NOTE CONF {"raw":[100,100,100,100,100,100,89,93,93]}

00:27:33.870 --> 00:27:35.640
<v Speaker 0>Uh, so I should talk about the span.

NOTE CONF {"raw":[77,100,96,100,100,100,100,100]}

00:27:35.940 --> 00:27:38.550
<v Speaker 0>Um, again, we've had this definition of span is the

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,93,100]}

00:27:38.550 --> 00:27:41.700
<v Speaker 0>set of all linear combination of these particular vectors.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:27:42.750 --> 00:27:47.250
<v Speaker 0>Um, and we we talked about whether sort of there's

NOTE CONF {"raw":[100,100,100,100,100,100,100,95,95,100]}

00:27:47.250 --> 00:27:50.190
<v Speaker 0>a superfluous vectors in the spanning set.

NOTE CONF {"raw":[100,100,100,100,76,100,100]}

00:27:50.940 --> 00:27:54.360
<v Speaker 0>Um, and we've seen that this isn't the case.

NOTE CONF {"raw":[100,100,83,100,100,100,83,100,100]}

00:27:54.360 --> 00:27:55.980
<v Speaker 0>None of the vectors are superfluous.

NOTE CONF {"raw":[100,100,91,100,100,100]}

00:27:56.220 --> 00:27:59.610
<v Speaker 0>None of the vectors we can delete if these vectors

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:59.610 --> 00:28:01.410
<v Speaker 0>are linearly independent.

NOTE CONF {"raw":[100,100,100]}

00:28:01.830 --> 00:28:05.670
<v Speaker 0>And there's a weird definition there that spent some time

NOTE CONF {"raw":[100,100,100,100,100,99,100,83,100,100]}

00:28:05.670 --> 00:28:07.740
<v Speaker 0>on saying this is really the same as saying that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:07.740 --> 00:28:09.930
<v Speaker 0>none of these vectors can be written as a linear

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:09.930 --> 00:28:11.370
<v Speaker 0>combination of the others.

NOTE CONF {"raw":[100,100,100,100]}

00:28:12.090 --> 00:28:15.090
<v Speaker 0>Again, be aware of being able to play with these

NOTE CONF {"raw":[85,100,100,100,100,100,100,100,100,100]}

00:28:15.090 --> 00:28:18.570
<v Speaker 0>two properties, and if you do have a set of

NOTE CONF {"raw":[100,100,100,100,80,100,100,100,100,100]}

00:28:18.570 --> 00:28:21.570
<v Speaker 0>vectors that both span and are linearly independent, this is

NOTE CONF {"raw":[100,100,100,100,100,97,98,91,100,100]}

00:28:21.570 --> 00:28:25.140
<v Speaker 0>what we call a basis with all the properties that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:25.140 --> 00:28:27.750
<v Speaker 0>we just talked about in for a basis for linear

NOTE CONF {"raw":[100,100,100,100,100,61,50,95,100,100]}

00:28:27.750 --> 00:28:28.890
<v Speaker 0>transformations.

NOTE CONF {"raw":[100]}

00:28:29.020 --> 00:28:29.320
<v Speaker 0>Nope.

NOTE CONF {"raw":[48]}

00:28:30.880 --> 00:28:31.630
<v Speaker 0>Um, right.

NOTE CONF {"raw":[100,100]}

00:28:31.630 --> 00:28:32.020
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:28:32.020 --> 00:28:33.580
<v Speaker 0>So what should you do?

NOTE CONF {"raw":[100,100,100,100,100]}

00:28:33.580 --> 00:28:34.840
<v Speaker 0>What should you be able to do?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:28:34.840 --> 00:28:35.170
<v Speaker 0>Um.

NOTE CONF {"raw":[70]}

00:28:35.290 --> 00:28:37.870
<v Speaker 0>Determine if vectors are linearly independent.

NOTE CONF {"raw":[94,86,100,100,100,100]}

00:28:38.140 --> 00:28:41.470
<v Speaker 0>Um, if I give you some, um, determining a vector

NOTE CONF {"raw":[89,100,100,97,100,100,100,78,100,100]}

00:28:41.470 --> 00:28:43.660
<v Speaker 0>is a linear combination of some others.

NOTE CONF {"raw":[80,100,100,100,100,100,100]}

00:28:44.560 --> 00:28:47.050
<v Speaker 0>Um, if I give you a set of vectors, does

NOTE CONF {"raw":[100,100,100,91,100,100,100,100,100,100]}

00:28:47.050 --> 00:28:48.730
<v Speaker 0>this span a subspace?

NOTE CONF {"raw":[99,100,100,100]}

00:28:48.730 --> 00:28:51.400
<v Speaker 0>Is this the basis of the subspace being able to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:51.400 --> 00:28:55.270
<v Speaker 0>find, um, a basis for a given subspace?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:28:55.450 --> 00:29:00.700
<v Speaker 0>Um, and, uh, I thought I said there, well, I

NOTE CONF {"raw":[100,100,100,100,100,100,100,98,97,100]}

00:29:00.700 --> 00:29:02.380
<v Speaker 0>come I'm sure come back to that.

NOTE CONF {"raw":[90,100,100,100,100,100,100]}

00:29:02.500 --> 00:29:05.110
<v Speaker 0>Um, uh, so theory you should be aware of, I

NOTE CONF {"raw":[83,91,98,100,97,100,100,100,100,100]}

00:29:05.110 --> 00:29:08.380
<v Speaker 0>did say about, um, sort of the linear dependence really

NOTE CONF {"raw":[100,100,100,100,100,100,75,100,100,100]}

00:29:08.380 --> 00:29:11.080
<v Speaker 0>just means no vectors, a linear combination of the others,

NOTE CONF {"raw":[100,100,100,71,36,100,100,100,100,100]}

00:29:11.800 --> 00:29:15.010
<v Speaker 0>um, basis spans and is linearly independent.

NOTE CONF {"raw":[100,67,91,100,81,100,100]}

00:29:15.490 --> 00:29:18.730
<v Speaker 0>Uh, different basis if I can't have a basis isn't

NOTE CONF {"raw":[93,100,72,100,100,73,100,100,100,73]}

00:29:18.730 --> 00:29:22.450
<v Speaker 0>unique, I kind of different basis for a subspace from

NOTE CONF {"raw":[100,76,100,100,100,100,100,100,100,45]}

00:29:22.450 --> 00:29:23.020
<v Speaker 0>an R2.

NOTE CONF {"raw":[60,98]}

00:29:23.020 --> 00:29:25.510
<v Speaker 0>I can have just a standard basis, or I can

NOTE CONF {"raw":[100,100,100,100,83,100,100,100,100,100]}

00:29:25.510 --> 00:29:29.550
<v Speaker 0>have any set of three linearly independent vectors, but all

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:29.550 --> 00:29:33.330
<v Speaker 0>bases must have the same number of elements, and that

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:29:33.330 --> 00:29:35.430
<v Speaker 0>is what we call the dimension.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:38.130 --> 00:29:40.110
<v Speaker 0>Um, right.

NOTE CONF {"raw":[100,85]}

00:29:40.140 --> 00:29:41.430
<v Speaker 0>Okay, good.

NOTE CONF {"raw":[100,96]}

00:29:41.610 --> 00:29:44.730
<v Speaker 0>So then we had a, um, sort of interesting thing

NOTE CONF {"raw":[100,98,100,100,98,91,100,100,100,100]}

00:29:44.730 --> 00:29:48.030
<v Speaker 0>about this sort of concept of rank and dimension.

NOTE CONF {"raw":[100,91,100,100,100,100,100,100,100]}

00:29:48.030 --> 00:29:50.340
<v Speaker 0>So there are two very useful theorems there.

NOTE CONF {"raw":[100,72,94,100,100,100,100,100]}

00:29:51.000 --> 00:29:52.860
<v Speaker 0>Um, the one of them is the what is called

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,97,100]}

00:29:52.860 --> 00:29:53.970
<v Speaker 0>the rank theorem.

NOTE CONF {"raw":[100,100,100]}

00:29:54.810 --> 00:29:57.270
<v Speaker 0>Um, this first of all, tells you that the dimension

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:57.270 --> 00:29:59.790
<v Speaker 0>of the column space of the matrix is the same

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:59.790 --> 00:30:01.830
<v Speaker 0>as the dimension of the row space.

NOTE CONF {"raw":[100,100,100,100,100,97,100]}

00:30:02.160 --> 00:30:05.790
<v Speaker 0>Um, which might be surprising, but it's similar to, um,

NOTE CONF {"raw":[82,100,100,100,100,100,100,100,100,78]}

00:30:05.970 --> 00:30:10.170
<v Speaker 0>determinant being the same, and that if a matrix is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:10.170 --> 00:30:13.470
<v Speaker 0>invertible, both rows and column vectors have to be linearly

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:13.470 --> 00:30:14.280
<v Speaker 0>independent.

NOTE CONF {"raw":[100]}

00:30:15.240 --> 00:30:18.930
<v Speaker 0>Um, but um, so the dimension of the row and

NOTE CONF {"raw":[100,100,100,100,98,100,100,100,100,100]}

00:30:18.930 --> 00:30:20.760
<v Speaker 0>the column space is the rank.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:30:21.000 --> 00:30:25.020
<v Speaker 0>And it actually concretely tells you in the second part,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:25.020 --> 00:30:27.820
<v Speaker 0>how do I find a basis of the column space

NOTE CONF {"raw":[100,100,100,100,95,100,100,74,100,100]}

00:30:27.820 --> 00:30:30.580
<v Speaker 0>of the matrix or a row space of the matrix.

NOTE CONF {"raw":[100,100,100,100,54,100,100,100,100,100]}

00:30:31.150 --> 00:30:33.640
<v Speaker 0>So that is a sort of standard question that might

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:33.640 --> 00:30:34.240
<v Speaker 0>come up.

NOTE CONF {"raw":[100,100]}

00:30:34.270 --> 00:30:37.150
<v Speaker 0>This theorem the second part tells you what to do.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:38.290 --> 00:30:40.060
<v Speaker 0>So it's a useful thing to remember.

NOTE CONF {"raw":[100,97,100,100,100,100,100]}

00:30:40.960 --> 00:30:42.670
<v Speaker 0>Um, the other thing is what is called the rank

NOTE CONF {"raw":[85,100,100,100,100,100,100,100,100,100]}

00:30:42.670 --> 00:30:43.750
<v Speaker 0>nullity theorem.

NOTE CONF {"raw":[100,100]}

00:30:44.530 --> 00:30:46.660
<v Speaker 0>Um, so this one is again one of those we're

NOTE CONF {"raw":[76,100,100,56,56,100,100,100,100,73]}

00:30:46.660 --> 00:30:49.600
<v Speaker 0>thinking you need to sort of read this carefully three

NOTE CONF {"raw":[100,46,100,100,100,100,100,100,100,100]}

00:30:49.600 --> 00:30:52.030
<v Speaker 0>times before you know what it tells you.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:30:52.630 --> 00:30:55.990
<v Speaker 0>Um, but what it tells is the following, um, that

NOTE CONF {"raw":[82,100,100,100,100,100,100,100,94,100]}

00:30:55.990 --> 00:30:58.690
<v Speaker 0>the rank of a matrix plus the dimension of its

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,86]}

00:30:58.690 --> 00:31:02.020
<v Speaker 0>null space has to equal the dimension that you're in.

NOTE CONF {"raw":[94,94,100,100,100,100,100,100,100,100]}

00:31:03.340 --> 00:31:06.460
<v Speaker 0>So in other words, if a matrix is rank deficient,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:06.460 --> 00:31:10.150
<v Speaker 0>if you're missing dimensions from the rank of a matrix,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:10.330 --> 00:31:13.690
<v Speaker 0>these and exactly those have to appear in the null

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:13.690 --> 00:31:14.200
<v Speaker 0>space.

NOTE CONF {"raw":[100]}

00:31:16.210 --> 00:31:19.420
<v Speaker 0>So I see again a useful thing to to calculate

NOTE CONF {"raw":[100,34,58,100,100,100,100,100,100,100]}

00:31:19.510 --> 00:31:21.010
<v Speaker 0>um with some of those.

NOTE CONF {"raw":[79,100,100,100,100]}

00:31:21.610 --> 00:31:22.000
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:31:22.000 --> 00:31:22.360
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:31:22.360 --> 00:31:23.830
<v Speaker 0>So finally things you should know.

NOTE CONF {"raw":[100,100,96,100,100,100]}

00:31:23.830 --> 00:31:26.840
<v Speaker 0>There um should be able to determine the rank of

NOTE CONF {"raw":[94,100,100,100,100,100,100,100,100,100]}

00:31:26.840 --> 00:31:29.270
<v Speaker 0>the matrix by sort of any of the of the

NOTE CONF {"raw":[100,100,100,94,98,100,71,64,100,100]}

00:31:29.270 --> 00:31:30.080
<v Speaker 0>methods.

NOTE CONF {"raw":[100]}

00:31:30.200 --> 00:31:31.280
<v Speaker 0>Gaussian elimination.

NOTE CONF {"raw":[100,100]}

00:31:31.280 --> 00:31:32.900
<v Speaker 0>Bring it in row echelon form.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:31:32.930 --> 00:31:34.910
<v Speaker 0>Maybe you know something about the null space.

NOTE CONF {"raw":[100,100,100,100,100,100,91,91]}

00:31:34.910 --> 00:31:36.680
<v Speaker 0>You can use the rank nullity theorem.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:31:37.430 --> 00:31:40.070
<v Speaker 0>Maybe you know how many vectors are linearly dependent or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:40.070 --> 00:31:41.390
<v Speaker 0>not linearly independent.

NOTE CONF {"raw":[100,100,100]}

00:31:42.080 --> 00:31:42.410
<v Speaker 0>Yeah.

NOTE CONF {"raw":[57]}

00:31:43.310 --> 00:31:45.020
<v Speaker 0>Determine the dimensions.

NOTE CONF {"raw":[100,100,100]}

00:31:45.020 --> 00:31:48.680
<v Speaker 0>Find basis for row space, column space, and null space.

NOTE CONF {"raw":[100,100,100,100,100,100,100,86,100,100]}

00:31:48.710 --> 00:31:50.240
<v Speaker 0>Last theorem that we had.

NOTE CONF {"raw":[100,100,100,100,100]}

00:31:51.290 --> 00:31:53.450
<v Speaker 0>Um, every base has the same number of elements.

NOTE CONF {"raw":[72,100,100,100,100,100,84,100,100]}

00:31:53.450 --> 00:31:55.940
<v Speaker 0>I said the dimensions are the same.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:31:55.970 --> 00:32:00.230
<v Speaker 0>The nullity theorem is surprisingly useful in a lot of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:00.230 --> 00:32:00.740
<v Speaker 0>things.

NOTE CONF {"raw":[100]}

00:32:01.820 --> 00:32:06.050
<v Speaker 0>Okay, so that brings us to the sort of last

NOTE CONF {"raw":[100,100,100,100,100,100,100,85,85,100]}

00:32:06.050 --> 00:32:09.410
<v Speaker 0>major topic which is eigenvalues and eigenvectors.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:32:10.130 --> 00:32:11.690
<v Speaker 0>Now, I was a bit surprised.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:32:11.690 --> 00:32:13.640
<v Speaker 0>This is a little bit hidden in Nicholson.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:32:14.450 --> 00:32:17.030
<v Speaker 0>Um, actually it doesn't have a chapter called eigenvalues.

NOTE CONF {"raw":[82,100,100,100,100,100,100,100,100]}

00:32:17.030 --> 00:32:20.240
<v Speaker 0>Eigenvectors is somewhere hidden into a diagonalization.

NOTE CONF {"raw":[100,77,100,100,100,72,100]}

00:32:20.330 --> 00:32:24.650
<v Speaker 0>So I would claim that eigenvectors eigenvalues if there's another

NOTE CONF {"raw":[71,100,100,100,100,100,100,100,100,100]}

00:32:24.660 --> 00:32:27.660
<v Speaker 0>thing apart from God's elimination, you want to remember from

NOTE CONF {"raw":[100,100,100,50,100,100,100,100,100,100]}

00:32:27.660 --> 00:32:29.430
<v Speaker 0>this course, this is it.

NOTE CONF {"raw":[100,100,100,100,100]}

00:32:29.910 --> 00:32:30.270
<v Speaker 0>Yeah.

NOTE CONF {"raw":[100]}

00:32:30.270 --> 00:32:34.050
<v Speaker 0>This really is very important everywhere in sciences.

NOTE CONF {"raw":[100,100,100,100,100,100,100,99]}

00:32:34.860 --> 00:32:38.460
<v Speaker 0>So, um, what is this used for within the Ila?

NOTE CONF {"raw":[100,98,79,100,94,62,62,66,56,66]}

00:32:38.490 --> 00:32:41.910
<v Speaker 0>We use this to talk about diagonalization of matrices.

NOTE CONF {"raw":[100,68,100,100,100,100,100,100,100]}

00:32:42.810 --> 00:32:45.390
<v Speaker 0>And we've got a little bit of insight into the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:45.390 --> 00:32:48.120
<v Speaker 0>geometric transformations described by a matrix.

NOTE CONF {"raw":[100,100,100,100,99,100]}

00:32:48.120 --> 00:32:49.230
<v Speaker 0>I set this earlier.

NOTE CONF {"raw":[99,56,100,100]}

00:32:49.530 --> 00:32:52.170
<v Speaker 0>So if I know the eigenvalues and eigenvectors I can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:52.170 --> 00:32:55.260
<v Speaker 0>tell you something about what this is what this thing

NOTE CONF {"raw":[100,100,100,100,100,100,74,100,100,100]}

00:32:55.260 --> 00:32:56.220
<v Speaker 0>does know.

NOTE CONF {"raw":[100,57]}

00:32:56.490 --> 00:33:01.320
<v Speaker 0>So if I have a reflection by necessity I need

NOTE CONF {"raw":[100,100,100,98,100,100,100,74,100,100]}

00:33:01.320 --> 00:33:04.860
<v Speaker 0>to have a minus minus one as an eigenvector eigenvalue.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:05.040 --> 00:33:07.530
<v Speaker 0>Because there is what there are some vectors which are

NOTE CONF {"raw":[100,95,100,86,100,100,100,100,100,100]}

00:33:07.530 --> 00:33:09.810
<v Speaker 0>mapped to it's, they're negative.

NOTE CONF {"raw":[100,100,88,58,100]}

00:33:10.530 --> 00:33:13.440
<v Speaker 0>And I also have to have an eigenvalue that is

NOTE CONF {"raw":[100,91,100,100,100,100,100,84,100,100]}

00:33:13.440 --> 00:33:16.980
<v Speaker 0>one, because anything in the line or the plane of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:16.980 --> 00:33:21.750
<v Speaker 0>the projection of the transformation is not going to be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:21.750 --> 00:33:22.350
<v Speaker 0>mapped at all.

NOTE CONF {"raw":[100,100,100]}

00:33:22.350 --> 00:33:23.810
<v Speaker 0>It's just going to be mapped to itself.

NOTE CONF {"raw":[100,100,100,100,100,93,100,100]}

00:33:24.530 --> 00:33:27.230
<v Speaker 0>So if I've got eigenvalues of one and minus one,

NOTE CONF {"raw":[100,99,100,100,96,100,100,100,100,100]}

00:33:27.230 --> 00:33:28.670
<v Speaker 0>there is a reflection in there.

NOTE CONF {"raw":[98,98,100,100,100,100]}

00:33:29.750 --> 00:33:32.570
<v Speaker 0>If I've got an eigenvalue of zero there's some sort

NOTE CONF {"raw":[100,100,100,100,94,100,100,95,100,100]}

00:33:32.570 --> 00:33:34.040
<v Speaker 0>of projection going on.

NOTE CONF {"raw":[100,100,100,100]}

00:33:34.550 --> 00:33:37.970
<v Speaker 0>A projection maps something to zero, which wasn't zero beforehand.

NOTE CONF {"raw":[100,100,91,100,100,100,99,100,100,100]}

00:33:38.210 --> 00:33:39.530
<v Speaker 0>And that's always the case.

NOTE CONF {"raw":[89,100,100,100,100]}

00:33:39.770 --> 00:33:41.540
<v Speaker 0>Eigenvalue of zero is parametrically.

NOTE CONF {"raw":[100,100,100,93,86]}

00:33:41.540 --> 00:33:44.480
<v Speaker 0>There's a projection going on if I haven't got a

NOTE CONF {"raw":[96,100,100,100,100,100,100,100,100,100]}

00:33:44.480 --> 00:33:48.680
<v Speaker 0>full set of eigenvalues, if I'm missing some because the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:48.680 --> 00:33:52.490
<v Speaker 0>characteristic characteristic polynomial doesn't factorise completely.

NOTE CONF {"raw":[100,100,100,79,100,100]}

00:33:52.850 --> 00:33:54.950
<v Speaker 0>I have a, I have a rotation as part of

NOTE CONF {"raw":[100,100,86,100,100,100,100,100,100,100]}

00:33:54.950 --> 00:33:55.730
<v Speaker 0>the whole thing.

NOTE CONF {"raw":[100,100,100]}

00:33:57.020 --> 00:34:00.740
<v Speaker 0>So a rotation matrix doesn't factorise completely, and indeed that's

NOTE CONF {"raw":[96,86,100,100,100,100,100,100,100,100]}

00:34:00.740 --> 00:34:01.790
<v Speaker 0>always the case.

NOTE CONF {"raw":[100,100,100]}

00:34:02.360 --> 00:34:04.160
<v Speaker 0>So I will have as part of the whole thing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:04.160 --> 00:34:05.180
<v Speaker 0>I have a rotation.

NOTE CONF {"raw":[100,100,100,100]}

00:34:05.240 --> 00:34:07.370
<v Speaker 0>So you can give me some, you can get some

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:07.370 --> 00:34:09.620
<v Speaker 0>information about what is going on geometrically.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:09.620 --> 00:34:12.320
<v Speaker 0>As I said, we haven't done this completely, but just

NOTE CONF {"raw":[100,100,96,100,100,100,100,100,100,100]}

00:34:12.320 --> 00:34:15.020
<v Speaker 0>sort of keep in mind that these things are related.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:16.040 --> 00:34:16.460
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:34:16.460 --> 00:34:16.730
<v Speaker 0>Okay.

NOTE CONF {"raw":[98]}

00:34:16.730 --> 00:34:18.919
<v Speaker 0>So where does this lead to outside of Ila?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,80]}

00:34:18.919 --> 00:34:21.649
<v Speaker 0>And I would claim pretty much all areas of sciences

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:22.110 --> 00:34:26.700
<v Speaker 0>Use eigenvectors, eigenvalues, and not just sciences or the medicine,

NOTE CONF {"raw":[100,100,100,68,100,100,100,96,55,100]}

00:34:26.700 --> 00:34:29.070
<v Speaker 0>humanities or all of these.

NOTE CONF {"raw":[100,100,100,100,100]}

00:34:29.700 --> 00:34:32.730
<v Speaker 0>The reason the main thing is really analysis of dynamical

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:32.730 --> 00:34:33.540
<v Speaker 0>systems.

NOTE CONF {"raw":[100]}

00:34:33.960 --> 00:34:37.379
<v Speaker 0>So a dynamical system is something that evolves over time.

NOTE CONF {"raw":[98,94,100,100,100,100,100,100,100,100]}

00:34:37.379 --> 00:34:39.899
<v Speaker 0>We sort of you in every time step it basically

NOTE CONF {"raw":[100,100,100,84,100,100,100,100,96,100]}

00:34:39.899 --> 00:34:41.940
<v Speaker 0>the same thing happens to that again.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:43.679 --> 00:34:47.100
<v Speaker 0>So something like disease dynamics population dynamics.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:47.370 --> 00:34:49.830
<v Speaker 0>You can say I've got certain number of infected people

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:49.830 --> 00:34:52.500
<v Speaker 0>one time step later, there's a rule that tells me

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,97]}

00:34:52.500 --> 00:34:53.730
<v Speaker 0>what happens after that.

NOTE CONF {"raw":[100,100,100,100]}

00:34:54.450 --> 00:34:57.570
<v Speaker 0>Population dynamics the same predator prey models.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:57.570 --> 00:35:00.690
<v Speaker 0>If you've seen that you know this is a dynamical

NOTE CONF {"raw":[100,100,100,100,42,42,100,100,100,100]}

00:35:00.690 --> 00:35:01.440
<v Speaker 0>system.

NOTE CONF {"raw":[100]}

00:35:02.250 --> 00:35:03.630
<v Speaker 0>Also quite a bit of stuff.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:35:03.630 --> 00:35:07.650
<v Speaker 0>And mechanical engineering or power systems engineering, um, can be

NOTE CONF {"raw":[54,100,100,97,100,100,100,89,100,100]}

00:35:07.650 --> 00:35:11.850
<v Speaker 0>described by dynamical systems and eigenvalues tell you whether such

NOTE CONF {"raw":[100,100,100,100,100,100,98,100,100,100]}

00:35:11.850 --> 00:35:14.820
<v Speaker 0>a system, what the long term behaviour is, it's the

NOTE CONF {"raw":[100,100,100,100,100,100,97,100,100,94]}

00:35:14.820 --> 00:35:19.200
<v Speaker 0>stable will any perturbations to the system die down or

NOTE CONF {"raw":[100,95,100,100,100,100,100,100,100,100]}

00:35:19.200 --> 00:35:20.160
<v Speaker 0>will they blow up.

NOTE CONF {"raw":[100,100,100,100]}

00:35:20.580 --> 00:35:24.250
<v Speaker 0>You know, So there's a that's a famous example.

NOTE CONF {"raw":[37,37,95,86,89,98,100,100,100]}

00:35:24.250 --> 00:35:27.280
<v Speaker 0>This is the Tacoma Narrows Bridge in the US, which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:27.280 --> 00:35:30.040
<v Speaker 0>I think in the 60s collapsed with the wind coming

NOTE CONF {"raw":[52,52,100,100,100,100,100,76,100,100]}

00:35:30.040 --> 00:35:30.520
<v Speaker 0>through.

NOTE CONF {"raw":[100]}

00:35:31.330 --> 00:35:34.330
<v Speaker 0>And the reason is nobody has done the eigenvalue analysis.

NOTE CONF {"raw":[100,100,100,100,63,63,100,100,100,100]}

00:35:34.330 --> 00:35:37.390
<v Speaker 0>There were some perturbations, namely wind speed coming through at

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:37.390 --> 00:35:40.840
<v Speaker 0>a certain direction where the perturbation didn't die down.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:35:40.840 --> 00:35:43.960
<v Speaker 0>Indeed, um, got bigger and bigger.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:35:44.500 --> 00:35:45.760
<v Speaker 0>So the bridge collapsed.

NOTE CONF {"raw":[100,100,100,99]}

00:35:45.760 --> 00:35:48.730
<v Speaker 0>But in order to to for this not to happen,

NOTE CONF {"raw":[100,100,100,100,93,100,100,98,100,100]}

00:35:48.730 --> 00:35:51.610
<v Speaker 0>you can work out eigenvalues of the system and see

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:51.610 --> 00:35:52.450
<v Speaker 0>what happens there.

NOTE CONF {"raw":[100,100,100]}

00:35:53.350 --> 00:35:55.210
<v Speaker 0>I give you give you an example in a second,

NOTE CONF {"raw":[72,86,100,100,100,100,100,100,100,100]}

00:35:56.230 --> 00:35:57.760
<v Speaker 0>uh, things you should know how to do.

NOTE CONF {"raw":[100,89,100,98,100,100,100,100]}

00:35:57.880 --> 00:36:02.830
<v Speaker 0>Um, calculate eigenvalues of a matrix, obviously including their multiplicity.

NOTE CONF {"raw":[89,100,100,100,100,100,100,100,52,100]}

00:36:03.250 --> 00:36:07.330
<v Speaker 0>Calculate corresponding eigenvectors and the space the, the basis of

NOTE CONF {"raw":[100,100,100,100,79,64,100,100,100,100]}

00:36:07.330 --> 00:36:08.470
<v Speaker 0>the eigenspace.

NOTE CONF {"raw":[100,86]}

00:36:09.310 --> 00:36:12.430
<v Speaker 0>Um, and I said a little bit about the concept

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:12.430 --> 00:36:15.610
<v Speaker 0>between eigenvalues, what they actually mean to the geometry of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:15.610 --> 00:36:17.020
<v Speaker 0>a certain transformation.

NOTE CONF {"raw":[100,100,100]}

00:36:17.020 --> 00:36:20.640
<v Speaker 0>You know, um, there's a bit of theory that I've

NOTE CONF {"raw":[88,88,100,100,100,100,100,100,100,58]}

00:36:20.640 --> 00:36:23.610
<v Speaker 0>got in italics there, because if not really done any

NOTE CONF {"raw":[100,95,100,100,100,100,100,100,100,100]}

00:36:23.610 --> 00:36:25.410
<v Speaker 0>of that properly, it's all in Nicholson.

NOTE CONF {"raw":[100,100,100,100,100,100,98]}

00:36:25.860 --> 00:36:27.510
<v Speaker 0>And we've mentioned a few things.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:36:27.510 --> 00:36:29.970
<v Speaker 0>Cayley Hamilton came up as a discussion task.

NOTE CONF {"raw":[85,100,100,100,98,100,100,100]}

00:36:30.510 --> 00:36:34.380
<v Speaker 0>There's something about complex numbers, of course, everything factorises and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:34.380 --> 00:36:36.120
<v Speaker 0>you always have n eigenvalues.

NOTE CONF {"raw":[100,100,100,100,100]}

00:36:36.900 --> 00:36:39.360
<v Speaker 0>Um, I did say that if you're missing some in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:39.360 --> 00:36:41.070
<v Speaker 0>real numbers, there's a rotation there.

NOTE CONF {"raw":[100,100,87,100,100,100]}

00:36:41.070 --> 00:36:42.300
<v Speaker 0>We haven't really done that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:36:42.300 --> 00:36:44.070
<v Speaker 0>It's just stuff to be aware of.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:36:44.430 --> 00:36:46.590
<v Speaker 0>Um, where this is where this is leading.

NOTE CONF {"raw":[62,100,100,100,100,100,100,100]}

00:36:48.390 --> 00:36:49.050
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:36:49.290 --> 00:36:53.190
<v Speaker 0>Um, then we talked about diagonalization and similarity.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:36:53.910 --> 00:36:57.000
<v Speaker 0>So matrix A is Diagonalisable.

NOTE CONF {"raw":[100,100,100,100,100]}

00:36:57.000 --> 00:37:01.800
<v Speaker 0>If there is a vertical matrix P minus p such

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:01.800 --> 00:37:05.070
<v Speaker 0>that I p minus one a times p is a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,97]}

00:37:05.070 --> 00:37:06.210
<v Speaker 0>diagonal matrix.

NOTE CONF {"raw":[100,100]}

00:37:06.330 --> 00:37:08.670
<v Speaker 0>Now or if I half that I can turn it

NOTE CONF {"raw":[66,96,100,100,68,100,100,100,100,100]}

00:37:08.670 --> 00:37:10.890
<v Speaker 0>the whole way round and say I can decompose my

NOTE CONF {"raw":[100,100,100,54,100,100,100,100,100,52]}

00:37:10.890 --> 00:37:13.980
<v Speaker 0>matrix into a diagonal matrix and sort of some, some

NOTE CONF {"raw":[100,100,89,100,100,100,100,100,100,100]}

00:37:13.980 --> 00:37:16.920
<v Speaker 0>mapping there that doesn't undoes a transformation.

NOTE CONF {"raw":[100,98,100,71,100,91,100]}

00:37:17.580 --> 00:37:17.970
<v Speaker 0>Right?

NOTE CONF {"raw":[96]}

00:37:18.030 --> 00:37:18.510
<v Speaker 0>Okay.

NOTE CONF {"raw":[76]}

00:37:18.750 --> 00:37:20.620
<v Speaker 0>So if I have something like that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:21.130 --> 00:37:21.880
<v Speaker 0>Very nice.

NOTE CONF {"raw":[100,100]}

00:37:22.180 --> 00:37:23.170
<v Speaker 0>The element of D.

NOTE CONF {"raw":[100,51,100,92]}

00:37:23.200 --> 00:37:26.650
<v Speaker 0>Here are the eigenvalues of my matrix and the columns

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:26.650 --> 00:37:27.220
<v Speaker 0>of the p.

NOTE CONF {"raw":[100,100,100]}

00:37:27.250 --> 00:37:29.230
<v Speaker 0>Here are the corresponding eigenvectors.

NOTE CONF {"raw":[100,100,100,100,100]}

00:37:30.370 --> 00:37:31.510
<v Speaker 0>So that's a nice thing.

NOTE CONF {"raw":[94,84,92,100,100]}

00:37:31.540 --> 00:37:34.720
<v Speaker 0>Now not every matrix is diagonalisable unfortunately.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:35.020 --> 00:37:38.710
<v Speaker 0>So you should know the theory behind it when I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:38.710 --> 00:37:39.610
<v Speaker 0>can tell that.

NOTE CONF {"raw":[100,100,100]}

00:37:39.790 --> 00:37:44.770
<v Speaker 0>So the real criterion is that all eigenspace for every

NOTE CONF {"raw":[100,100,100,100,100,100,100,75,92,100]}

00:37:44.770 --> 00:37:48.520
<v Speaker 0>eigenvalue I can work out the eigenvectors.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:48.880 --> 00:37:50.980
<v Speaker 0>That gives me an eigenspace.

NOTE CONF {"raw":[100,100,100,78,69]}

00:37:51.370 --> 00:37:53.620
<v Speaker 0>You know the set of all the eigenvectors to their

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,86]}

00:37:53.620 --> 00:37:54.520
<v Speaker 0>eigenvalue.

NOTE CONF {"raw":[99]}

00:37:54.640 --> 00:37:56.800
<v Speaker 0>And I can work out the dimension of that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:37:57.070 --> 00:38:01.420
<v Speaker 0>So for all eigenvectors the eigenspace must have the same

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:01.420 --> 00:38:07.240
<v Speaker 0>dimension as the multiplicity of this eigenvalue in the characteristic

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:07.240 --> 00:38:07.930
<v Speaker 0>polynomial.

NOTE CONF {"raw":[100]}

00:38:08.770 --> 00:38:12.670
<v Speaker 0>So that's the criterion for Diagonalisable ability.

NOTE CONF {"raw":[100,100,100,100,100,91,73]}

00:38:12.910 --> 00:38:14.170
<v Speaker 0>It's a bit of a handful.

NOTE CONF {"raw":[99,100,100,100,100,100]}

00:38:14.170 --> 00:38:16.090
<v Speaker 0>There's a lot of lot of stuff to check.

NOTE CONF {"raw":[65,100,99,97,100,100,100,100,100]}

00:38:16.810 --> 00:38:18.830
<v Speaker 0>Now there's a few sort of shortcuts.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:38:19.670 --> 00:38:22.400
<v Speaker 0>One of them is if my matrix has got n

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:22.400 --> 00:38:27.380
<v Speaker 0>distinct eigenvalues, every eigenvalues must have one eigenvector.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:38:27.860 --> 00:38:29.990
<v Speaker 0>So there must be at least of dimension one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:38:29.990 --> 00:38:32.360
<v Speaker 0>Because I've got n of them, I've got n different

NOTE CONF {"raw":[100,99,100,100,100,100,100,100,100,100]}

00:38:32.360 --> 00:38:32.720
<v Speaker 0>ones.

NOTE CONF {"raw":[100]}

00:38:32.720 --> 00:38:34.640
<v Speaker 0>And the first criterion works.

NOTE CONF {"raw":[100,100,100,89,99]}

00:38:35.180 --> 00:38:38.360
<v Speaker 0>The other nice nice one is symmetric matrices.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:38:38.360 --> 00:38:40.250
<v Speaker 0>They always diagonalise.

NOTE CONF {"raw":[100,100,100]}

00:38:41.510 --> 00:38:44.210
<v Speaker 0>So that's also a nice one right.

NOTE CONF {"raw":[100,100,100,100,100,100,86]}

00:38:44.240 --> 00:38:46.700
<v Speaker 0>You should be able to find a diagonalization.

NOTE CONF {"raw":[100,100,100,100,100,100,73,100]}

00:38:46.970 --> 00:38:50.000
<v Speaker 0>And there was something about the sort of near diagonalization

NOTE CONF {"raw":[100,100,95,100,100,58,99,99,69,100]}

00:38:50.540 --> 00:38:53.210
<v Speaker 0>where if you've got missing eigenvectors for some of these

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:53.210 --> 00:38:56.390
<v Speaker 0>eigenspaces you have some full columns in the matrix V.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,44]}

00:38:57.140 --> 00:38:58.790
<v Speaker 0>So that's something we have to do.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:38:59.600 --> 00:39:02.570
<v Speaker 0>Um, so theory that you should be aware of we

NOTE CONF {"raw":[94,100,100,100,100,100,100,100,100,66]}

00:39:02.570 --> 00:39:05.450
<v Speaker 0>have had conditions, we had these conditions here for Diagonalise

NOTE CONF {"raw":[66,100,100,100,90,99,100,100,100,56]}

00:39:05.450 --> 00:39:06.110
<v Speaker 0>ability.

NOTE CONF {"raw":[61]}

00:39:06.740 --> 00:39:08.930
<v Speaker 0>And we had a definition of similarity.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:39:09.410 --> 00:39:11.750
<v Speaker 0>But I'm not going to say more about that.

NOTE CONF {"raw":[92,99,100,100,100,100,100,100,100]}

00:39:11.780 --> 00:39:13.370
<v Speaker 0>Apart from that it is there.

NOTE CONF {"raw":[100,100,100,78,100,100]}

00:39:13.490 --> 00:39:16.670
<v Speaker 0>What I do want to say something about is this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:16.670 --> 00:39:17.520
<v Speaker 0>one here.

NOTE CONF {"raw":[100,100]}

00:39:18.990 --> 00:39:20.880
<v Speaker 0>Uh, so this is very useful.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:39:20.880 --> 00:39:22.800
<v Speaker 0>So we had I said we had that.

NOTE CONF {"raw":[100,100,100,100,100,100,71,100]}

00:39:22.800 --> 00:39:25.590
<v Speaker 0>If it's diagonalisable, I can write p minus one, a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:25.590 --> 00:39:27.990
<v Speaker 0>p equals to D, or I can turn this the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:27.990 --> 00:39:28.890
<v Speaker 0>other way around.

NOTE CONF {"raw":[100,100,67]}

00:39:29.280 --> 00:39:32.250
<v Speaker 0>Now this is very useful, um, to say if I

NOTE CONF {"raw":[100,100,100,100,100,70,100,100,100,100]}

00:39:32.250 --> 00:39:35.220
<v Speaker 0>now want to have the matrix A to some power

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:35.250 --> 00:39:36.600
<v Speaker 0>A to the power k.

NOTE CONF {"raw":[100,100,100,100,100]}

00:39:37.590 --> 00:39:39.540
<v Speaker 0>Now if I, if I keep writing this, I've got

NOTE CONF {"raw":[58,100,100,100,100,100,100,100,100,100]}

00:39:39.540 --> 00:39:41.280
<v Speaker 0>a lot of p minus p in the middle that

NOTE CONF {"raw":[100,100,100,100,100,95,100,100,100,100]}

00:39:41.280 --> 00:39:42.360
<v Speaker 0>all cancel out.

NOTE CONF {"raw":[100,100,100]}

00:39:42.360 --> 00:39:44.580
<v Speaker 0>And I'm left with p times d to the k

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:44.610 --> 00:39:45.330
<v Speaker 0>times p.

NOTE CONF {"raw":[100,100]}

00:39:46.440 --> 00:39:49.290
<v Speaker 0>Now d to the k is very easy to determine

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:49.290 --> 00:39:50.850
<v Speaker 0>what that is now.

NOTE CONF {"raw":[100,100,100,76]}

00:39:51.240 --> 00:39:53.970
<v Speaker 0>And this now is the link to all the stuff

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,99,100]}

00:39:53.970 --> 00:39:57.390
<v Speaker 0>I said earlier about dynamical systems and the analysis of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:57.390 --> 00:40:00.930
<v Speaker 0>them, because I can now tell you whether something like

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:00.930 --> 00:40:05.580
<v Speaker 0>A to the K, whether this some components of that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:05.580 --> 00:40:07.860
<v Speaker 0>go to zero or it blows up.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:40:08.730 --> 00:40:11.430
<v Speaker 0>Now if the corresponding eigenvalues is less than one in

NOTE CONF {"raw":[83,99,100,100,100,100,100,100,100,48]}

00:40:11.430 --> 00:40:14.760
<v Speaker 0>modulus, take it to a higher and higher power will

NOTE CONF {"raw":[100,45,55,100,100,64,100,100,100,76]}

00:40:14.760 --> 00:40:17.030
<v Speaker 0>that this will finally go to zero.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:40:17.720 --> 00:40:19.940
<v Speaker 0>If it's greater than one in modulus.

NOTE CONF {"raw":[100,98,100,100,100,82,92]}

00:40:20.030 --> 00:40:21.140
<v Speaker 0>It will blow up.

NOTE CONF {"raw":[100,100,100,100]}

00:40:21.710 --> 00:40:24.170
<v Speaker 0>If it's one in modulus, it does something else.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:40:24.170 --> 00:40:27.110
<v Speaker 0>It flips around or it rotates or something like that.

NOTE CONF {"raw":[100,100,100,100,78,100,100,100,100,100]}

00:40:27.350 --> 00:40:29.090
<v Speaker 0>So that's the long term behaviour.

NOTE CONF {"raw":[100,100,100,100,100,90]}

00:40:29.660 --> 00:40:32.120
<v Speaker 0>Now if I go back to all these examples of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:32.120 --> 00:40:37.040
<v Speaker 0>dynamical systems, what they all have in common is that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:37.040 --> 00:40:39.020
<v Speaker 0>I've got a state of the system, I've got a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:39.020 --> 00:40:42.260
<v Speaker 0>vector describing what the system is in and the effect

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,90]}

00:40:42.260 --> 00:40:44.600
<v Speaker 0>how the system evolves from one time period to the

NOTE CONF {"raw":[100,97,100,100,100,100,100,100,100,100]}

00:40:44.600 --> 00:40:48.500
<v Speaker 0>next can be described by the effect of a matrix

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:48.500 --> 00:40:51.710
<v Speaker 0>by a matrix transformation, or at least approximated.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:40:52.550 --> 00:40:54.260
<v Speaker 0>So if I now want to know what happens in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:54.260 --> 00:40:57.680
<v Speaker 0>a hundred timesteps from now, I just need to keep

NOTE CONF {"raw":[79,79,72,100,100,100,100,100,100,100]}

00:40:57.680 --> 00:40:59.750
<v Speaker 0>applying this matrix over and over again.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:41:02.060 --> 00:41:04.430
<v Speaker 0>And to know what happens if I if I keep

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:41:04.430 --> 00:41:06.530
<v Speaker 0>applying the matrix over and over again.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:41:06.980 --> 00:41:09.950
<v Speaker 0>If I know the eigenvalues, I can tell you exactly

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:09.950 --> 00:41:10.760
<v Speaker 0>what happened.

NOTE CONF {"raw":[94,85]}

00:41:11.120 --> 00:41:14.840
<v Speaker 0>Well, so that's the where the sort of analysis of

NOTE CONF {"raw":[95,100,100,100,100,78,100,100,100,100]}

00:41:14.850 --> 00:41:18.780
<v Speaker 0>dynamical system comes from and why eigenvalues are important.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:41:20.310 --> 00:41:20.910
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:41:20.910 --> 00:41:22.740
<v Speaker 0>So final thing.

NOTE CONF {"raw":[100,100,100]}

00:41:22.890 --> 00:41:24.300
<v Speaker 0>Um orthogonality.

NOTE CONF {"raw":[80,100]}

00:41:24.960 --> 00:41:26.700
<v Speaker 0>So we've talked about bases.

NOTE CONF {"raw":[100,100,100,100,98]}

00:41:26.700 --> 00:41:28.620
<v Speaker 0>Not all bases have to be orthogonal.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:41:28.650 --> 00:41:31.590
<v Speaker 0>The standard basis in N tends to be it's orthogonal.

NOTE CONF {"raw":[100,100,97,47,99,100,100,100,84,100]}

00:41:31.590 --> 00:41:32.460
<v Speaker 0>But there's other things.

NOTE CONF {"raw":[100,99,100,100]}

00:41:32.460 --> 00:41:33.750
<v Speaker 0>They don't have to be orthogonal.

NOTE CONF {"raw":[82,91,100,100,100,100]}

00:41:34.200 --> 00:41:37.110
<v Speaker 0>However if you have an orthogonal basis this can be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:37.110 --> 00:41:38.520
<v Speaker 0>very useful you know.

NOTE CONF {"raw":[100,100,75,75]}

00:41:38.880 --> 00:41:41.430
<v Speaker 0>So we have these Fourier coefficients.

NOTE CONF {"raw":[100,100,100,92,100,100]}

00:41:41.640 --> 00:41:44.100
<v Speaker 0>Um for example, if I, if I give you a

NOTE CONF {"raw":[98,100,100,100,100,100,100,83,100,100]}

00:41:44.100 --> 00:41:46.830
<v Speaker 0>matrix any matrix in R3 and I'll give you another

NOTE CONF {"raw":[100,100,100,100,100,100,79,100,100,100]}

00:41:46.830 --> 00:41:49.830
<v Speaker 0>vector, and I want you to express this vector as

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:49.830 --> 00:41:52.920
<v Speaker 0>a linear combination of those basis vectors.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:41:53.010 --> 00:41:56.460
<v Speaker 0>Now I know that that's possible because they're a matrix.

NOTE CONF {"raw":[44,100,100,100,100,100,100,98,100,100]}

00:41:57.150 --> 00:42:00.240
<v Speaker 0>Um, but if they're not orthogonal, I would have to

NOTE CONF {"raw":[55,100,100,84,100,100,100,100,100,100]}

00:42:00.240 --> 00:42:01.980
<v Speaker 0>solve a linear system of equations.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:42:02.160 --> 00:42:03.840
<v Speaker 0>No, that's really the only way.

NOTE CONF {"raw":[69,90,100,100,100,100]}

00:42:03.870 --> 00:42:05.430
<v Speaker 0>Unless there's something trivially.

NOTE CONF {"raw":[90,88,100,82]}

00:42:05.430 --> 00:42:06.810
<v Speaker 0>And I just see what it is.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:42:06.810 --> 00:42:07.020
<v Speaker 0>Yeah.

NOTE CONF {"raw":[88]}

00:42:07.020 --> 00:42:09.060
<v Speaker 0>But usually you would have to solve a linear system

NOTE CONF {"raw":[100,100,79,85,100,100,100,92,100,100]}

00:42:09.060 --> 00:42:12.000
<v Speaker 0>of equations if they are orthogonal.

NOTE CONF {"raw":[100,100,100,88,100,100]}

00:42:12.480 --> 00:42:14.950
<v Speaker 0>Um, there was this sort of Fourier theorem that says

NOTE CONF {"raw":[98,100,100,98,100,100,100,100,100,75]}

00:42:14.950 --> 00:42:18.430
<v Speaker 0>I can calculate the coefficients directly by just doing projections.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:19.390 --> 00:42:20.980
<v Speaker 0>Now I can get them very quickly.

NOTE CONF {"raw":[87,100,100,100,100,100,100]}

00:42:21.790 --> 00:42:25.000
<v Speaker 0>Um, and if they're even orthonormal, I just need to

NOTE CONF {"raw":[85,100,100,98,100,100,100,100,100,100]}

00:42:25.000 --> 00:42:25.990
<v Speaker 0>do a dot product.

NOTE CONF {"raw":[100,81,100,100]}

00:42:27.730 --> 00:42:28.000
<v Speaker 0>Yeah.

NOTE CONF {"raw":[100]}

00:42:29.290 --> 00:42:33.760
<v Speaker 0>So um, so this is this can be quite useful

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:33.760 --> 00:42:34.090
<v Speaker 0>though.

NOTE CONF {"raw":[100]}

00:42:35.410 --> 00:42:38.770
<v Speaker 0>Um, eigenvectors.

NOTE CONF {"raw":[100,97]}

00:42:38.770 --> 00:42:39.790
<v Speaker 0>So same thing.

NOTE CONF {"raw":[100,100,100]}

00:42:39.790 --> 00:42:42.940
<v Speaker 0>Not all sets of eigenvectors have to be orthogonal.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:42:43.960 --> 00:42:47.350
<v Speaker 0>But again if they are um this can be very

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:47.350 --> 00:42:48.130
<v Speaker 0>useful.

NOTE CONF {"raw":[100]}

00:42:49.000 --> 00:42:52.000
<v Speaker 0>Now one important case, and indeed the only case where

NOTE CONF {"raw":[100,100,100,100,100,93,100,100,100,100]}

00:42:52.000 --> 00:42:56.860
<v Speaker 0>you have a set of orthogonal eigenvectors or basis of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,49,73]}

00:42:56.860 --> 00:43:01.090
<v Speaker 0>orthogonal eigenvectors is if the matrix is symmetric, and this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:01.090 --> 00:43:05.590
<v Speaker 0>is an if and only if symmetric matrices do diagonalise

NOTE CONF {"raw":[100,86,100,100,100,100,100,100,100,100]}

00:43:05.590 --> 00:43:08.020
<v Speaker 0>and the eigenvectors can be orthogonal.

NOTE CONF {"raw":[100,100,100,100,100,65]}

00:43:08.110 --> 00:43:12.100
<v Speaker 0>Can choose the eigenvectors to be orthogonal um and vice

NOTE CONF {"raw":[100,100,100,100,100,100,100,81,100,100]}

00:43:12.100 --> 00:43:12.580
<v Speaker 0>versa.

NOTE CONF {"raw":[100]}

00:43:14.580 --> 00:43:19.170
<v Speaker 0>Um, now there's a nice application to that.

NOTE CONF {"raw":[100,100,98,100,100,100,100,100]}

00:43:20.130 --> 00:43:22.230
<v Speaker 0>Uh, so before I do that, things you should be

NOTE CONF {"raw":[65,100,100,100,100,100,100,100,100,100]}

00:43:22.230 --> 00:43:25.410
<v Speaker 0>able to do is find an orthogonal, orthonormal basis.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:25.530 --> 00:43:26.940
<v Speaker 0>This is the Gram-Schmidt process.

NOTE CONF {"raw":[72,72,99,100,100]}

00:43:26.940 --> 00:43:29.820
<v Speaker 0>If I've got a basis and I want to make

NOTE CONF {"raw":[100,92,100,100,100,100,100,100,100,100]}

00:43:29.820 --> 00:43:32.430
<v Speaker 0>it into an orthogonal or orthonormal basis.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:43:33.180 --> 00:43:36.780
<v Speaker 0>Um, and also finding this applying this Fourier theorem, applying

NOTE CONF {"raw":[100,100,100,97,71,100,100,100,100,100]}

00:43:36.780 --> 00:43:39.390
<v Speaker 0>finding coefficients with respect to a basis.

NOTE CONF {"raw":[100,100,100,100,100,94,100]}

00:43:40.620 --> 00:43:43.710
<v Speaker 0>Um the theory should be where is this principle axis

NOTE CONF {"raw":[100,100,100,100,100,100,100,99,65,65]}

00:43:43.710 --> 00:43:44.340
<v Speaker 0>theorem.

NOTE CONF {"raw":[100]}

00:43:44.670 --> 00:43:46.800
<v Speaker 0>So that one was this one that I just had

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,57]}

00:43:46.800 --> 00:43:50.820
<v Speaker 0>there that it says a symmetric matrix has an orthonormal

NOTE CONF {"raw":[100,100,88,100,100,100,100,94,100,100]}

00:43:50.820 --> 00:43:52.650
<v Speaker 0>basis of eigenvectors.

NOTE CONF {"raw":[100,100,100]}

00:43:53.760 --> 00:43:58.890
<v Speaker 0>Now, um, that actually has quite a lot of applications

NOTE CONF {"raw":[100,89,100,100,100,100,100,100,100,100]}

00:43:58.890 --> 00:44:00.150
<v Speaker 0>in the sciences.

NOTE CONF {"raw":[100,100,100]}

00:44:00.300 --> 00:44:01.860
<v Speaker 0>And I want to just show you one.

NOTE CONF {"raw":[98,100,100,100,100,100,100,100]}

00:44:02.790 --> 00:44:04.380
<v Speaker 0>Um, and this is what it's called the tennis racket

NOTE CONF {"raw":[99,100,100,100,100,72,100,100,100,81]}

00:44:04.380 --> 00:44:04.920
<v Speaker 0>theorem.

NOTE CONF {"raw":[100]}

00:44:05.790 --> 00:44:08.700
<v Speaker 0>Now, those of you who do physics will no doubt

NOTE CONF {"raw":[100,100,100,100,100,100,100,62,100,100]}

00:44:08.700 --> 00:44:09.870
<v Speaker 0>see this again.

NOTE CONF {"raw":[100,100,100]}

00:44:09.990 --> 00:44:12.640
<v Speaker 0>It's just too nice a thing to do, but I

NOTE CONF {"raw":[91,100,100,100,100,100,100,100,100,100]}

00:44:12.640 --> 00:44:13.930
<v Speaker 0>decide to do that here.

NOTE CONF {"raw":[58,100,100,100,100]}

00:44:13.930 --> 00:44:15.910
<v Speaker 0>So I brought a tennis racquet.

NOTE CONF {"raw":[100,100,100,100,100,57]}

00:44:17.620 --> 00:44:19.360
<v Speaker 0>Um, and the idea is the following.

NOTE CONF {"raw":[48,100,100,100,100,100,100]}

00:44:19.360 --> 00:44:23.230
<v Speaker 0>I can try to rotate this tennis racket so I

NOTE CONF {"raw":[100,100,100,100,100,99,100,76,100,100]}

00:44:23.230 --> 00:44:28.270
<v Speaker 0>can rotate it, for example, like that, you know, but

NOTE CONF {"raw":[100,100,100,100,100,100,100,78,78,100]}

00:44:28.270 --> 00:44:30.400
<v Speaker 0>I can rotate it in different ways as well.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:44:30.400 --> 00:44:32.530
<v Speaker 0>I can, for example, rotate it like that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:44:33.250 --> 00:44:33.520
<v Speaker 0>Yeah.

NOTE CONF {"raw":[94]}

00:44:35.110 --> 00:44:36.640
<v Speaker 0>Um, so that all works.

NOTE CONF {"raw":[100,95,100,100,100]}

00:44:36.730 --> 00:44:38.140
<v Speaker 0>Well, it's a bit, but it works.

NOTE CONF {"raw":[91,100,100,100,100,100,100]}

00:44:38.140 --> 00:44:38.470
<v Speaker 0>Yeah.

NOTE CONF {"raw":[88]}

00:44:38.770 --> 00:44:40.960
<v Speaker 0>I can try to rotate it like this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:44:43.180 --> 00:44:44.290
<v Speaker 0>And see what happens.

NOTE CONF {"raw":[100,100,100,100]}

00:44:45.340 --> 00:44:49.300
<v Speaker 0>It won't just rotate in that direction.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:49.300 --> 00:44:51.940
<v Speaker 0>It'll flip at the same time as a rotated.

NOTE CONF {"raw":[62,100,97,100,100,100,100,100,100]}

00:44:51.940 --> 00:44:52.870
<v Speaker 0>It will do a flip.

NOTE CONF {"raw":[100,100,100,100,100]}

00:44:53.260 --> 00:44:56.860
<v Speaker 0>And indeed, it is practically impossible trying to rotate this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:56.860 --> 00:44:59.440
<v Speaker 0>in this direction without doing a flip.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:45:00.160 --> 00:45:01.300
<v Speaker 0>It will just do that.

NOTE CONF {"raw":[100,54,100,100,100]}

00:45:01.750 --> 00:45:03.400
<v Speaker 0>Now, why is that the case?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:45:03.700 --> 00:45:05.290
<v Speaker 0>And this is not just a tennis racket.

NOTE CONF {"raw":[100,100,100,100,100,92,100,98]}

00:45:05.290 --> 00:45:07.930
<v Speaker 0>This is indeed any three dimensional object that you can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:07.930 --> 00:45:11.210
<v Speaker 0>rotate now physically, What's going on?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:45:11.210 --> 00:45:13.220
<v Speaker 0>If I want to move something like that, what I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:13.220 --> 00:45:14.660
<v Speaker 0>need to know is it's mass.

NOTE CONF {"raw":[100,100,100,100,97,100]}

00:45:14.660 --> 00:45:16.610
<v Speaker 0>It's sort of resistance to being moved.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:45:16.940 --> 00:45:19.160
<v Speaker 0>If I want to rotate something, I need to know

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:19.160 --> 00:45:19.460
<v Speaker 0>something.

NOTE CONF {"raw":[100]}

00:45:19.460 --> 00:45:20.870
<v Speaker 0>That's called the inertia.

NOTE CONF {"raw":[92,100,100,100]}

00:45:20.870 --> 00:45:23.210
<v Speaker 0>It's resistance to being rotated.

NOTE CONF {"raw":[96,100,100,100,100]}

00:45:24.140 --> 00:45:26.240
<v Speaker 0>If I try to do this in three dimensions.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:45:26.240 --> 00:45:28.460
<v Speaker 0>So I actually get a matrix of inertia, a three

NOTE CONF {"raw":[43,83,100,100,100,100,100,100,100,100]}

00:45:28.460 --> 00:45:32.330
<v Speaker 0>by three matrix of inertia that I can write down

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:32.330 --> 00:45:33.320
<v Speaker 0>or calculate.

NOTE CONF {"raw":[100,100]}

00:45:33.410 --> 00:45:35.660
<v Speaker 0>Now this matrix of inertia is symmetric.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:45:36.560 --> 00:45:41.120
<v Speaker 0>Now symmetric matrix means I've got an orthogonal basis of

NOTE CONF {"raw":[64,100,100,100,100,100,100,100,100,100]}

00:45:41.120 --> 00:45:42.290
<v Speaker 0>eigenvectors.

NOTE CONF {"raw":[100]}

00:45:43.790 --> 00:45:47.780
<v Speaker 0>Now the eigenvectors are indeed the three possible rotation axis

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:47.780 --> 00:45:48.890
<v Speaker 0>that I've just showed you.

NOTE CONF {"raw":[100,78,100,100,100]}

00:45:48.890 --> 00:45:52.970
<v Speaker 0>Those are the eigenvectors of this, um, of this this,

NOTE CONF {"raw":[100,100,100,100,100,100,80,100,100,100]}

00:45:52.970 --> 00:45:54.740
<v Speaker 0>uh, tennis racket here.

NOTE CONF {"raw":[96,100,98,100]}

00:45:54.920 --> 00:45:56.720
<v Speaker 0>And there have to be orthogonal to each other.

NOTE CONF {"raw":[89,81,100,100,100,100,100,100,100]}

00:45:57.440 --> 00:45:59.660
<v Speaker 0>Now, why is one or why are two of these

NOTE CONF {"raw":[100,100,100,100,92,100,100,100,100,100]}

00:45:59.660 --> 00:46:00.980
<v Speaker 0>things stable and the other one not.

NOTE CONF {"raw":[100,100,100,100,100,97,100]}

00:46:00.980 --> 00:46:02.570
<v Speaker 0>It's again a dynamical system.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:02.570 --> 00:46:04.850
<v Speaker 0>It's again a stability analysis here.

NOTE CONF {"raw":[100,100,100,100,100,81]}

00:46:05.240 --> 00:46:09.750
<v Speaker 0>If I want to rotate it like that I'm not

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,83,100]}

00:46:09.750 --> 00:46:10.260
<v Speaker 0>perfect.

NOTE CONF {"raw":[100]}

00:46:10.260 --> 00:46:13.770
<v Speaker 0>I can't just rotate in this direction by either me

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:13.770 --> 00:46:16.560
<v Speaker 0>not being perfect or by air resistance or something.

NOTE CONF {"raw":[100,100,100,100,100,100,100,97,100]}

00:46:16.560 --> 00:46:20.580
<v Speaker 0>It'll also get rotation components in the other two rotation

NOTE CONF {"raw":[54,100,100,100,100,77,100,100,100,100]}

00:46:20.580 --> 00:46:21.360
<v Speaker 0>axis.

NOTE CONF {"raw":[100]}

00:46:21.780 --> 00:46:24.450
<v Speaker 0>So and now I can look at what is happening

NOTE CONF {"raw":[58,83,100,100,100,100,100,100,100,100]}

00:46:24.480 --> 00:46:28.530
<v Speaker 0>to this motion that I put to it now.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,90]}

00:46:28.800 --> 00:46:31.860
<v Speaker 0>So there are some dimensions, some rotation acts in which

NOTE CONF {"raw":[98,93,93,100,100,100,100,67,100,100]}

00:46:31.860 --> 00:46:36.150
<v Speaker 0>this is symmetric like any perturbation will die down by

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:36.150 --> 00:46:37.680
<v Speaker 0>what the eigenvalues tell me.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:37.950 --> 00:46:41.430
<v Speaker 0>And there's some axis or some rotation components which will

NOTE CONF {"raw":[100,47,100,60,100,100,100,100,100,100]}

00:46:41.430 --> 00:46:42.180
<v Speaker 0>blow up.

NOTE CONF {"raw":[100,100]}

00:46:43.110 --> 00:46:43.500
<v Speaker 0>Well.

NOTE CONF {"raw":[50]}

00:46:43.590 --> 00:46:47.430
<v Speaker 0>So if I do this here or this here or

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:46:47.430 --> 00:46:50.310
<v Speaker 0>the others, the rotation axis in which I'm doing will

NOTE CONF {"raw":[100,100,100,100,100,70,100,100,100,100]}

00:46:50.310 --> 00:46:52.560
<v Speaker 0>keep there, or the errors that I put in will

NOTE CONF {"raw":[100,95,94,100,100,100,93,100,100,100]}

00:46:52.560 --> 00:46:55.590
<v Speaker 0>die down, and the eigenvalues will tell me that if

NOTE CONF {"raw":[100,100,55,100,100,100,100,100,100,100]}

00:46:55.590 --> 00:46:58.410
<v Speaker 0>I do it like that, the arrows won't die down.

NOTE CONF {"raw":[100,100,100,100,100,100,76,100,100,100]}

00:46:58.710 --> 00:46:59.160
<v Speaker 0>Yeah.

NOTE CONF {"raw":[74]}

00:46:59.160 --> 00:47:02.640
<v Speaker 0>So the rotation, the arrow that I put in there

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:02.640 --> 00:47:04.890
<v Speaker 0>by air resistance or something else will blow up.

NOTE CONF {"raw":[100,100,100,99,100,100,100,100,100]}

00:47:04.890 --> 00:47:06.780
<v Speaker 0>It isn't stable in that direction.

NOTE CONF {"raw":[100,86,89,100,100,100]}

00:47:07.680 --> 00:47:09.770
<v Speaker 0>And as I say, that holds for any that holds

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:09.770 --> 00:47:12.050
<v Speaker 0>for any object that I'm trying to rotate.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:47:12.800 --> 00:47:14.390
<v Speaker 0>It's a little bit more complex.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:47:14.540 --> 00:47:15.560
<v Speaker 0>It's not just as simple.

NOTE CONF {"raw":[100,100,100,54,63]}

00:47:15.560 --> 00:47:16.190
<v Speaker 0>You have to go.

NOTE CONF {"raw":[100,100,100,100]}

00:47:16.190 --> 00:47:17.750
<v Speaker 0>I mean, I think that's the Wikipedia page.

NOTE CONF {"raw":[100,100,100,100,62,34,100,100]}

00:47:17.780 --> 00:47:18.890
<v Speaker 0>You can read it through.

NOTE CONF {"raw":[100,100,100,100,100]}

00:47:18.920 --> 00:47:22.100
<v Speaker 0>It's not just looking at whether eigenvalues are less than

NOTE CONF {"raw":[100,100,100,100,100,80,100,100,100,100]}

00:47:22.100 --> 00:47:23.750
<v Speaker 0>one or larger than one.

NOTE CONF {"raw":[100,100,100,100,100]}

00:47:23.750 --> 00:47:27.020
<v Speaker 0>You need to look at the difference of eigenvalues and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,94,100]}

00:47:27.020 --> 00:47:27.860
<v Speaker 0>their sign.

NOTE CONF {"raw":[100,70]}

00:47:28.490 --> 00:47:30.800
<v Speaker 0>And the sort of two stable rotations comes out of

NOTE CONF {"raw":[100,100,100,100,100,100,100,76,100,100]}

00:47:30.800 --> 00:47:30.980
<v Speaker 0>that.

NOTE CONF {"raw":[100]}

00:47:30.980 --> 00:47:34.850
<v Speaker 0>But that's the sort of typical applications of y eigenvectors.

NOTE CONF {"raw":[100,100,89,100,100,100,100,100,85,100]}

00:47:34.850 --> 00:47:38.420
<v Speaker 0>And this principal axis theorem are important.

NOTE CONF {"raw":[100,100,66,100,100,100,100]}

00:47:38.420 --> 00:47:39.380
<v Speaker 0>And where they used.

NOTE CONF {"raw":[100,100,100,100]}

00:47:40.550 --> 00:47:41.180
<v Speaker 0>Right.

NOTE CONF {"raw":[100]}

00:47:41.180 --> 00:47:41.930
<v Speaker 0>Okay.

NOTE CONF {"raw":[100]}

00:47:42.380 --> 00:47:45.320
<v Speaker 0>Um that's the end of what I have with that

NOTE CONF {"raw":[84,100,100,100,100,100,100,100,100,100]}

00:47:45.320 --> 00:47:45.830
<v Speaker 0>thing here.

NOTE CONF {"raw":[100,100]}

00:47:45.830 --> 00:47:48.500
<v Speaker 0>So I hope that you found some of that useful.

NOTE CONF {"raw":[96,55,100,100,100,100,100,100,100,100]}

00:47:48.530 --> 00:47:49.760
<v Speaker 0>I know it's been a bit of a sort of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:49.760 --> 00:47:53.180
<v Speaker 0>2 to 4, but use it as a, as a,

NOTE CONF {"raw":[89,89,89,100,100,100,88,88,92,92]}

00:47:53.180 --> 00:47:56.030
<v Speaker 0>as I say, reference to what are the important concept

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:56.030 --> 00:47:56.750
<v Speaker 0>of Ila.

NOTE CONF {"raw":[100,95]}

00:47:56.780 --> 00:47:57.380
<v Speaker 0>Right.

NOTE CONF {"raw":[95]}

00:47:57.500 --> 00:47:58.940
<v Speaker 0>It's been a pleasure to teach you.

NOTE CONF {"raw":[56,99,100,100,100,100,100]}

00:47:59.570 --> 00:48:01.220
<v Speaker 0>Um, all the best for your future studies.

NOTE CONF {"raw":[58,91,100,100,100,100,100,62]}

00:48:01.220 --> 00:48:03.800
<v Speaker 0>And hopefully you enjoy tomorrow's session.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:48:04.100 --> 00:48:04.640
<v Speaker 0>Thank you.

NOTE CONF {"raw":[100,100]}
