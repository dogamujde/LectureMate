WEBVTT

00:00:03.030 --> 00:00:03.810
<v Unknown>Do you think?

NOTE CONF {"raw":[67,69,57]}

00:00:06.120 --> 00:00:09.450
<v Speaker 0>So try to get attention or, uh.

NOTE CONF {"raw":[78,92,98,100,100,99,93]}

00:00:09.720 --> 00:00:10.500
<v Speaker 1>Do it in the like.

NOTE CONF {"raw":[97,97,67,48,69]}

00:00:12.090 --> 00:00:13.020
<v Speaker 1>Should I just start?

NOTE CONF {"raw":[100,100,100,100]}

00:00:15.210 --> 00:00:15.570
<v Speaker 1>Um.

NOTE CONF {"raw":[99]}

00:00:16.590 --> 00:00:16.830
<v Speaker 1>Should I?

NOTE CONF {"raw":[100,100]}

00:00:16.950 --> 00:00:18.300
<v Speaker 1>Yeah, it's it is recorded.

NOTE CONF {"raw":[91,61,100,100,61]}

00:00:20.970 --> 00:00:21.540
<v Speaker 1>So.

NOTE CONF {"raw":[87]}

00:00:23.940 --> 00:00:25.860
<v Speaker 0>She should be on.

NOTE CONF {"raw":[58,100,100,100]}

00:00:28.290 --> 00:00:30.150
<v Speaker 2>My test.

NOTE CONF {"raw":[97,100]}

00:00:30.930 --> 00:00:31.110
<v Speaker 0>Yeah.

NOTE CONF {"raw":[64]}

00:00:32.189 --> 00:00:32.580
<v Speaker 1>Um.

NOTE CONF {"raw":[98]}

00:00:33.780 --> 00:00:34.740
<v Speaker 3>Hi, guys.

NOTE CONF {"raw":[100,100]}

00:00:35.130 --> 00:00:37.350
<v Speaker 3>Um, so we're your student reps, and we're here to

NOTE CONF {"raw":[100,100,100,100,100,100,100,73,100,100]}

00:00:37.350 --> 00:00:40.860
<v Speaker 3>voice your concerns and to, like, staff in the university.

NOTE CONF {"raw":[100,100,100,100,100,95,100,99,100,100]}

00:00:42.060 --> 00:00:43.980
<v Speaker 1>Um, so one way that you can do this is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:43.980 --> 00:00:47.040
<v Speaker 1>by scanning the QR code for our weekly feedback form.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:47.040 --> 00:00:50.430
<v Speaker 1>So if you have any concerns, um, regarding university life

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:50.430 --> 00:00:52.380
<v Speaker 1>in general or anything that's just making your life harder

NOTE CONF {"raw":[100,100,100,100,100,100,100,82,100,100]}

00:00:52.380 --> 00:00:54.210
<v Speaker 1>than it needs to be, you can just scan the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:54.210 --> 00:00:56.550
<v Speaker 1>QR code and you can give us feedback so we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:56.550 --> 00:00:58.740
<v Speaker 1>can relate that to staff in our weekly meetings.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:01:00.170 --> 00:01:02.960
<v Speaker 4>We have also left our personal emails up there.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:01:02.960 --> 00:01:05.089
<v Speaker 4>So if you have any other concerns, feel free to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:05.089 --> 00:01:06.830
<v Speaker 4>like just send us a little email.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:01:06.830 --> 00:01:08.480
<v Speaker 4>And is that all?

NOTE CONF {"raw":[100,100,100,100]}

00:01:08.930 --> 00:01:10.460
<v Speaker 4>I think that's it from us.

NOTE CONF {"raw":[100,100,97,100,100,100]}

00:01:10.460 --> 00:01:10.910
<v Speaker 4>Yeah.

NOTE CONF {"raw":[91]}

00:01:10.940 --> 00:01:11.720
<v Speaker 4>Thank you.

NOTE CONF {"raw":[100,100]}

00:01:12.980 --> 00:01:14.150
<v Unknown>Should we just come back here?

NOTE CONF {"raw":[100,100,100,52,97,30]}

00:01:29.690 --> 00:01:30.110
<v Speaker 5>Okay.

NOTE CONF {"raw":[82]}

00:01:30.140 --> 00:01:32.180
<v Speaker 5>Good afternoon from me.

NOTE CONF {"raw":[100,100,99,100]}

00:01:38.690 --> 00:01:46.190
<v Speaker 5>So yesterday I was generalising sequence and we talked about

NOTE CONF {"raw":[100,100,100,100,68,100,100,100,100,100]}

00:01:46.190 --> 00:01:52.520
<v Speaker 5>this idea where sequence can have not just one predicate

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:52.520 --> 00:01:55.550
<v Speaker 5>on the left or on the right, but can have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:56.090 --> 00:01:58.640
<v Speaker 5>lists of predicates or sets of predicates.

NOTE CONF {"raw":[100,94,100,100,100,100,100]}

00:01:58.640 --> 00:02:00.610
<v Speaker 5>When you do it In Haskell, it's a list, but

NOTE CONF {"raw":[100,100,100,100,100,88,100,100,100,100]}

00:02:00.610 --> 00:02:01.870
<v Speaker 5>really it's a set.

NOTE CONF {"raw":[100,100,100,100]}

00:02:02.800 --> 00:02:08.649
<v Speaker 5>And the principle of having sets of predicates is that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:08.649 --> 00:02:10.990
<v Speaker 5>what's on the left is all the things that you're

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,98]}

00:02:10.990 --> 00:02:14.230
<v Speaker 5>assuming in order to get what's on the right, which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:14.230 --> 00:02:16.810
<v Speaker 5>is a list of possibilities that you might be able

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:16.810 --> 00:02:17.650
<v Speaker 5>to prove.

NOTE CONF {"raw":[100,100]}

00:02:19.450 --> 00:02:24.100
<v Speaker 5>And we spent some time arguing that the meaning of

NOTE CONF {"raw":[100,98,100,100,100,100,100,100,100,100]}

00:02:24.100 --> 00:02:29.500
<v Speaker 5>this is the end of everything on the left entails

NOTE CONF {"raw":[100,100,100,96,100,100,100,100,100,100]}

00:02:29.500 --> 00:02:31.720
<v Speaker 5>the order of everything on the right.

NOTE CONF {"raw":[100,31,100,100,100,100,100]}

00:02:32.830 --> 00:02:35.650
<v Speaker 5>And I went on to try to justify this as

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:35.650 --> 00:02:40.630
<v Speaker 5>a useful thing to do, because in most pieces of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:40.630 --> 00:02:45.850
<v Speaker 5>reasoning, in most proofs, then we have a bunch of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:45.850 --> 00:02:48.730
<v Speaker 5>assumptions that are being carried around through most of the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:48.730 --> 00:02:52.450
<v Speaker 5>proof and a specific assumption that we're actually working with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:52.450 --> 00:02:55.540
<v Speaker 5>in order to try to prove B, although B might

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:55.540 --> 00:02:58.410
<v Speaker 5>actually need some of the assumptions in here, but these

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:58.410 --> 00:03:01.860
<v Speaker 5>might be something we assume all the time, and so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:01.860 --> 00:03:03.690
<v Speaker 5>we don't normally want to think about them.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:03:06.060 --> 00:03:11.250
<v Speaker 5>Any questions or requests for clarification or repetition of anything

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:11.250 --> 00:03:12.630
<v Speaker 5>that we did yesterday?

NOTE CONF {"raw":[100,100,100,100]}

00:03:16.740 --> 00:03:20.610
<v Speaker 5>There's quite a lot of conceptual advance coming in yesterday

NOTE CONF {"raw":[94,100,100,100,100,100,100,100,100,100]}

00:03:20.610 --> 00:03:25.620
<v Speaker 5>and today, so tutorial will hope we'll hopefully bed it

NOTE CONF {"raw":[100,100,100,100,100,100,96,100,89,100]}

00:03:25.620 --> 00:03:26.520
<v Speaker 5>in two.

NOTE CONF {"raw":[100,97]}

00:03:28.170 --> 00:03:29.490
<v Speaker 5>So I want to.

NOTE CONF {"raw":[100,100,100,100]}

00:03:32.730 --> 00:03:34.200
<v Speaker 5>Just give an example.

NOTE CONF {"raw":[100,100,100,100]}

00:03:34.200 --> 00:03:36.300
<v Speaker 5>Going back to something we did earlier.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:03:36.570 --> 00:03:40.560
<v Speaker 5>You remember the the drinking age in Scotland thing at

NOTE CONF {"raw":[100,100,88,100,100,100,100,100,100,100]}

00:03:40.560 --> 00:03:42.780
<v Speaker 5>the time I said it was a slightly odd example

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:42.780 --> 00:03:45.270
<v Speaker 5>because we did it in terms of rules and really

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:45.270 --> 00:03:46.650
<v Speaker 5>it's about sequence.

NOTE CONF {"raw":[100,100,100]}

00:03:46.650 --> 00:03:50.190
<v Speaker 5>So here is how if I had written the book

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:50.670 --> 00:03:57.910
<v Speaker 5>the Buying Alcohol in Scotland example would be presented So

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:57.910 --> 00:04:00.940
<v Speaker 5>we've got a bunch of assumptions like people are over

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:04:00.940 --> 00:04:01.810
<v Speaker 5>18.

NOTE CONF {"raw":[100]}

00:04:01.960 --> 00:04:04.240
<v Speaker 5>If you remember, I said that was a background assumption,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:04.240 --> 00:04:05.650
<v Speaker 5>and I know there were a couple of people who

NOTE CONF {"raw":[100,100,100,100,88,100,100,100,100,100]}

00:04:05.650 --> 00:04:08.050
<v Speaker 5>aren't hard on you.

NOTE CONF {"raw":[100,100,100,100]}

00:04:08.560 --> 00:04:11.230
<v Speaker 5>We have a predicate saying if you're in Scotland, we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:11.230 --> 00:04:14.920
<v Speaker 5>have a predicate saying it's daytime, and then we have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:14.920 --> 00:04:17.950
<v Speaker 5>a conclusion, which is can you legally buy alcohol should

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:17.950 --> 00:04:18.730
<v Speaker 5>you wish to?

NOTE CONF {"raw":[100,100,100]}

00:04:20.109 --> 00:04:22.930
<v Speaker 5>And as I remarked last time, there's a bit of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:23.890 --> 00:04:27.550
<v Speaker 5>fast talking going on here because what is x?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:04:27.760 --> 00:04:32.020
<v Speaker 5>X is really a triple involving a person and a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:32.020 --> 00:04:33.640
<v Speaker 5>place and a time.

NOTE CONF {"raw":[100,100,100,100]}

00:04:34.150 --> 00:04:36.100
<v Speaker 5>That's the situation we're talking about.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:04:36.100 --> 00:04:38.560
<v Speaker 5>And what we are trying to conclude is whether in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:38.590 --> 00:04:41.350
<v Speaker 5>that situation, that person at that time in that place

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:41.350 --> 00:04:42.790
<v Speaker 5>can legally buy alcohol.

NOTE CONF {"raw":[100,100,100,100]}

00:04:45.010 --> 00:04:49.810
<v Speaker 5>And the assumption that is currently the state in Scottish

NOTE CONF {"raw":[100,100,100,100,82,100,100,100,100,100]}

00:04:49.810 --> 00:04:54.520
<v Speaker 5>law is that you need to be over 18.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:04:54.520 --> 00:04:56.590
<v Speaker 5>You need to be in Scotland, obviously.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:04:56.730 --> 00:05:01.770
<v Speaker 5>and you need to be doing this in daytime, defined

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,95,100]}

00:05:01.770 --> 00:05:03.420
<v Speaker 5>as between 10 and 10.

NOTE CONF {"raw":[100,100,100,100,100]}

00:05:03.510 --> 00:05:05.820
<v Speaker 5>And if that's the case, then you can legally buy

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:05.820 --> 00:05:07.680
<v Speaker 5>alcohol in Scotland.

NOTE CONF {"raw":[100,100,100]}

00:05:09.270 --> 00:05:11.100
<v Speaker 5>And we're not actually talking about the rest of the

NOTE CONF {"raw":[64,100,100,100,100,100,100,100,100,100]}

00:05:11.100 --> 00:05:11.700
<v Speaker 5>world.

NOTE CONF {"raw":[100]}

00:05:12.660 --> 00:05:15.900
<v Speaker 5>So this is now one of these sequence with a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:15.900 --> 00:05:21.120
<v Speaker 5>bunch of propositions, predicates on the left, all of which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:21.120 --> 00:05:22.290
<v Speaker 5>are necessary.

NOTE CONF {"raw":[100,100]}

00:05:23.790 --> 00:05:26.730
<v Speaker 5>And when we were presenting it in terms of rules,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:26.730 --> 00:05:29.370
<v Speaker 5>we were talking about denying the conclusion and flipping things

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:29.370 --> 00:05:30.510
<v Speaker 5>back and forwards.

NOTE CONF {"raw":[100,100,100]}

00:05:30.510 --> 00:05:32.700
<v Speaker 5>But if we think about it as a sequence which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:32.700 --> 00:05:36.390
<v Speaker 5>is arguably more natural, we can also do the same.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:36.570 --> 00:05:42.000
<v Speaker 5>So let's think about how contra position works for us

NOTE CONF {"raw":[100,100,100,100,100,91,91,100,100,100]}

00:05:42.000 --> 00:05:43.080
<v Speaker 5>in this setting.

NOTE CONF {"raw":[100,100,100]}

00:05:43.800 --> 00:05:46.740
<v Speaker 5>When we had just one predicate on the left, contra

NOTE CONF {"raw":[100,100,95,100,100,100,100,100,100,100]}

00:05:46.740 --> 00:05:48.810
<v Speaker 5>position was negate and flip.

NOTE CONF {"raw":[100,100,100,100,100]}

00:05:49.890 --> 00:05:54.450
<v Speaker 5>When we have multiple things, then contra position is negate

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:54.450 --> 00:05:55.110
<v Speaker 5>and flip.

NOTE CONF {"raw":[100,100]}

00:05:55.110 --> 00:05:57.140
<v Speaker 5>But you only choose one of the things on the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:57.140 --> 00:05:57.380
<v Speaker 5>left.

NOTE CONF {"raw":[100]}

00:05:57.380 --> 00:05:58.400
<v Speaker 5>Not all of them.

NOTE CONF {"raw":[100,100,100,100]}

00:05:58.610 --> 00:06:05.240
<v Speaker 5>So I can do, um, if you're 18 and you're

NOTE CONF {"raw":[100,100,100,100,98,100,100,100,100,100]}

00:06:05.240 --> 00:06:10.970
<v Speaker 5>in Scotland and you can't legally buy alcohol, then it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:10.970 --> 00:06:12.290
<v Speaker 5>must be Night-Time.

NOTE CONF {"raw":[100,100,63]}

00:06:12.680 --> 00:06:16.940
<v Speaker 5>Or I can do a composition of L and S

NOTE CONF {"raw":[100,100,100,100,100,58,100,100,100,100]}

00:06:17.120 --> 00:06:17.720
<v Speaker 5>and get.

NOTE CONF {"raw":[100,100]}

00:06:17.720 --> 00:06:21.680
<v Speaker 5>If you're 18 and you can't legally buy alcohol and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:21.680 --> 00:06:24.320
<v Speaker 5>it's daytime, then you must not be in Scotland.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:06:24.320 --> 00:06:25.730
<v Speaker 5>And so on and so on.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:06:27.410 --> 00:06:31.070
<v Speaker 5>So that's how quantal position worked before.

NOTE CONF {"raw":[100,100,100,67,94,100,100]}

00:06:31.280 --> 00:06:34.040
<v Speaker 5>If you compare this sequence setting with the rule based

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:34.040 --> 00:06:36.200
<v Speaker 5>setting, you'll see that we're doing the same thing.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:06:37.220 --> 00:06:44.180
<v Speaker 5>But what more can we do with multiple predicates on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:44.180 --> 00:06:44.930
<v Speaker 5>the left.

NOTE CONF {"raw":[100,100]}

00:06:45.650 --> 00:06:47.480
<v Speaker 5>So this comma here is really an.

NOTE CONF {"raw":[100,100,100,100,100,100,98]}

00:06:47.480 --> 00:06:50.030
<v Speaker 5>And so therefore we can work out what would happen

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:50.030 --> 00:06:53.480
<v Speaker 5>if we wanted to do composition of two premises.

NOTE CONF {"raw":[100,100,100,100,100,97,100,100,100]}

00:06:53.810 --> 00:06:57.640
<v Speaker 5>Suppose I wanted to take this thing and say, can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:57.640 --> 00:07:02.170
<v Speaker 5>I take the conclusion and deny both the assumptions S

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:02.170 --> 00:07:02.650
<v Speaker 5>and D?

NOTE CONF {"raw":[100,100]}

00:07:04.150 --> 00:07:06.010
<v Speaker 5>Well, I can work out what happens if I try

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:06.010 --> 00:07:08.710
<v Speaker 5>to do that, because comma is the same as and

NOTE CONF {"raw":[100,100,100,100,96,100,100,100,100,100]}

00:07:08.710 --> 00:07:12.280
<v Speaker 5>so I could replace the comma by an and break

NOTE CONF {"raw":[100,100,100,100,100,100,100,95,100,100]}

00:07:12.280 --> 00:07:15.190
<v Speaker 5>this down into two predicates a simple one and a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:15.190 --> 00:07:16.300
<v Speaker 5>compound one.

NOTE CONF {"raw":[100,100]}

00:07:16.750 --> 00:07:20.710
<v Speaker 5>And then I could do quantum position on l and

NOTE CONF {"raw":[100,100,100,100,100,54,100,100,100,100]}

00:07:20.710 --> 00:07:21.070
<v Speaker 5>this s.

NOTE CONF {"raw":[100,69]}

00:07:21.070 --> 00:07:24.640
<v Speaker 5>And so that's negate and flip L comes over to

NOTE CONF {"raw":[63,100,100,100,100,100,100,100,100,100]}

00:07:24.640 --> 00:07:28.540
<v Speaker 5>the left and is negated d s and d goes

NOTE CONF {"raw":[100,100,100,90,100,100,100,100,100,100]}

00:07:28.540 --> 00:07:30.250
<v Speaker 5>over to the right and negated.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:07:31.330 --> 00:07:33.040
<v Speaker 5>What can I do with the thing on the right.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:33.070 --> 00:07:36.490
<v Speaker 5>Well we have D Morgan's laws, which you are supposed

NOTE CONF {"raw":[100,100,100,43,100,100,100,100,100,100]}

00:07:36.490 --> 00:07:40.210
<v Speaker 5>to remember from propositional logic, although I think only a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:40.210 --> 00:07:43.990
<v Speaker 5>small proportion of you remembered seeing them, but the and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,96]}

00:07:44.170 --> 00:07:45.880
<v Speaker 5>the not of the and is the author of the

NOTE CONF {"raw":[100,100,100,100,85,100,100,41,93,100]}

00:07:45.880 --> 00:07:46.270
<v Speaker 5>nots.

NOTE CONF {"raw":[41]}

00:07:46.300 --> 00:07:47.710
<v Speaker 5>Just remember that mantra.

NOTE CONF {"raw":[100,100,100,100]}

00:07:47.830 --> 00:07:51.910
<v Speaker 5>So not s d is not s or not D

NOTE CONF {"raw":[100,100,98,69,100,100,100,100,100,100]}

00:07:52.510 --> 00:07:56.100
<v Speaker 5>and comma on the right is just or so we

NOTE CONF {"raw":[100,100,100,100,100,100,100,62,100,100]}

00:07:56.100 --> 00:07:58.950
<v Speaker 5>can break that down again into not S and not

NOTE CONF {"raw":[100,100,100,100,100,100,99,100,100,100]}

00:07:58.950 --> 00:07:59.340
<v Speaker 5>d.

NOTE CONF {"raw":[100]}

00:07:59.670 --> 00:08:02.370
<v Speaker 5>So actually I can take the L and I can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:02.370 --> 00:08:05.670
<v Speaker 5>contra pose it with two predicates on the left.

NOTE CONF {"raw":[71,74,100,100,100,100,100,100,100]}

00:08:05.670 --> 00:08:06.840
<v Speaker 5>And it still works.

NOTE CONF {"raw":[100,100,100,100]}

00:08:06.840 --> 00:08:09.090
<v Speaker 5>I've done negate of the L and flipped it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:08:09.090 --> 00:08:11.880
<v Speaker 5>And I've negated both these predicates and flipped it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:08:14.520 --> 00:08:18.180
<v Speaker 5>So if I can do it for two, can I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:18.180 --> 00:08:19.080
<v Speaker 5>do it for three?

NOTE CONF {"raw":[100,100,100,100]}

00:08:26.550 --> 00:08:26.940
<v Speaker 0>Yes.

NOTE CONF {"raw":[89]}

00:08:27.090 --> 00:08:27.690
<v Speaker 5>Yes.

NOTE CONF {"raw":[100]}

00:08:28.200 --> 00:08:29.430
<v Speaker 5>I mean the same.

NOTE CONF {"raw":[100,100,100,100]}

00:08:29.430 --> 00:08:30.960
<v Speaker 5>Exactly the same argument works.

NOTE CONF {"raw":[100,100,100,100,100]}

00:08:30.960 --> 00:08:33.450
<v Speaker 5>I just replace that comma by an and move the

NOTE CONF {"raw":[100,100,83,100,100,100,100,100,100,100]}

00:08:33.450 --> 00:08:36.659
<v Speaker 5>whole thing over, and then I have the not of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:36.659 --> 00:08:39.930
<v Speaker 5>the ans and that breaks down into the Or of

NOTE CONF {"raw":[100,56,100,100,100,100,100,100,100,100]}

00:08:39.930 --> 00:08:41.940
<v Speaker 5>the nots and the ORS turn into commas.

NOTE CONF {"raw":[100,91,100,100,100,95,100,100]}

00:08:44.550 --> 00:08:46.800
<v Speaker 5>Can anybody see.

NOTE CONF {"raw":[100,100,100]}

00:08:47.820 --> 00:08:50.820
<v Speaker 5>Well okay, let's let's do the question as stated.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:08:51.210 --> 00:08:53.900
<v Speaker 5>Can you say what's the general composition rules?

NOTE CONF {"raw":[100,100,100,100,100,100,100,56]}

00:08:53.900 --> 00:08:56.060
<v Speaker 5>So in these sequence where I might have lots of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:56.060 --> 00:08:59.000
<v Speaker 5>things on the left and lots of things on the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:59.000 --> 00:08:59.570
<v Speaker 5>right.

NOTE CONF {"raw":[100]}

00:09:00.140 --> 00:09:04.490
<v Speaker 5>What's the general statement of composition in the negate and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,98,98]}

00:09:04.490 --> 00:09:05.660
<v Speaker 5>flip framework?

NOTE CONF {"raw":[100,100]}

00:09:07.100 --> 00:09:09.680
<v Speaker 5>So when I had one it was just negate and

NOTE CONF {"raw":[100,100,100,100,95,100,100,100,100,100]}

00:09:09.680 --> 00:09:10.310
<v Speaker 5>flip.

NOTE CONF {"raw":[100]}

00:09:10.430 --> 00:09:13.280
<v Speaker 5>Now I've shown you that when we have several things

NOTE CONF {"raw":[100,97,100,100,100,100,100,100,100,100]}

00:09:13.280 --> 00:09:15.020
<v Speaker 5>we might be able to do more than one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:09:15.020 --> 00:09:17.600
<v Speaker 5>So what would be the general statement of quantum position.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:18.800 --> 00:09:19.250
<v Speaker 5>Yeah.

NOTE CONF {"raw":[97]}

00:09:20.360 --> 00:09:24.020
<v Speaker 6>We get a set of um, so I get a

NOTE CONF {"raw":[87,93,100,100,100,96,28,94,70,90]}

00:09:24.020 --> 00:09:28.400
<v Speaker 6>set of, um, propositions and I'd like take the law

NOTE CONF {"raw":[100,100,100,100,100,74,92,100,100,74]}

00:09:28.400 --> 00:09:30.200
<v Speaker 6>of that set in the answer set.

NOTE CONF {"raw":[100,97,99,82,99,98,100]}

00:09:30.500 --> 00:09:33.650
<v Speaker 5>So yeah, that's not think about the all in the

NOTE CONF {"raw":[90,100,100,100,78,100,100,100,100,100]}

00:09:33.650 --> 00:09:37.070
<v Speaker 5>end because contrary position as we did it didn't do

NOTE CONF {"raw":[95,100,23,81,100,100,100,100,100,100]}

00:09:37.070 --> 00:09:38.330
<v Speaker 5>this argument explicitly.

NOTE CONF {"raw":[100,100,100]}

00:09:38.330 --> 00:09:41.390
<v Speaker 5>So this is an argument justifying the quantum position works.

NOTE CONF {"raw":[100,100,100,100,100,100,70,57,57,100]}

00:09:41.390 --> 00:09:44.150
<v Speaker 5>I want just the simple description of quantum position.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:09:44.270 --> 00:09:47.960
<v Speaker 5>So before it was take two predicates negate and flip.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:47.960 --> 00:09:50.930
<v Speaker 5>What's the simple description of the most general quantum position

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,70,100]}

00:09:50.930 --> 00:09:51.980
<v Speaker 5>I can do here?

NOTE CONF {"raw":[100,100,100,100]}

00:09:56.070 --> 00:09:56.490
<v Speaker 0>Yeah.

NOTE CONF {"raw":[97]}

00:10:00.990 --> 00:10:01.590
<v Speaker 5>So.

NOTE CONF {"raw":[100]}

00:10:01.950 --> 00:10:02.340
<v Speaker 5>Yeah.

NOTE CONF {"raw":[100]}

00:10:03.150 --> 00:10:03.630
<v Speaker 0>Maybe.

NOTE CONF {"raw":[97]}

00:10:07.950 --> 00:10:08.340
<v Speaker 5>Right.

NOTE CONF {"raw":[100]}

00:10:08.340 --> 00:10:10.200
<v Speaker 5>So we've got a couple of suggestions there.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:10:10.200 --> 00:10:12.870
<v Speaker 5>So one is take any bunch of predicates on the

NOTE CONF {"raw":[100,100,100,89,100,100,100,100,100,100]}

00:10:12.870 --> 00:10:17.070
<v Speaker 5>left, any bunch of predicates on the right, negate them

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:17.070 --> 00:10:19.320
<v Speaker 5>and flip them as I said okay.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:10:20.280 --> 00:10:24.030
<v Speaker 5>Now I think you were saying something that follows from

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:24.030 --> 00:10:24.570
<v Speaker 5>that.

NOTE CONF {"raw":[100]}

00:10:25.500 --> 00:10:30.030
<v Speaker 5>Um, take any set on the left, any set on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:30.030 --> 00:10:32.970
<v Speaker 5>the right, negate the things and move them to the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:32.970 --> 00:10:33.840
<v Speaker 5>other side.

NOTE CONF {"raw":[100,100]}

00:10:34.230 --> 00:10:40.440
<v Speaker 5>What is a particularly boring set to negate and flip?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:43.320 --> 00:10:45.540
<v Speaker 5>Yeah, the empty set.

NOTE CONF {"raw":[96,100,100,100]}

00:10:45.540 --> 00:10:49.890
<v Speaker 5>Okay, so the empty set is simultaneously the most important

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:49.890 --> 00:10:50.250
<v Speaker 5>set.

NOTE CONF {"raw":[100]}

00:10:50.250 --> 00:10:52.010
<v Speaker 5>And the most boring set.

NOTE CONF {"raw":[100,100,100,100,100]}

00:10:52.520 --> 00:10:55.010
<v Speaker 5>It's the most important set because it's the set from

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:55.010 --> 00:10:57.500
<v Speaker 5>which we build the entire rest of the set theoretic

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:57.500 --> 00:10:58.010
<v Speaker 5>universe.

NOTE CONF {"raw":[100]}

00:10:58.010 --> 00:11:00.080
<v Speaker 5>And obviously it's the most boring because it has nothing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:00.080 --> 00:11:00.530
<v Speaker 5>in it.

NOTE CONF {"raw":[100,100]}

00:11:02.390 --> 00:11:02.750
<v Speaker 5>Um.

NOTE CONF {"raw":[100]}

00:11:05.150 --> 00:11:09.080
<v Speaker 5>So what happens if I choose a predicate here?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:11:09.920 --> 00:11:12.410
<v Speaker 5>Um, on the right for you, and I choose the

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:11:12.410 --> 00:11:15.080
<v Speaker 5>empty set of predicates here, and I do negate and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:15.080 --> 00:11:15.680
<v Speaker 5>flip.

NOTE CONF {"raw":[100]}

00:11:16.280 --> 00:11:19.010
<v Speaker 5>This predicate is negated and move to the left.

NOTE CONF {"raw":[100,100,54,100,93,100,100,100,100]}

00:11:19.610 --> 00:11:20.990
<v Speaker 5>There's nothing here to do.

NOTE CONF {"raw":[100,100,100,100,100]}

00:11:21.710 --> 00:11:27.290
<v Speaker 5>So actually, the most general form of composition is choose

NOTE CONF {"raw":[100,100,100,100,100,100,100,56,100,100]}

00:11:27.290 --> 00:11:30.950
<v Speaker 5>a bunch of predicates, even one or many.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:31.700 --> 00:11:34.040
<v Speaker 5>Negate them and move them to the other side.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:11:34.070 --> 00:11:36.050
<v Speaker 5>You don't even need to be swapping them.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:36.050 --> 00:11:40.100
<v Speaker 5>You can just move predicates between left and right provided

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:40.100 --> 00:11:41.180
<v Speaker 5>you negate them.

NOTE CONF {"raw":[100,100,100]}

00:11:46.640 --> 00:11:48.590
<v Speaker 5>Um, did that make sense?

NOTE CONF {"raw":[100,100,100,100,100]}

00:11:48.590 --> 00:11:49.010
<v Speaker 5>Yeah.

NOTE CONF {"raw":[100]}

00:11:50.680 --> 00:11:51.040
<v Speaker 0>What?

NOTE CONF {"raw":[73]}

00:11:51.970 --> 00:11:52.630
<v Speaker 5>Okay.

NOTE CONF {"raw":[100]}

00:11:52.870 --> 00:11:54.670
<v Speaker 5>Shall I move on to the board?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:11:54.940 --> 00:11:57.040
<v Speaker 5>Most things are easier when they're slower.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:11:57.700 --> 00:12:00.040
<v Speaker 5>The whole purpose of blackboards is to make things slow

NOTE CONF {"raw":[96,100,100,100,70,100,100,100,100,100]}

00:12:00.040 --> 00:12:00.970
<v Speaker 5>enough to follow.

NOTE CONF {"raw":[100,100,100]}

00:12:15.700 --> 00:12:20.140
<v Speaker 5>So before we started introducing multiple things.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:12:21.220 --> 00:12:22.840
<v Speaker 5>Composition was.

NOTE CONF {"raw":[73,100]}

00:12:23.590 --> 00:12:26.020
<v Speaker 5>Take the two predicates on each side, negate them and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:26.020 --> 00:12:26.800
<v Speaker 5>flip them.

NOTE CONF {"raw":[100,100]}

00:12:27.700 --> 00:12:32.500
<v Speaker 5>Now, I just argued that we could generalise this and

NOTE CONF {"raw":[100,100,100,100,100,100,100,95,100,100]}

00:12:32.500 --> 00:12:33.190
<v Speaker 5>say.

NOTE CONF {"raw":[100]}

00:12:36.640 --> 00:12:39.850
<v Speaker 5>Choose two predicates on one side and one on another

NOTE CONF {"raw":[100,100,100,98,100,100,100,100,100,100]}

00:12:39.850 --> 00:12:41.080
<v Speaker 5>and negate and flip.

NOTE CONF {"raw":[100,100,100,100]}

00:12:41.260 --> 00:12:45.310
<v Speaker 5>Okay, so that would give us a.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:12:51.960 --> 00:12:52.560
<v Speaker 5>Okay.

NOTE CONF {"raw":[100]}

00:12:54.570 --> 00:12:56.730
<v Speaker 5>Did everybody follow up to that point?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:12:59.160 --> 00:13:01.170
<v Speaker 5>Shout if you didn't need.

NOTE CONF {"raw":[35,100,100,100,100]}

00:13:01.350 --> 00:13:02.640
<v Speaker 5>Need me to say more?

NOTE CONF {"raw":[100,100,100,100,100]}

00:13:03.150 --> 00:13:05.910
<v Speaker 5>Or look at the slide again at your leisure.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:13:09.480 --> 00:13:09.780
<v Speaker 5>Um.

NOTE CONF {"raw":[100]}

00:13:13.560 --> 00:13:13.950
<v Speaker 5>Okay.

NOTE CONF {"raw":[100]}

00:13:13.950 --> 00:13:16.080
<v Speaker 5>And so what we just did the final bit was

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:16.080 --> 00:13:20.970
<v Speaker 5>say, well, if I can choose any of these predicates

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:21.060 --> 00:13:25.020
<v Speaker 5>and any of these predicates and flip them around, I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:25.020 --> 00:13:29.850
<v Speaker 5>could actually choose none of the things on the left

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:30.390 --> 00:13:32.010
<v Speaker 5>and one thing on the right.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:13:32.010 --> 00:13:33.330
<v Speaker 5>And then I get.

NOTE CONF {"raw":[100,100,100,100]}

00:13:39.630 --> 00:13:42.180
<v Speaker 5>The thing just by moving one predicate to the other

NOTE CONF {"raw":[95,100,100,100,100,100,100,100,100,100]}

00:13:42.180 --> 00:13:43.470
<v Speaker 5>side and negating it.

NOTE CONF {"raw":[100,100,100,100]}

00:13:44.340 --> 00:13:47.100
<v Speaker 5>And if you think about it, that's now the simplest

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:47.100 --> 00:13:50.960
<v Speaker 5>possible form of composition, taking one thing and moving it

NOTE CONF {"raw":[100,100,100,88,100,100,100,100,100,100]}

00:13:50.960 --> 00:13:54.200
<v Speaker 5>to the other side and negating it and all other.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,87]}

00:13:54.200 --> 00:13:56.780
<v Speaker 5>So the kind of composition we did previously is like

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:56.780 --> 00:14:00.560
<v Speaker 5>doing two of those at the same time.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:14:00.560 --> 00:14:04.910
<v Speaker 5>So when I said negate and swap secretly, I knew

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:04.910 --> 00:14:07.940
<v Speaker 5>that we could express it as take this, negate it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,82,82]}

00:14:07.940 --> 00:14:10.280
<v Speaker 5>and move it and take this, negate it and move

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:10.280 --> 00:14:10.670
<v Speaker 5>it.

NOTE CONF {"raw":[100]}

00:14:10.970 --> 00:14:14.570
<v Speaker 5>But in the original setting, we had to have exactly

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:14.570 --> 00:14:17.330
<v Speaker 5>one predicate on each side, so we had to combine

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:17.330 --> 00:14:19.280
<v Speaker 5>the two moves into a single swap.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:14:19.400 --> 00:14:22.070
<v Speaker 5>Now we can do things one at a time, which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:22.070 --> 00:14:26.450
<v Speaker 5>is much more general and lets us do lots of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:26.450 --> 00:14:28.370
<v Speaker 5>other good stuff.

NOTE CONF {"raw":[100,100,100]}

00:14:32.120 --> 00:14:35.630
<v Speaker 5>Okay, can I take that as red for the moment?

NOTE CONF {"raw":[100,100,100,100,100,100,50,100,100,100]}

00:14:35.810 --> 00:14:38.240
<v Speaker 5>All this stuff is moderately technical.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:14:38.240 --> 00:14:40.010
<v Speaker 5>Thank you for the usual people.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:14:40.010 --> 00:14:41.120
<v Speaker 5>Usual thumbs up.

NOTE CONF {"raw":[100,100,100]}

00:14:42.230 --> 00:14:46.430
<v Speaker 5>Um, but it has to be gone through and the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:46.430 --> 00:14:50.530
<v Speaker 5>tutorial will help if you're having a little difficulty following

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:50.530 --> 00:14:50.890
<v Speaker 5>it.

NOTE CONF {"raw":[100]}

00:14:51.610 --> 00:14:53.080
<v Speaker 5>So what have I done?

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:53.080 --> 00:14:58.600
<v Speaker 5>What I've actually given you is the basic outline of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:58.600 --> 00:15:01.240
<v Speaker 5>Gerhard Jensen's sequent calculus.

NOTE CONF {"raw":[100,96,99,100]}

00:15:03.010 --> 00:15:08.080
<v Speaker 5>And while there are several forms of logical reasoning that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:08.080 --> 00:15:11.470
<v Speaker 5>differ slightly in the way they present things, the sequent

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,86]}

00:15:11.470 --> 00:15:14.920
<v Speaker 5>calculus is one that is particularly easy to work with.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:15.220 --> 00:15:18.430
<v Speaker 5>It's not necessarily the most natural, but it's the easiest

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:18.430 --> 00:15:21.040
<v Speaker 5>to work with, and you're going to be programming with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:21.040 --> 00:15:21.160
<v Speaker 5>it.

NOTE CONF {"raw":[100]}

00:15:21.160 --> 00:15:23.320
<v Speaker 5>So we want it to be easy to work with.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:24.970 --> 00:15:27.820
<v Speaker 5>What are the key differences from the kind of Aristotelian

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:27.820 --> 00:15:29.530
<v Speaker 5>reasoning that we've done before?

NOTE CONF {"raw":[100,100,100,100,100]}

00:15:30.190 --> 00:15:33.580
<v Speaker 5>Well, it talks about all kinds of logical formulae.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:15:33.580 --> 00:15:37.030
<v Speaker 5>All have first order logic and not just the categorical

NOTE CONF {"raw":[100,58,100,100,100,100,100,100,100,100]}

00:15:37.030 --> 00:15:38.050
<v Speaker 5>propositions.

NOTE CONF {"raw":[100]}

00:15:39.070 --> 00:15:41.590
<v Speaker 5>And the other key difference is that it only deals

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:41.590 --> 00:15:43.090
<v Speaker 5>with entailment.

NOTE CONF {"raw":[100,100]}

00:15:43.090 --> 00:15:47.630
<v Speaker 5>So we only prove that some assumptions prove a conclusion.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:47.990 --> 00:15:52.280
<v Speaker 5>It doesn't have any way explicitly built into the system

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:52.280 --> 00:15:54.590
<v Speaker 5>of working with not entails.

NOTE CONF {"raw":[100,100,100,100,100]}

00:15:55.070 --> 00:16:00.350
<v Speaker 5>So previously we used not entails in order to smuggle

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:00.920 --> 00:16:04.730
<v Speaker 5>existential statements in because in order to make an existential

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:04.730 --> 00:16:07.370
<v Speaker 5>statement, what we really said was it's not the case

NOTE CONF {"raw":[100,100,100,100,100,100,95,100,100,100]}

00:16:07.370 --> 00:16:10.070
<v Speaker 5>that everything is the negative of the existential.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:16:10.340 --> 00:16:13.970
<v Speaker 5>But in normal first order logic, we have the exists

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:13.970 --> 00:16:18.710
<v Speaker 5>quantifier as a primitive operation, and so we don't need

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:18.710 --> 00:16:22.040
<v Speaker 5>to smuggle it in as a negated for all, although

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:22.040 --> 00:16:24.860
<v Speaker 5>frequently we do, because it often makes the working easier.

NOTE CONF {"raw":[100,79,100,100,100,100,100,100,100,100]}

00:16:26.300 --> 00:16:29.450
<v Speaker 5>Now, having said that, I'm going to give you sequent

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,66]}

00:16:29.450 --> 00:16:31.430
<v Speaker 5>calculus with all of logic.

NOTE CONF {"raw":[100,100,100,100,100]}

00:16:31.610 --> 00:16:34.220
<v Speaker 5>Actually, for most of the course, I'm not going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:34.220 --> 00:16:37.130
<v Speaker 5>will just concentrate on the propositional fragment.

NOTE CONF {"raw":[76,100,100,100,100,100,100]}

00:16:37.130 --> 00:16:39.500
<v Speaker 5>So in some ways we're now getting simpler.

NOTE CONF {"raw":[100,100,100,100,96,100,100,100]}

00:16:39.500 --> 00:16:42.350
<v Speaker 5>Well, in very definite way we're actually doing simpler stuff

NOTE CONF {"raw":[92,100,100,100,100,100,100,100,100,100]}

00:16:42.350 --> 00:16:43.520
<v Speaker 5>than syllogisms.

NOTE CONF {"raw":[100,100]}

00:16:44.510 --> 00:16:48.310
<v Speaker 5>Um, but it can be extended and probably right at

NOTE CONF {"raw":[77,100,100,100,100,100,100,100,100,100]}

00:16:48.310 --> 00:16:49.510
<v Speaker 5>the end of the course.

NOTE CONF {"raw":[100,100,100,100,100]}

00:16:49.600 --> 00:16:52.540
<v Speaker 5>I will come back and talk about how we actually

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:52.540 --> 00:16:58.030
<v Speaker 5>deal with the full power of universal and existential quantification.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:59.350 --> 00:17:01.960
<v Speaker 5>So this is now where you would come in to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,82,82]}

00:17:01.960 --> 00:17:04.900
<v Speaker 5>most courses teaching logic, computer science.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:17:04.900 --> 00:17:09.160
<v Speaker 5>You'd have done basic propositional logic, and then they would

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:09.310 --> 00:17:12.189
<v Speaker 5>not talk about syllogisms and jump in here and start

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:12.189 --> 00:17:13.870
<v Speaker 5>talking about this proof system.

NOTE CONF {"raw":[100,100,100,100,100]}

00:17:15.189 --> 00:17:18.310
<v Speaker 5>So let me remind you of things that we've already

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:18.310 --> 00:17:18.970
<v Speaker 5>seen.

NOTE CONF {"raw":[100]}

00:17:21.459 --> 00:17:26.170
<v Speaker 5>We argued yesterday that comma and end of the same

NOTE CONF {"raw":[100,100,100,100,72,95,78,97,100,100]}

00:17:26.170 --> 00:17:26.500
<v Speaker 5>thing.

NOTE CONF {"raw":[100]}

00:17:26.500 --> 00:17:29.440
<v Speaker 5>Well, actually we defined comma and and to be the

NOTE CONF {"raw":[100,100,100,100,91,52,100,100,100,100]}

00:17:29.440 --> 00:17:30.340
<v Speaker 5>same thing.

NOTE CONF {"raw":[100,100]}

00:17:32.830 --> 00:17:35.890
<v Speaker 5>And we also argued that this rule is sound.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:17:36.070 --> 00:17:38.200
<v Speaker 5>If C gives you a and c gives you b,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:38.200 --> 00:17:40.630
<v Speaker 5>then certainly C gives you both a and B.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:17:40.870 --> 00:17:43.810
<v Speaker 5>And similarly with the or all on the right is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:43.810 --> 00:17:46.680
<v Speaker 5>defined to be comma And we're forced to anyway.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,95]}

00:17:46.830 --> 00:17:48.810
<v Speaker 5>And on the left, if you know that A gives

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:48.810 --> 00:17:51.780
<v Speaker 5>you C and B gives you C, then as long

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:51.780 --> 00:17:53.640
<v Speaker 5>as you have at least one of A and B,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:53.670 --> 00:17:54.690
<v Speaker 5>then you get C.

NOTE CONF {"raw":[100,100,100,100]}

00:17:56.490 --> 00:18:00.360
<v Speaker 5>Um, this is a warning about some notation.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:18:00.810 --> 00:18:03.900
<v Speaker 5>So up to now we have been carefully using double

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:03.900 --> 00:18:06.630
<v Speaker 5>lines to say that the rules go backwards.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:18:07.170 --> 00:18:10.650
<v Speaker 5>From now on, all the rules go backwards.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:18:10.650 --> 00:18:14.490
<v Speaker 5>So just to make the slides less cluttered I'm going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:14.490 --> 00:18:15.840
<v Speaker 5>to use a single line.

NOTE CONF {"raw":[100,100,100,100,100]}

00:18:15.840 --> 00:18:19.770
<v Speaker 5>But everything from now on, unless specifically stated otherwise, is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:19.770 --> 00:18:22.920
<v Speaker 5>backwards sound as well as forward sound.

NOTE CONF {"raw":[100,100,100,100,100,98,100]}

00:18:25.740 --> 00:18:31.170
<v Speaker 5>Um, these are rules that only talk about a couple

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:31.170 --> 00:18:32.100
<v Speaker 5>of predicates.

NOTE CONF {"raw":[100,100]}

00:18:32.910 --> 00:18:35.910
<v Speaker 5>We have all these assumptions that might be floating around

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:35.910 --> 00:18:38.340
<v Speaker 5>all the rest of the proof that you're dealing with.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:38.490 --> 00:18:43.050
<v Speaker 5>So the most general statement of these things has the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:43.050 --> 00:18:45.290
<v Speaker 5>bunch of current assumptions on the left.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:18:46.460 --> 00:18:51.050
<v Speaker 5>And it also has a bunch of current anti assumptions

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,81,100]}

00:18:51.050 --> 00:18:51.830
<v Speaker 5>on the right.

NOTE CONF {"raw":[100,100,100]}

00:18:51.830 --> 00:18:53.690
<v Speaker 5>This thing is always a bit strange.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:18:53.690 --> 00:18:57.230
<v Speaker 5>So this is this stuff on the right is what

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:57.230 --> 00:19:00.530
<v Speaker 5>gets left out in some of the easier to understand,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:00.530 --> 00:19:03.560
<v Speaker 5>but slightly harder to work with versions of logic.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:19:05.390 --> 00:19:07.940
<v Speaker 5>Um, the only way really to get used to it

NOTE CONF {"raw":[89,100,100,100,100,100,100,100,100,100]}

00:19:07.940 --> 00:19:10.820
<v Speaker 5>is to work with some examples.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:11.210 --> 00:19:15.710
<v Speaker 5>But roughly the gamma is the stuff you're assuming, if

NOTE CONF {"raw":[100,100,85,100,100,100,100,94,100,100]}

00:19:15.710 --> 00:19:17.330
<v Speaker 5>you like to think of it that way, you can

NOTE CONF {"raw":[98,100,100,100,100,98,100,100,100,100]}

00:19:17.330 --> 00:19:19.820
<v Speaker 5>say it's the part of the universe that I'm working

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:19.820 --> 00:19:20.660
<v Speaker 5>inside.

NOTE CONF {"raw":[100]}

00:19:20.840 --> 00:19:24.260
<v Speaker 5>Gamma is what's true, and I'm working inside gamma.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:19:24.860 --> 00:19:26.360
<v Speaker 5>And then what's the delta?

NOTE CONF {"raw":[100,100,100,100,100]}

00:19:26.360 --> 00:19:29.030
<v Speaker 5>Well, basically the delta is stuff in gamma that you've

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:29.030 --> 00:19:31.760
<v Speaker 5>moved to the other side as part of the proof.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:31.880 --> 00:19:35.750
<v Speaker 5>So technically, the part of the universe that a comma

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:35.780 --> 00:19:41.810
<v Speaker 5>B gives you something a and B gives you something

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:41.810 --> 00:19:44.230
<v Speaker 5>is true in is where the stuff on the left

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:44.230 --> 00:19:46.630
<v Speaker 5>is true and all the stuff on the right is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:46.630 --> 00:19:47.320
<v Speaker 5>false.

NOTE CONF {"raw":[100]}

00:19:49.180 --> 00:19:52.750
<v Speaker 5>Um, you will find that when you work with proofs,

NOTE CONF {"raw":[86,100,100,100,100,100,100,100,100,100]}

00:19:52.750 --> 00:19:55.960
<v Speaker 5>you just have to kind of follow the symbols.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:19:55.990 --> 00:19:58.060
<v Speaker 5>The nice thing about the proofs that we're going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,89,100,100]}

00:19:58.060 --> 00:20:01.000
<v Speaker 5>be doing is that you do not have to think

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:01.600 --> 00:20:05.740
<v Speaker 5>so any kind of mathematical proof where it's completely automatic

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:05.740 --> 00:20:07.750
<v Speaker 5>and you don't have to think is a good thing,

NOTE CONF {"raw":[100,100,100,100,100,100,95,100,100,100]}

00:20:07.750 --> 00:20:09.640
<v Speaker 5>because it means you can get the computer to do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:09.640 --> 00:20:10.420
<v Speaker 5>it for you.

NOTE CONF {"raw":[100,100,100]}

00:20:12.100 --> 00:20:17.020
<v Speaker 5>So these rules are about and and or any questions

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:17.020 --> 00:20:19.420
<v Speaker 5>about this most general form of them.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:20:24.370 --> 00:20:24.940
<v Speaker 5>Okay.

NOTE CONF {"raw":[100]}

00:20:25.750 --> 00:20:29.440
<v Speaker 5>Then just now we were talking about quantum position.

NOTE CONF {"raw":[100,100,100,100,100,100,100,82,80]}

00:20:29.590 --> 00:20:36.280
<v Speaker 5>And we argue that it generalises to rules like this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:36.490 --> 00:20:39.190
<v Speaker 5>I can take a predicate on the right, and I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:39.190 --> 00:20:40.720
<v Speaker 5>can negate it and move it to the left.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:20:40.720 --> 00:20:42.430
<v Speaker 5>And I can take a predicate on the left, and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:42.450 --> 00:20:44.370
<v Speaker 5>I can negate it and move it to the right.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:46.440 --> 00:20:49.350
<v Speaker 5>Instantly notice that I've been giving these rules names.

NOTE CONF {"raw":[85,100,100,100,100,100,100,100,100]}

00:20:49.350 --> 00:20:53.610
<v Speaker 5>So these things to the side are names of rules.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:54.360 --> 00:20:56.670
<v Speaker 5>And these are customary names.

NOTE CONF {"raw":[100,100,100,100,100]}

00:20:56.670 --> 00:20:57.810
<v Speaker 5>What do they mean?

NOTE CONF {"raw":[100,100,100,100]}

00:20:57.840 --> 00:21:00.720
<v Speaker 5>The L stands for left and the R stands for

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:00.720 --> 00:21:01.350
<v Speaker 5>right.

NOTE CONF {"raw":[100]}

00:21:01.440 --> 00:21:04.080
<v Speaker 5>So this is the rule that lets you do something

NOTE CONF {"raw":[100,100,100,91,100,100,100,100,100,100]}

00:21:04.080 --> 00:21:05.730
<v Speaker 5>with and on the left.

NOTE CONF {"raw":[100,100,100,100,100]}

00:21:06.090 --> 00:21:08.460
<v Speaker 5>And this is the rule that lets you do something

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:08.460 --> 00:21:09.900
<v Speaker 5>with and on the right.

NOTE CONF {"raw":[100,100,100,100,100]}

00:21:09.900 --> 00:21:12.900
<v Speaker 5>So here do something means just split it apart with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:12.900 --> 00:21:13.680
<v Speaker 5>commas.

NOTE CONF {"raw":[100]}

00:21:13.680 --> 00:21:17.190
<v Speaker 5>Here doing something with the hand on the right means

NOTE CONF {"raw":[100,100,100,100,100,60,100,100,100,100]}

00:21:17.190 --> 00:21:21.540
<v Speaker 5>introducing breaking it down into two subsidiary assumptions.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:21:22.950 --> 00:21:26.310
<v Speaker 5>Similarly here this is not on the left.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:21:26.310 --> 00:21:28.140
<v Speaker 5>What do I do with a not on the left?

NOTE CONF {"raw":[100,100,100,100,100,75,93,100,100,100]}

00:21:28.140 --> 00:21:30.060
<v Speaker 5>What do I do with a not on the right?

NOTE CONF {"raw":[100,100,100,100,100,100,97,100,100,100]}

00:21:34.170 --> 00:21:40.050
<v Speaker 5>Um, that's almost all the rules that we're going to

NOTE CONF {"raw":[75,98,100,100,100,100,100,100,100,100]}

00:21:40.050 --> 00:21:40.800
<v Speaker 5>deal with.

NOTE CONF {"raw":[100,100]}

00:21:40.800 --> 00:21:44.320
<v Speaker 5>But there's one more rule that we need.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:21:44.530 --> 00:21:47.620
<v Speaker 5>Because although it's obvious, we have to say that it's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:47.620 --> 00:21:48.400
<v Speaker 5>obvious.

NOTE CONF {"raw":[100]}

00:21:49.690 --> 00:21:50.920
<v Speaker 5>And that's this rule.

NOTE CONF {"raw":[100,100,100,100]}

00:21:51.550 --> 00:21:56.740
<v Speaker 5>So forget about the stuff at the beginning.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:22:02.950 --> 00:22:09.160
<v Speaker 5>It just says every property implies itself, which is a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:09.160 --> 00:22:10.420
<v Speaker 5>very basic principle.

NOTE CONF {"raw":[100,100,100]}

00:22:10.450 --> 00:22:12.430
<v Speaker 5>It would be a bit sad if properties did not

NOTE CONF {"raw":[81,80,100,100,100,100,100,100,100,100]}

00:22:12.640 --> 00:22:17.230
<v Speaker 5>imply themselves, but it has to be said because otherwise

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:17.230 --> 00:22:18.250
<v Speaker 5>we don't know it.

NOTE CONF {"raw":[100,100,100,100]}

00:22:19.870 --> 00:22:23.170
<v Speaker 5>Um, so you have been doing quite a lot of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:23.170 --> 00:22:25.330
<v Speaker 5>recursion in Haskell recently, right?

NOTE CONF {"raw":[100,100,100,100,100]}

00:22:27.010 --> 00:22:28.150
<v Speaker 5>Fairly sure you have.

NOTE CONF {"raw":[100,100,100,100]}

00:22:28.600 --> 00:22:31.510
<v Speaker 5>And when you do write a recursive function in Haskell,

NOTE CONF {"raw":[100,100,100,55,100,100,100,100,100,100]}

00:22:31.510 --> 00:22:33.100
<v Speaker 5>there's always a base case.

NOTE CONF {"raw":[100,100,100,100,100]}

00:22:33.100 --> 00:22:36.310
<v Speaker 5>Well, okay, almost always a base case that finishes it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:36.310 --> 00:22:37.720
<v Speaker 5>off the simple case.

NOTE CONF {"raw":[100,100,100,100]}

00:22:37.720 --> 00:22:40.000
<v Speaker 5>And then there are the complex cases that let you

NOTE CONF {"raw":[100,100,100,94,100,100,100,100,100,100]}

00:22:40.000 --> 00:22:41.940
<v Speaker 5>build up the more complicated stuff.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:22:42.660 --> 00:22:47.640
<v Speaker 5>And this rule that says A entails a is the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:47.640 --> 00:22:49.380
<v Speaker 5>base case of many proofs.

NOTE CONF {"raw":[100,100,100,100,100]}

00:22:50.880 --> 00:22:52.650
<v Speaker 5>Um, remember this notation?

NOTE CONF {"raw":[95,100,100,100]}

00:22:52.650 --> 00:22:55.710
<v Speaker 5>We saw this in the existential assumption notation.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:22:56.040 --> 00:23:00.810
<v Speaker 5>This rule here says from no assumptions at all.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:23:01.080 --> 00:23:03.480
<v Speaker 5>We can prove that A entails a.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:23:03.480 --> 00:23:05.970
<v Speaker 5>In other words, a entails A is just a fact

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:05.970 --> 00:23:08.670
<v Speaker 5>of the universe, and indeed not of the universe.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:23:08.670 --> 00:23:10.530
<v Speaker 5>It's a fact of all universes.

NOTE CONF {"raw":[97,100,100,100,100,100]}

00:23:14.430 --> 00:23:19.860
<v Speaker 5>Okay, so I'm going to get into some actual proofs

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:20.670 --> 00:23:22.140
<v Speaker 5>very soon now.

NOTE CONF {"raw":[100,100,100]}

00:23:22.620 --> 00:23:26.160
<v Speaker 5>And this means we're actually going quite fast this year.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:26.190 --> 00:23:30.870
<v Speaker 5>So any questions clarification.

NOTE CONF {"raw":[100,100,100,97]}

00:23:37.650 --> 00:23:38.100
<v Speaker 5>Okay.

NOTE CONF {"raw":[100]}

00:23:38.100 --> 00:23:39.330
<v Speaker 5>Why am I doing proofs.

NOTE CONF {"raw":[100,100,100,100,100]}

00:23:39.330 --> 00:23:40.760
<v Speaker 5>What's the point of proofs?

NOTE CONF {"raw":[100,100,100,100,100]}

00:23:41.420 --> 00:23:43.760
<v Speaker 5>Well, we want to know whether formulae are true or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:43.760 --> 00:23:44.300
<v Speaker 5>not.

NOTE CONF {"raw":[100]}

00:23:44.720 --> 00:23:47.000
<v Speaker 5>Why do we want to know whether formulae are true?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:47.000 --> 00:23:49.070
<v Speaker 5>Because we want to know whether the things that they

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:49.070 --> 00:23:52.220
<v Speaker 5>describe in the real world or in the real mathematical

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:52.220 --> 00:23:53.960
<v Speaker 5>world are true.

NOTE CONF {"raw":[100,100,100]}

00:23:55.070 --> 00:23:58.190
<v Speaker 5>So we've been talking about valid syllogisms.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:23:58.400 --> 00:24:01.490
<v Speaker 5>A valid syllogism is one that is true in every

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:01.490 --> 00:24:02.360
<v Speaker 5>universe.

NOTE CONF {"raw":[100]}

00:24:02.720 --> 00:24:05.750
<v Speaker 5>And so a formula that is true in every universe

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:05.750 --> 00:24:08.450
<v Speaker 5>is something that is particularly useful, because it means we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:08.450 --> 00:24:11.630
<v Speaker 5>can use it without having to worry about the details

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:11.630 --> 00:24:13.070
<v Speaker 5>of the universe at hand.

NOTE CONF {"raw":[100,100,100,100,100]}

00:24:14.420 --> 00:24:18.590
<v Speaker 5>You will see the word tautology used.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:24:20.720 --> 00:24:24.710
<v Speaker 5>In order to describe formulae that are universally valid.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:24:25.310 --> 00:24:29.660
<v Speaker 5>Some people will make a pedantic distinction between being a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:29.660 --> 00:24:32.210
<v Speaker 5>tautology and being universally valid.

NOTE CONF {"raw":[100,100,100,100,100]}

00:24:32.810 --> 00:24:35.240
<v Speaker 5>I'm probably not going to be able to make the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:35.240 --> 00:24:39.220
<v Speaker 5>pedantic distinctions, so I'm not going to try to explain

NOTE CONF {"raw":[100,93,100,100,100,100,100,100,100,100]}

00:24:39.220 --> 00:24:39.640
<v Speaker 5>it.

NOTE CONF {"raw":[100]}

00:24:41.530 --> 00:24:44.890
<v Speaker 5>Um, tautology basically means self proving or true of its

NOTE CONF {"raw":[90,100,100,100,100,100,100,100,100,97]}

00:24:44.890 --> 00:24:45.700
<v Speaker 5>own, right?

NOTE CONF {"raw":[100,100]}

00:24:47.320 --> 00:24:50.200
<v Speaker 5>What does it mean to prove that some formula A

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:50.200 --> 00:24:52.630
<v Speaker 5>is valid in every universe?

NOTE CONF {"raw":[100,100,100,100,100]}

00:24:52.810 --> 00:24:56.560
<v Speaker 5>Well, if you remember from last time, the sequence that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,76,100]}

00:24:56.560 --> 00:25:00.340
<v Speaker 5>says A is true is no.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:25:00.340 --> 00:25:02.320
<v Speaker 5>Assumptions entail A.

NOTE CONF {"raw":[100,100,96]}

00:25:02.620 --> 00:25:05.710
<v Speaker 5>There was a question on Piazza asking for further explanation

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:25:05.710 --> 00:25:06.430
<v Speaker 5>of that.

NOTE CONF {"raw":[100,100]}

00:25:06.430 --> 00:25:10.240
<v Speaker 5>I hope that the further explanation I provided was useful,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:10.810 --> 00:25:14.110
<v Speaker 5>and at least the further explanation I provided after I

NOTE CONF {"raw":[96,91,91,100,100,100,97,100,100,87]}

00:25:14.110 --> 00:25:15.130
<v Speaker 5>had slept was useful.

NOTE CONF {"raw":[81,100,100,100]}

00:25:15.370 --> 00:25:19.150
<v Speaker 5>And so what we're trying to do when we prove

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:19.150 --> 00:25:23.860
<v Speaker 5>that a formula is valid is to deduce enough.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,96]}

00:25:23.890 --> 00:25:26.080
<v Speaker 5>No assumptions entail a.

NOTE CONF {"raw":[87,100,100,71]}

00:25:27.670 --> 00:25:30.040
<v Speaker 5>And what I'm going to do is just show you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:30.040 --> 00:25:33.790
<v Speaker 5>by example how we would go about doing this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:25:35.020 --> 00:25:39.720
<v Speaker 5>So here is a formula not P or Q and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:39.720 --> 00:25:41.580
<v Speaker 5>not P or P.

NOTE CONF {"raw":[100,100,100,100]}

00:25:43.200 --> 00:25:45.630
<v Speaker 5>Stare at that for a bit and see if you

NOTE CONF {"raw":[84,86,100,100,100,100,100,100,100,100]}

00:25:45.630 --> 00:25:49.110
<v Speaker 5>agree with me that it is necessarily true.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:25:49.110 --> 00:25:50.640
<v Speaker 5>Whatever P and Q are.

NOTE CONF {"raw":[100,100,100,100,100]}

00:26:16.920 --> 00:26:18.270
<v Speaker 0>Yeah, this is true.

NOTE CONF {"raw":[100,47,47,100]}

00:26:19.080 --> 00:26:20.400
<v Speaker 6>It is true.

NOTE CONF {"raw":[86,89,100]}

00:26:20.790 --> 00:26:24.180
<v Speaker 6>The right hand side is two and it is false.

NOTE CONF {"raw":[100,100,100,100,41,36,99,80,95,73]}

00:26:26.070 --> 00:26:26.700
<v Speaker 5>Yeah.

NOTE CONF {"raw":[100]}

00:26:26.700 --> 00:26:28.710
<v Speaker 5>So it can be quite hard to look at formulas

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,75]}

00:26:28.860 --> 00:26:33.840
<v Speaker 5>like this and work out whether it's true or not.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:33.840 --> 00:26:36.720
<v Speaker 5>But here the the easiest way to do is what's

NOTE CONF {"raw":[100,100,57,100,100,100,100,100,100,100]}

00:26:36.720 --> 00:26:38.900
<v Speaker 5>just been said to break it down by cases.

NOTE CONF {"raw":[100,100,100,88,100,100,100,100,100]}

00:26:39.050 --> 00:26:40.820
<v Speaker 5>Well, we've got P and we've got Q.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:26:40.850 --> 00:26:43.340
<v Speaker 5>It's possible that both P and Q are important, but

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:43.340 --> 00:26:44.420
<v Speaker 5>actually they aren't.

NOTE CONF {"raw":[100,100,100]}

00:26:44.570 --> 00:26:47.120
<v Speaker 5>So let's just look at what happens when P.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:26:47.120 --> 00:26:51.800
<v Speaker 5>If P is true, then p is true and therefore

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:51.800 --> 00:26:52.910
<v Speaker 5>this or is true.

NOTE CONF {"raw":[100,100,100,100]}

00:26:52.910 --> 00:26:54.620
<v Speaker 5>And so the whole thing is true.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:26:55.310 --> 00:26:57.680
<v Speaker 5>If not, p is the case.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:26:57.680 --> 00:27:00.980
<v Speaker 5>So p is false then well this is true.

NOTE CONF {"raw":[100,100,100,100,100,98,100,100,100]}

00:27:00.980 --> 00:27:03.620
<v Speaker 5>But this is also true because not p or q

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:03.620 --> 00:27:05.780
<v Speaker 5>is true whatever q is.

NOTE CONF {"raw":[100,100,100,100,100]}

00:27:05.780 --> 00:27:09.710
<v Speaker 5>So basically we have true and true or false which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:09.710 --> 00:27:10.460
<v Speaker 5>is true.

NOTE CONF {"raw":[100,100]}

00:27:10.760 --> 00:27:14.600
<v Speaker 5>So whatever values p and q have this is a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:14.600 --> 00:27:15.410
<v Speaker 5>tautology.

NOTE CONF {"raw":[100]}

00:27:15.440 --> 00:27:17.900
<v Speaker 5>You could do this by truth tables if you wanted

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:17.900 --> 00:27:18.260
<v Speaker 5>to.

NOTE CONF {"raw":[100]}

00:27:18.410 --> 00:27:21.620
<v Speaker 5>So when you did propositional logic at school, if you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:21.620 --> 00:27:24.050
<v Speaker 5>did it in your school computer science, you would have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:24.050 --> 00:27:26.870
<v Speaker 5>done this kind of thing with truth tables.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:27:26.870 --> 00:27:31.130
<v Speaker 5>But we're going to do it by proving it from

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:31.130 --> 00:27:35.300
<v Speaker 5>no assumptions, using only sound principles of reasoning.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:27:37.210 --> 00:27:38.380
<v Speaker 5>So.

NOTE CONF {"raw":[100]}

00:27:39.640 --> 00:27:42.640
<v Speaker 5>And this is one of the most challenging pieces of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:42.640 --> 00:27:44.290
<v Speaker 5>type setting in the course.

NOTE CONF {"raw":[84,84,100,100,100]}

00:27:46.510 --> 00:27:48.430
<v Speaker 5>This is what we're trying to prove.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:27:49.360 --> 00:27:53.410
<v Speaker 5>We want to prove from no assumptions that this formula

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:53.410 --> 00:27:55.870
<v Speaker 5>holds over here on the right.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:27:55.870 --> 00:27:58.540
<v Speaker 5>I've set out the entire list of rules that we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:58.540 --> 00:28:00.040
<v Speaker 5>might be able to use.

NOTE CONF {"raw":[100,100,100,100,100]}

00:28:02.080 --> 00:28:05.350
<v Speaker 5>Now, I said that we don't have to think so,

NOTE CONF {"raw":[100,100,97,100,100,100,100,100,100,100]}

00:28:05.350 --> 00:28:07.240
<v Speaker 5>since we don't have to think you can do the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:07.240 --> 00:28:08.380
<v Speaker 5>thinking for me.

NOTE CONF {"raw":[100,100,100]}

00:28:08.890 --> 00:28:14.380
<v Speaker 5>So looking at this formula, what can I do to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:14.380 --> 00:28:18.670
<v Speaker 5>it to try to break it down and work up

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:18.670 --> 00:28:20.920
<v Speaker 5>to things with no assumptions at all?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:28:26.590 --> 00:28:28.750
<v Speaker 5>Uh, wait a moment.

NOTE CONF {"raw":[100,100,100,100]}

00:28:28.750 --> 00:28:30.790
<v Speaker 5>I just want to see if anybody else is going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:30.790 --> 00:28:32.260
<v Speaker 5>to come in further back.

NOTE CONF {"raw":[100,100,100,100,100]}

00:28:34.300 --> 00:28:34.810
<v Speaker 5>No.

NOTE CONF {"raw":[100]}

00:28:34.810 --> 00:28:35.290
<v Speaker 5>Go ahead.

NOTE CONF {"raw":[100,100]}

00:28:39.920 --> 00:28:40.250
<v Speaker 6>So what.

NOTE CONF {"raw":[76,91]}

00:28:41.990 --> 00:28:42.860
<v Speaker 5>Should we what.

NOTE CONF {"raw":[100,100,100]}

00:28:43.190 --> 00:28:43.610
<v Speaker 0>Should we do?

NOTE CONF {"raw":[100,100,64]}

00:28:44.780 --> 00:28:45.380
<v Speaker 6>Uh.

NOTE CONF {"raw":[82]}

00:28:47.210 --> 00:28:48.890
<v Speaker 5>So there's a suggestion to do.

NOTE CONF {"raw":[100,100,100,100,100,98]}

00:28:48.890 --> 00:28:51.740
<v Speaker 5>Exchange, to flip, to negate it and move it over.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:52.160 --> 00:28:55.130
<v Speaker 5>Um, no, because that makes it more complicated.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:28:55.130 --> 00:28:57.800
<v Speaker 5>Puts more, puts another symbol in front of the formula.

NOTE CONF {"raw":[40,100,100,100,100,100,100,100,100,100]}

00:28:58.040 --> 00:29:00.770
<v Speaker 5>So the idea of taking a formula and proving it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:00.770 --> 00:29:03.350
<v Speaker 5>is always to try to break it down into smaller

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:03.350 --> 00:29:06.170
<v Speaker 5>and smaller components until you've broken it down into no

NOTE CONF {"raw":[100,100,100,100,82,100,100,100,100,100]}

00:29:06.170 --> 00:29:08.900
<v Speaker 5>components at all, which is no assumptions.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:29:09.320 --> 00:29:12.530
<v Speaker 5>So you should always be looking for ways to make

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:12.530 --> 00:29:13.880
<v Speaker 5>the formula smaller.

NOTE CONF {"raw":[100,100,100]}

00:29:14.120 --> 00:29:16.760
<v Speaker 5>As we go up using the rules, we're trying to

NOTE CONF {"raw":[100,100,100,100,100,100,100,52,100,100]}

00:29:16.760 --> 00:29:18.020
<v Speaker 5>break the formula down.

NOTE CONF {"raw":[100,100,100,100]}

00:29:18.020 --> 00:29:19.880
<v Speaker 5>It's like doing a Haskell recursion.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:19.880 --> 00:29:21.500
<v Speaker 5>You've got a big data structure.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:21.500 --> 00:29:22.580
<v Speaker 5>You break it down.

NOTE CONF {"raw":[100,100,100,100]}

00:29:22.580 --> 00:29:22.940
<v Speaker 5>Yeah.

NOTE CONF {"raw":[100]}

00:29:28.370 --> 00:29:28.640
<v Speaker 0>We know.

NOTE CONF {"raw":[90,78]}

00:29:32.150 --> 00:29:34.340
<v Speaker 6>What the bracket.

NOTE CONF {"raw":[33,73,67]}

00:29:35.890 --> 00:29:36.520
<v Speaker 0>Yep.

NOTE CONF {"raw":[63]}

00:29:38.950 --> 00:29:41.740
<v Speaker 6>So you're saying this is not the policy?

NOTE CONF {"raw":[100,72,87,73,92,99,54,42]}

00:29:42.040 --> 00:29:42.490
<v Speaker 5>Yep.

NOTE CONF {"raw":[36]}

00:29:44.200 --> 00:29:46.600
<v Speaker 5>I mean, we're not doing any arguments about whether things

NOTE CONF {"raw":[100,100,100,100,100,100,56,100,100,100]}

00:29:46.600 --> 00:29:47.170
<v Speaker 5>are true.

NOTE CONF {"raw":[100,100]}

00:29:47.200 --> 00:29:49.330
<v Speaker 5>We're trying we're constructing a proof.

NOTE CONF {"raw":[96,88,100,100,100,100]}

00:29:49.360 --> 00:29:51.940
<v Speaker 5>So this is purely syntactic manipulation.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:51.940 --> 00:29:54.790
<v Speaker 5>But the key point here is the one that you've

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:54.790 --> 00:29:57.130
<v Speaker 5>made that if we look at this formula it's P

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,97,97]}

00:29:57.130 --> 00:29:58.600
<v Speaker 5>or something.

NOTE CONF {"raw":[100,100]}

00:29:59.950 --> 00:30:04.420
<v Speaker 5>So what's the the top level of the formula.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:30:05.050 --> 00:30:08.740
<v Speaker 5>Um you don't know what syntax trees are I think.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:08.740 --> 00:30:10.930
<v Speaker 5>Does anybody know what a syntax tree is?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:30:13.390 --> 00:30:14.020
<v Speaker 5>No.

NOTE CONF {"raw":[91]}

00:30:14.170 --> 00:30:15.340
<v Speaker 5>You're going to learn them.

NOTE CONF {"raw":[100,100,100,100,100]}

00:30:24.940 --> 00:30:27.520
<v Speaker 5>So if you think about how you would represent this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:27.520 --> 00:30:31.420
<v Speaker 5>formula inside a computer as a Haskell programmer, as a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:31.420 --> 00:30:34.260
<v Speaker 5>Haskell programmer, Haskell program.

NOTE CONF {"raw":[100,100,100,100]}

00:30:34.260 --> 00:30:37.230
<v Speaker 5>You as a programmer would write something like.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:30:40.920 --> 00:30:41.400
<v Speaker 0>This.

NOTE CONF {"raw":[100]}

00:30:46.050 --> 00:30:46.380
<v Speaker 0>Uh.

NOTE CONF {"raw":[75]}

00:31:06.360 --> 00:31:11.550
<v Speaker 5>So what I've done there is just take the formula

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:11.550 --> 00:31:14.820
<v Speaker 5>and represent it as a Haskell data structure, basically.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:31:14.820 --> 00:31:18.600
<v Speaker 5>So and is an operator that takes two 4 million.

NOTE CONF {"raw":[100,100,66,100,100,100,100,100,100,100]}

00:31:18.600 --> 00:31:20.400
<v Speaker 5>One on the left, one on the right.

NOTE CONF {"raw":[95,100,100,100,100,100,100,100]}

00:31:22.500 --> 00:31:22.710
<v Speaker 0>Um.

NOTE CONF {"raw":[58]}

00:31:23.760 --> 00:31:25.920
<v Speaker 5>And so when we look at a formula like this,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:25.920 --> 00:31:28.110
<v Speaker 5>we say that the or here is.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:31:30.630 --> 00:31:31.950
<v Speaker 5>When it's written as an or.

NOTE CONF {"raw":[99,100,100,100,97,84]}

00:31:38.600 --> 00:31:43.130
<v Speaker 5>Is the outermost or the the topmost connective in the

NOTE CONF {"raw":[100,100,100,100,66,100,98,100,100,100]}

00:31:43.130 --> 00:31:43.820
<v Speaker 5>formula.

NOTE CONF {"raw":[100]}

00:31:45.440 --> 00:31:47.210
<v Speaker 5>It's basically looking at the brackets.

NOTE CONF {"raw":[86,100,100,100,100,100]}

00:31:47.210 --> 00:31:50.090
<v Speaker 5>If you look at the formula at the most abstract

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:50.090 --> 00:31:52.850
<v Speaker 5>level, it's P or something else.

NOTE CONF {"raw":[100,95,96,100,100,100]}

00:31:53.900 --> 00:31:55.130
<v Speaker 5>What is or.

NOTE CONF {"raw":[100,100,97]}

00:31:55.790 --> 00:31:58.070
<v Speaker 5>Well this is an all on the right of a

NOTE CONF {"raw":[100,100,100,100,62,100,100,100,100,100]}

00:31:58.070 --> 00:31:58.640
<v Speaker 5>formula.

NOTE CONF {"raw":[100]}

00:31:58.640 --> 00:32:00.560
<v Speaker 5>What can we do with an all on the right

NOTE CONF {"raw":[100,100,100,100,100,100,70,100,100,100]}

00:32:00.560 --> 00:32:01.460
<v Speaker 5>of a formula.

NOTE CONF {"raw":[100,100,100]}

00:32:08.150 --> 00:32:08.660
<v Speaker 5>Comma.

NOTE CONF {"raw":[96]}

00:32:09.470 --> 00:32:09.830
<v Speaker 5>Okay.

NOTE CONF {"raw":[100]}

00:32:09.830 --> 00:32:14.120
<v Speaker 5>We've got a rule for or on the right here

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:14.120 --> 00:32:17.000
<v Speaker 5>which says that when we see A or B on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:17.000 --> 00:32:19.310
<v Speaker 5>the right, we can replace the or with a comma.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:19.940 --> 00:32:21.770
<v Speaker 5>So that's what I've done there.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:32:23.840 --> 00:32:25.580
<v Speaker 5>Or has just turned into a comma.

NOTE CONF {"raw":[100,100,100,100,100,56,100]}

00:32:25.610 --> 00:32:27.560
<v Speaker 5>So notice this is braindead.

NOTE CONF {"raw":[100,100,100,100,84]}

00:32:27.560 --> 00:32:30.050
<v Speaker 5>There was actually only one thing we could do here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:30.620 --> 00:32:32.530
<v Speaker 5>If you look at any of the other rules, they

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:32.530 --> 00:32:33.460
<v Speaker 5>don't apply.

NOTE CONF {"raw":[100,100]}

00:32:37.030 --> 00:32:40.150
<v Speaker 5>Um, what's the next thing I can do?

NOTE CONF {"raw":[99,100,100,100,100,100,100,100]}

00:32:43.750 --> 00:32:46.630
<v Speaker 5>So now I'm looking at this formula where I've broken

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,82,100]}

00:32:46.630 --> 00:32:49.090
<v Speaker 5>it down into this bit and this bit.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:32:57.040 --> 00:32:58.600
<v Speaker 5>What's the topmost connective.

NOTE CONF {"raw":[100,100,85,100]}

00:32:58.600 --> 00:33:00.790
<v Speaker 5>What's the outer connective in this formula?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:33:05.620 --> 00:33:08.560
<v Speaker 5>I'm hearing some things but shout, shout a bit louder.

NOTE CONF {"raw":[100,100,100,100,100,84,60,100,100,100]}

00:33:08.890 --> 00:33:12.970
<v Speaker 5>And so it's not P and some stuff.

NOTE CONF {"raw":[100,100,100,100,77,100,100,100]}

00:33:14.980 --> 00:33:16.990
<v Speaker 5>Um it's an and it's on the right.

NOTE CONF {"raw":[91,100,100,100,100,100,100,100]}

00:33:16.990 --> 00:33:18.760
<v Speaker 5>I've got a rule that says what I can do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:18.760 --> 00:33:20.140
<v Speaker 5>with and on the right.

NOTE CONF {"raw":[100,100,100,100,100]}

00:33:20.380 --> 00:33:23.410
<v Speaker 5>If I see A and B on the right, then

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:23.410 --> 00:33:27.250
<v Speaker 5>I have to split my proof into two sub proofs.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:27.250 --> 00:33:28.780
<v Speaker 5>So notice what's going on here.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:33:28.780 --> 00:33:30.280
<v Speaker 5>I'm trying to prove this.

NOTE CONF {"raw":[100,100,100,100,100]}

00:33:30.430 --> 00:33:34.380
<v Speaker 5>And when I do the introduction of this rule, I'm

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:34.560 --> 00:33:36.930
<v Speaker 5>creating a sub proof on the left to deal with

NOTE CONF {"raw":[100,100,96,100,100,100,100,100,100,100]}

00:33:36.930 --> 00:33:38.880
<v Speaker 5>a and a sub proof on the right to deal

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:38.880 --> 00:33:39.510
<v Speaker 5>with B.

NOTE CONF {"raw":[100,100]}

00:33:39.750 --> 00:33:44.430
<v Speaker 5>So here I'm going to have to try to prove

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:44.910 --> 00:33:49.680
<v Speaker 5>not P there and not P or Q here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:33:50.250 --> 00:33:53.160
<v Speaker 5>And as always, this p here is being carried along

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:53.160 --> 00:33:58.350
<v Speaker 5>because the rule here says the delta, all the rest

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:58.350 --> 00:34:00.600
<v Speaker 5>of the stuff on the right is unchanged.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:34:01.590 --> 00:34:04.620
<v Speaker 5>So I look at the formula I'm concerned with.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:34:04.620 --> 00:34:08.850
<v Speaker 5>I apply the rule to it and move it back

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:08.850 --> 00:34:09.330
<v Speaker 5>up.

NOTE CONF {"raw":[100]}

00:34:21.450 --> 00:34:23.100
<v Speaker 5>What am I going to do next?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:26.940 --> 00:34:28.889
<v Speaker 5>Now I've got two things to deal with.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:34:29.040 --> 00:34:31.690
<v Speaker 5>One of them is slightly easier than the other.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:34:33.520 --> 00:34:33.850
<v Speaker 5>Yeah.

NOTE CONF {"raw":[100]}

00:34:39.370 --> 00:34:41.440
<v Speaker 5>Uh, you want to do me to deal with.

NOTE CONF {"raw":[55,100,100,99,79,100,100,100,100]}

00:34:41.440 --> 00:34:41.679
<v Speaker 5>Sorry.

NOTE CONF {"raw":[56]}

00:34:41.679 --> 00:34:42.820
<v Speaker 5>That's all on the right.

NOTE CONF {"raw":[100,100,100,100,100]}

00:34:44.440 --> 00:34:44.919
<v Speaker 5>Yeah.

NOTE CONF {"raw":[100]}

00:34:47.530 --> 00:34:51.850
<v Speaker 5>Okay, so if I look at this one, this says,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:51.850 --> 00:34:53.320
<v Speaker 5>remember comma on the left.

NOTE CONF {"raw":[100,100,100,100,100]}

00:34:53.320 --> 00:34:56.139
<v Speaker 5>On the right means or so this is saying not

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:56.139 --> 00:34:57.160
<v Speaker 5>p or p.

NOTE CONF {"raw":[100,100,100]}

00:34:57.370 --> 00:34:58.450
<v Speaker 5>That's pretty true.

NOTE CONF {"raw":[100,100,100]}

00:34:58.450 --> 00:35:00.100
<v Speaker 5>So we should be able to prove that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:35:00.250 --> 00:35:02.740
<v Speaker 5>But in order to prove it using the rules we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:02.740 --> 00:35:04.540
<v Speaker 5>have to flip one of these to the left so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:04.540 --> 00:35:08.380
<v Speaker 5>we can take not P and flip it to the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:08.380 --> 00:35:09.040
<v Speaker 5>left.

NOTE CONF {"raw":[100]}

00:35:10.300 --> 00:35:14.800
<v Speaker 5>That leaves me trying to prove that P entails P.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:15.220 --> 00:35:18.610
<v Speaker 5>Well, that was the base case that I assume introduced.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,76,100]}

00:35:18.610 --> 00:35:22.210
<v Speaker 5>So on this side of the proof, we're finished.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:35:23.140 --> 00:35:26.860
<v Speaker 5>No assumptions left on this side of the proof.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:35:28.000 --> 00:35:29.110
<v Speaker 5>What happens?

NOTE CONF {"raw":[100,100]}

00:35:30.780 --> 00:35:33.120
<v Speaker 5>Now I have to deal with or I have all

NOTE CONF {"raw":[100,100,100,100,100,100,94,100,100,100]}

00:35:33.120 --> 00:35:33.780
<v Speaker 5>on the right.

NOTE CONF {"raw":[100,100,100]}

00:35:33.780 --> 00:35:35.550
<v Speaker 5>I have a rule for dealing with or on the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:35.550 --> 00:35:35.910
<v Speaker 5>right.

NOTE CONF {"raw":[100]}

00:35:35.910 --> 00:35:37.920
<v Speaker 5>I have to break it down again.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:35:38.670 --> 00:35:43.110
<v Speaker 5>But instead I've chosen to do.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:35:43.530 --> 00:35:43.770
<v Speaker 5>No.

NOTE CONF {"raw":[51]}

00:35:43.770 --> 00:35:44.850
<v Speaker 5>I saw it all on the right.

NOTE CONF {"raw":[99,97,97,100,100,100,100]}

00:35:44.850 --> 00:35:46.740
<v Speaker 5>I break it down into commas.

NOTE CONF {"raw":[98,100,100,100,100,100]}

00:35:46.920 --> 00:35:49.740
<v Speaker 5>So now I have not P or p.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:35:52.560 --> 00:35:56.340
<v Speaker 5>Well, this is exactly the same as that, except it's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:56.340 --> 00:35:59.010
<v Speaker 5>got some other junk that I don't care about, so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:59.010 --> 00:36:00.810
<v Speaker 5>I can do exactly the same.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:36:01.410 --> 00:36:06.360
<v Speaker 5>P entails P or Q, and that's part of the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:07.920 --> 00:36:11.460
<v Speaker 5>identity rule because q here is the delta.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:36:11.460 --> 00:36:13.320
<v Speaker 5>Look at what the identity rule says.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:36:13.320 --> 00:36:15.750
<v Speaker 5>It says if you have a the same thing on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:15.750 --> 00:36:18.270
<v Speaker 5>the left and the right, and any old junk on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:18.270 --> 00:36:20.610
<v Speaker 5>the left and any old junk on the right, then

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:20.610 --> 00:36:21.420
<v Speaker 5>you're done.

NOTE CONF {"raw":[100,100]}

00:36:21.420 --> 00:36:25.470
<v Speaker 5>So here we have p entails P and some junk

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:25.470 --> 00:36:26.790
<v Speaker 5>that we don't care about.

NOTE CONF {"raw":[100,100,100,100,100]}

00:36:26.790 --> 00:36:31.910
<v Speaker 5>So now we have a proof which starts with no

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:31.910 --> 00:36:34.970
<v Speaker 5>assumptions, because there's nothing above the line either here or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:34.970 --> 00:36:35.600
<v Speaker 5>here.

NOTE CONF {"raw":[100]}

00:36:36.350 --> 00:36:41.900
<v Speaker 5>And working forward, we see the rules.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:36:41.900 --> 00:36:43.400
<v Speaker 5>Give us the conclusion.

NOTE CONF {"raw":[100,100,100,100]}

00:36:43.760 --> 00:36:47.630
<v Speaker 5>So that's the structure of a proof in a modern

NOTE CONF {"raw":[100,100,100,100,100,61,100,100,100,100]}

00:36:48.590 --> 00:36:54.350
<v Speaker 5>sequence calculus, which is a particularly formal version of a

NOTE CONF {"raw":[65,100,100,100,100,100,100,100,100,100]}

00:36:54.350 --> 00:36:56.840
<v Speaker 5>proof in the same style that you do in mathematics,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:56.840 --> 00:36:58.370
<v Speaker 5>but purely symbolic.

NOTE CONF {"raw":[100,100,100]}

00:36:58.370 --> 00:37:00.290
<v Speaker 5>So you can see that it makes sense.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:37:04.940 --> 00:37:08.780
<v Speaker 5>So that was your first proper proof.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:09.080 --> 00:37:11.540
<v Speaker 5>From a computer scientists point of view.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:15.320 --> 00:37:17.000
<v Speaker 5>How much sense did it make?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:37:21.920 --> 00:37:23.660
<v Speaker 5>Okay, I can see some sense.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:37:23.660 --> 00:37:25.700
<v Speaker 5>I seem a bit of sense.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:37:26.330 --> 00:37:26.990
<v Speaker 5>Anybody?

NOTE CONF {"raw":[100]}

00:37:26.990 --> 00:37:27.470
<v Speaker 5>Definitely.

NOTE CONF {"raw":[100]}

00:37:27.470 --> 00:37:29.770
<v Speaker 5>in the not very much sense at all.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:37:35.020 --> 00:37:38.350
<v Speaker 5>So I don't necessarily expect it to make sense to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:38.350 --> 00:37:41.560
<v Speaker 5>everybody right now because it's a very formal manipulation.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:37:41.710 --> 00:37:45.730
<v Speaker 5>But I want to emphasise again the fact that I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:45.730 --> 00:37:47.950
<v Speaker 5>didn't have to do much thinking.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:37:49.720 --> 00:37:52.870
<v Speaker 5>At almost every case, there was very little choice about

NOTE CONF {"raw":[68,100,100,100,100,100,100,100,100,100]}

00:37:52.870 --> 00:37:54.070
<v Speaker 5>what to do next.

NOTE CONF {"raw":[100,100,100,100]}

00:37:54.130 --> 00:37:57.910
<v Speaker 5>So here, for example, when I look at this thing,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:59.320 --> 00:38:01.180
<v Speaker 5>I mean, I can always negate and flip.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:38:01.180 --> 00:38:03.070
<v Speaker 5>I can always move things from one side to the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:03.070 --> 00:38:03.490
<v Speaker 5>other.

NOTE CONF {"raw":[100]}

00:38:03.490 --> 00:38:05.860
<v Speaker 5>But here I see an or so that tells me

NOTE CONF {"raw":[100,100,100,100,100,98,100,100,100,100]}

00:38:05.860 --> 00:38:07.390
<v Speaker 5>I apply the all.

NOTE CONF {"raw":[100,100,100,78]}

00:38:09.370 --> 00:38:12.160
<v Speaker 5>And that means that you can go away and program

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,97]}

00:38:12.160 --> 00:38:14.350
<v Speaker 5>it, which I believe you may be doing at some

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:14.350 --> 00:38:14.890
<v Speaker 5>point.

NOTE CONF {"raw":[100]}

00:38:17.830 --> 00:38:19.300
<v Speaker 5>So that's what I said.

NOTE CONF {"raw":[100,100,100,100,100]}

00:38:22.360 --> 00:38:22.840
<v Speaker 5>Um.

NOTE CONF {"raw":[100]}

00:38:26.250 --> 00:38:26.910
<v Speaker 5>Okay.

NOTE CONF {"raw":[100]}

00:38:26.910 --> 00:38:31.860
<v Speaker 5>We have a couple of possibilities at this point because

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:31.860 --> 00:38:36.930
<v Speaker 5>I have another, more complicated proof.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:38:37.470 --> 00:38:41.070
<v Speaker 5>This is probably enough to be doing the tutorial, although

NOTE CONF {"raw":[100,100,100,100,100,100,100,98,100,100]}

00:38:41.070 --> 00:38:42.960
<v Speaker 5>you will need to work a bit more on it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:43.380 --> 00:38:49.590
<v Speaker 5>So would you prefer to stop now?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:38:49.590 --> 00:38:51.480
<v Speaker 5>And you need to work a bit to do the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:51.480 --> 00:38:56.310
<v Speaker 5>tutorial, or to go through the even more complex stuff

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:56.310 --> 00:38:56.670
<v Speaker 5>later?

NOTE CONF {"raw":[100]}

00:38:56.670 --> 00:39:00.000
<v Speaker 5>The alternative is we leave the slightly more complex stuff

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:00.000 --> 00:39:01.140
<v Speaker 5>until next week.

NOTE CONF {"raw":[100,100,100]}

00:39:07.200 --> 00:39:08.880
<v Speaker 5>And don't leave it to next week.

NOTE CONF {"raw":[84,100,100,100,100,100,100]}

00:39:10.140 --> 00:39:10.560
<v Speaker 5>Right.

NOTE CONF {"raw":[100]}

00:39:10.560 --> 00:39:13.800
<v Speaker 5>But then the number of people who are expressing that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:13.800 --> 00:39:15.690
<v Speaker 5>view is the kind of people I would expect to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:15.690 --> 00:39:18.510
<v Speaker 5>say that, and there might be a silent majority.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:39:18.510 --> 00:39:20.250
<v Speaker 5>This is where I need to clap, isn't it?

NOTE CONF {"raw":[100,100,100,100,100,52,100,100,100]}

00:39:20.250 --> 00:39:22.380
<v Speaker 5>But I haven't learned how to use woohoo clap, so

NOTE CONF {"raw":[100,100,100,100,100,100,100,43,52,100]}

00:39:22.380 --> 00:39:24.090
<v Speaker 5>we're not getting a woohoo clap.

NOTE CONF {"raw":[100,100,100,100,88,100]}

00:39:24.840 --> 00:39:26.240
<v Speaker 5>How about we do it both ways?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:39:26.240 --> 00:39:28.760
<v Speaker 5>I go through it relatively fast now, but then we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:28.760 --> 00:39:32.150
<v Speaker 5>come back to it next week because it will almost

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:32.150 --> 00:39:34.010
<v Speaker 5>certainly need some reinforcement.

NOTE CONF {"raw":[100,100,100,100]}

00:39:34.190 --> 00:39:36.650
<v Speaker 5>And you might possibly want to see this stuff in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:36.650 --> 00:39:38.210
<v Speaker 5>order to do the tutorial.

NOTE CONF {"raw":[100,100,100,100,100]}

00:39:39.800 --> 00:39:40.940
<v Speaker 5>The level of talk.

NOTE CONF {"raw":[100,100,100,97]}

00:39:40.940 --> 00:39:43.160
<v Speaker 5>I mean, I'm sure you're all talking about the proofs

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,90]}

00:39:43.160 --> 00:39:45.440
<v Speaker 5>going on, but the level of talk is getting loud

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:45.440 --> 00:39:47.540
<v Speaker 5>enough that I'm finding it a bit difficult to hear

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:47.540 --> 00:39:48.680
<v Speaker 5>myself think.

NOTE CONF {"raw":[100,100]}

00:40:04.100 --> 00:40:06.410
<v Speaker 5>And I often find that when I say that people

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:06.410 --> 00:40:08.540
<v Speaker 5>haven't even been listening to what I've been saying for

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:08.540 --> 00:40:12.500
<v Speaker 5>the last two minutes, because otherwise they would shut up.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:13.880 --> 00:40:14.420
<v Speaker 5>Okay.

NOTE CONF {"raw":[77]}

00:40:15.050 --> 00:40:16.340
<v Speaker 5>So in general, yeah.

NOTE CONF {"raw":[100,100,100,100]}

00:40:16.340 --> 00:40:19.190
<v Speaker 5>So talking about things here, but do remember that you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:19.190 --> 00:40:22.340
<v Speaker 5>are surprisingly loud to the people around you, and you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:22.340 --> 00:40:25.230
<v Speaker 5>should maybe try to talk at a volume that doesn't

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,98]}

00:40:25.230 --> 00:40:27.540
<v Speaker 5>interfere with the people next to you and behind you.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:31.110 --> 00:40:37.110
<v Speaker 5>Um, so I want to show you another example of

NOTE CONF {"raw":[96,100,100,100,100,100,100,100,100,100]}

00:40:37.110 --> 00:40:38.100
<v Speaker 5>using proofs.

NOTE CONF {"raw":[100,100]}

00:40:38.100 --> 00:40:40.770
<v Speaker 5>So often when we try to prove something, we don't

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:40.770 --> 00:40:42.600
<v Speaker 5>know whether it's actually true or not.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:40:42.600 --> 00:40:45.000
<v Speaker 5>It may not be a tautology, it may not be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:45.000 --> 00:40:47.700
<v Speaker 5>valid, and it may be that we try to prove

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:47.700 --> 00:40:49.740
<v Speaker 5>it and we find that there's a bunch of assumptions.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:49.740 --> 00:40:52.650
<v Speaker 5>And then that's useful because we know what we need

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:52.650 --> 00:40:54.780
<v Speaker 5>to assume if we ever need to use this piece

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:54.780 --> 00:40:55.620
<v Speaker 5>of reasoning.

NOTE CONF {"raw":[100,100]}

00:40:55.770 --> 00:40:58.320
<v Speaker 5>Now, this is a bit kind of boring because these

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:58.320 --> 00:40:59.700
<v Speaker 5>are propositional statements.

NOTE CONF {"raw":[100,100,100]}

00:40:59.700 --> 00:41:02.190
<v Speaker 5>And so nothing is very interesting.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:41:02.790 --> 00:41:05.940
<v Speaker 5>Um, but if I give you that and say, stare

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:05.940 --> 00:41:08.190
<v Speaker 5>at it and tell me whether it's a tautology, how

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:08.190 --> 00:41:09.510
<v Speaker 5>long are we going to be here?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:41:11.310 --> 00:41:12.060
<v Speaker 5>Too long.

NOTE CONF {"raw":[100,100]}

00:41:12.060 --> 00:41:12.570
<v Speaker 5>Right?

NOTE CONF {"raw":[100]}

00:41:13.530 --> 00:41:15.930
<v Speaker 5>You could do it by truth tables, but I can't

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:15.930 --> 00:41:18.510
<v Speaker 5>stare at that and work out whether it's or tautology

NOTE CONF {"raw":[100,100,100,100,100,100,100,94,100,100]}

00:41:18.510 --> 00:41:20.910
<v Speaker 5>in less than about five minutes or maybe two minutes

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:20.910 --> 00:41:21.840
<v Speaker 5>here on a good day.

NOTE CONF {"raw":[83,100,100,100,100]}

00:41:23.070 --> 00:41:25.220
<v Speaker 5>But if I try to do a proof of it,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:25.580 --> 00:41:27.500
<v Speaker 5>I will get out of the proof.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:41:27.500 --> 00:41:29.780
<v Speaker 5>The answer as to whether it's a tautology and if

NOTE CONF {"raw":[100,100,100,100,100,96,60,100,100,100]}

00:41:29.780 --> 00:41:32.600
<v Speaker 5>it isn't, I'll find out what I need to assume.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:33.020 --> 00:41:37.700
<v Speaker 5>So here's another long and fancy proof, and I think

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:37.700 --> 00:41:39.560
<v Speaker 5>this one even has some pretty colours in it to

NOTE CONF {"raw":[100,100,100,100,100,100,83,100,100,100]}

00:41:39.560 --> 00:41:41.630
<v Speaker 5>make it even clearer than the last one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:41:42.620 --> 00:41:44.930
<v Speaker 5>Um, this is a nasty long formula.

NOTE CONF {"raw":[97,100,100,100,100,100,100]}

00:41:45.590 --> 00:41:47.900
<v Speaker 5>You probably have difficulty counting the brackets.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:41:47.900 --> 00:41:50.480
<v Speaker 5>I have difficulty counting the brackets right now.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:41:50.480 --> 00:41:54.500
<v Speaker 5>So to make it clearer, this is the outermost connective

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:54.500 --> 00:41:55.580
<v Speaker 5>in that formula.

NOTE CONF {"raw":[100,100,100]}

00:41:55.730 --> 00:41:58.250
<v Speaker 5>It's got this on the left or this on the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:58.250 --> 00:41:58.850
<v Speaker 5>right.

NOTE CONF {"raw":[100]}

00:42:00.230 --> 00:42:02.660
<v Speaker 5>When I see an all on the right, then what

NOTE CONF {"raw":[100,100,100,100,61,100,100,100,100,100]}

00:42:02.660 --> 00:42:05.030
<v Speaker 5>I do is use the all rule to break it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:05.030 --> 00:42:08.600
<v Speaker 5>down into two separate formulae, which I can deal with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:08.600 --> 00:42:09.410
<v Speaker 5>separately.

NOTE CONF {"raw":[100]}

00:42:09.980 --> 00:42:12.830
<v Speaker 5>So that gives me now a choice.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:42:13.550 --> 00:42:16.940
<v Speaker 5>I could look at the left hand, the first formula

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:16.940 --> 00:42:17.690
<v Speaker 5>on the right.

NOTE CONF {"raw":[100,100,100]}

00:42:17.960 --> 00:42:21.800
<v Speaker 5>The outermost connective of that one is a negation.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:42:22.250 --> 00:42:26.110
<v Speaker 5>I could look at the formula, the second formula where

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:26.110 --> 00:42:29.590
<v Speaker 5>the outermost connective is an Or.

NOTE CONF {"raw":[100,100,100,90,84,98]}

00:42:29.920 --> 00:42:32.470
<v Speaker 5>Do you think it matters which one I do first?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:36.130 --> 00:42:39.280
<v Speaker 5>No it doesn't.

NOTE CONF {"raw":[100,100,100]}

00:42:39.280 --> 00:42:42.790
<v Speaker 5>So in some more general cases it can make proofs

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:42.790 --> 00:42:44.590
<v Speaker 5>longer if you do the wrong one first.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:42:44.590 --> 00:42:46.960
<v Speaker 5>So there's a kind of heuristic that sometimes it makes

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:46.960 --> 00:42:47.680
<v Speaker 5>life easier.

NOTE CONF {"raw":[100,100]}

00:42:47.680 --> 00:42:51.490
<v Speaker 5>But in general these are going to be completely, well,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:51.490 --> 00:42:53.650
<v Speaker 5>more or less independent operations.

NOTE CONF {"raw":[100,100,100,100,100]}

00:42:54.820 --> 00:42:57.580
<v Speaker 5>What I've actually chosen to do is deal with the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:57.580 --> 00:42:58.480
<v Speaker 5>negation.

NOTE CONF {"raw":[100]}

00:42:59.350 --> 00:43:03.250
<v Speaker 5>So by looking at this negation, I flipped that whole

NOTE CONF {"raw":[100,100,100,100,100,100,100,72,100,100]}

00:43:03.250 --> 00:43:05.680
<v Speaker 5>thing over to the other side, and I remove the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,56,100]}

00:43:05.680 --> 00:43:07.000
<v Speaker 5>negation so strictly.

NOTE CONF {"raw":[100,100,100]}

00:43:07.000 --> 00:43:08.230
<v Speaker 5>This is a double negation.

NOTE CONF {"raw":[100,100,75,100,100]}

00:43:09.280 --> 00:43:11.980
<v Speaker 5>Negation flip means removing a negation.

NOTE CONF {"raw":[98,100,100,100,94,100]}

00:43:12.190 --> 00:43:15.010
<v Speaker 5>So now I've got a slightly more balanced formula.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:15.160 --> 00:43:18.340
<v Speaker 5>And now I have some choice about what to do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:18.340 --> 00:43:19.120
<v Speaker 5>again.

NOTE CONF {"raw":[98]}

00:43:19.300 --> 00:43:21.070
<v Speaker 5>What choices do I have here?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:43:27.630 --> 00:43:27.960
<v Speaker 0>Yeah.

NOTE CONF {"raw":[100]}

00:43:30.030 --> 00:43:32.130
<v Speaker 5>So I've got an and on the left and I've

NOTE CONF {"raw":[100,100,100,88,44,100,100,100,100,100]}

00:43:32.130 --> 00:43:33.480
<v Speaker 5>got an oil on the right.

NOTE CONF {"raw":[100,100,74,100,100,100]}

00:43:33.480 --> 00:43:36.030
<v Speaker 5>Both of those are things I replaced by commas.

NOTE CONF {"raw":[100,100,100,100,100,100,63,100,100]}

00:43:36.570 --> 00:43:39.270
<v Speaker 5>Now technically I have to do this in two steps

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:39.270 --> 00:43:41.760
<v Speaker 5>because we have one rule for or and another rule

NOTE CONF {"raw":[100,100,100,100,100,100,87,100,100,100]}

00:43:41.760 --> 00:43:41.940
<v Speaker 5>for.

NOTE CONF {"raw":[100]}

00:43:41.940 --> 00:43:45.360
<v Speaker 5>And that's boring right.

NOTE CONF {"raw":[100,100,100,100]}

00:43:45.360 --> 00:43:46.470
<v Speaker 5>And it needs writing.

NOTE CONF {"raw":[100,100,87,100]}

00:43:46.470 --> 00:43:47.610
<v Speaker 5>And I hate writing.

NOTE CONF {"raw":[100,100,100,100]}

00:43:47.610 --> 00:43:51.180
<v Speaker 5>So I'm quite happy for you in proofs that you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:51.180 --> 00:43:55.020
<v Speaker 5>write down to take two obvious steps and do them

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:55.020 --> 00:43:56.160
<v Speaker 5>at the same time.

NOTE CONF {"raw":[100,100,100,100]}

00:43:56.160 --> 00:44:01.260
<v Speaker 5>So I talked previously about the laziness of programmers, mathematicians,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:01.260 --> 00:44:03.090
<v Speaker 5>or at least as lazy as programmers.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:03.300 --> 00:44:06.870
<v Speaker 5>So here I'm doing an all on the right and

NOTE CONF {"raw":[100,100,100,100,100,97,100,100,100,100]}

00:44:06.870 --> 00:44:08.940
<v Speaker 5>an and on the left, and I'm just writing them

NOTE CONF {"raw":[100,93,100,100,100,100,100,100,100,100]}

00:44:08.940 --> 00:44:11.520
<v Speaker 5>down in the same rule, although technically it should be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:11.520 --> 00:44:12.420
<v Speaker 5>two rules.

NOTE CONF {"raw":[100,100]}

00:44:14.520 --> 00:44:16.770
<v Speaker 5>Um, what am I left with?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:44:19.290 --> 00:44:21.270
<v Speaker 5>Any bets on what I should do next?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:44:23.810 --> 00:44:24.230
<v Speaker 5>Yeah.

NOTE CONF {"raw":[93]}

00:44:26.510 --> 00:44:28.790
<v Speaker 5>Um, there's a bunch of things I could do.

NOTE CONF {"raw":[92,100,100,100,100,100,100,100,100]}

00:44:28.820 --> 00:44:32.540
<v Speaker 5>I'm actually going to choose that one because it's the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:32.540 --> 00:44:33.380
<v Speaker 5>first thing.

NOTE CONF {"raw":[100,100]}

00:44:33.380 --> 00:44:36.410
<v Speaker 5>So I've got an all on the left, and that

NOTE CONF {"raw":[100,100,100,100,52,100,100,100,100,100]}

00:44:36.410 --> 00:44:39.860
<v Speaker 5>means I have to break it down into two separate

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:39.860 --> 00:44:41.120
<v Speaker 5>sub proofs again.

NOTE CONF {"raw":[98,98,100]}

00:44:41.870 --> 00:44:44.630
<v Speaker 5>Um, notice that this is now getting quite complicated with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:44.630 --> 00:44:47.300
<v Speaker 5>the gammas and deltas, the junk we're not currently dealing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:47.300 --> 00:44:47.780
<v Speaker 5>with.

NOTE CONF {"raw":[100]}

00:44:48.290 --> 00:44:50.780
<v Speaker 5>Here's the formula that I'm working on.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:50.810 --> 00:44:53.600
<v Speaker 5>This is junk on the left and this is junk

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:53.600 --> 00:44:54.410
<v Speaker 5>on the right.

NOTE CONF {"raw":[100,100,100]}

00:44:54.620 --> 00:44:59.210
<v Speaker 5>So this formula here is left unchanged.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:59.480 --> 00:45:02.300
<v Speaker 5>This stuff on the right is left unchanged when I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:02.300 --> 00:45:03.410
<v Speaker 5>apply the rule.

NOTE CONF {"raw":[100,100,100]}

00:45:03.410 --> 00:45:07.070
<v Speaker 5>So that's why we express these rules in terms of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:07.070 --> 00:45:08.030
<v Speaker 5>the gammas and deltas.

NOTE CONF {"raw":[100,100,100,100]}

00:45:08.030 --> 00:45:10.430
<v Speaker 5>They just sweep up the stuff we're not currently working

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:10.430 --> 00:45:10.850
<v Speaker 5>with.

NOTE CONF {"raw":[100]}

00:45:12.020 --> 00:45:14.150
<v Speaker 5>So now I've broken this down with a not A

NOTE CONF {"raw":[100,100,91,100,100,100,100,100,100,100]}

00:45:14.150 --> 00:45:15.140
<v Speaker 5>and a not B.

NOTE CONF {"raw":[100,100,100,100]}

00:45:15.440 --> 00:45:18.020
<v Speaker 5>Now obviously I'm probably going to do the same again

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:18.020 --> 00:45:24.280
<v Speaker 5>because I can do exactly the same with an oar

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,98,97]}

00:45:24.280 --> 00:45:24.970
<v Speaker 5>here.

NOTE CONF {"raw":[100]}

00:45:25.510 --> 00:45:31.300
<v Speaker 5>Breaks it down into not C and B.

NOTE CONF {"raw":[100,100,100,100,100,100,100,81]}

00:45:31.690 --> 00:45:34.510
<v Speaker 5>And now I have a bunch of stuff which I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:34.510 --> 00:45:35.470
<v Speaker 5>can't prove.

NOTE CONF {"raw":[100,100]}

00:45:36.250 --> 00:45:42.310
<v Speaker 5>Um, because I can't prove that not B, that B

NOTE CONF {"raw":[73,100,100,100,100,100,100,96,100,100]}

00:45:42.310 --> 00:45:44.680
<v Speaker 5>and not C entails not A and C, and I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:44.680 --> 00:45:47.710
<v Speaker 5>can't prove that B entails c.

NOTE CONF {"raw":[100,100,100,100,100,88]}

00:45:47.740 --> 00:45:49.210
<v Speaker 5>Can I simplify it at all?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:45:49.240 --> 00:45:50.560
<v Speaker 5>Well, I've got two B's here.

NOTE CONF {"raw":[100,100,100,100,75,100]}

00:45:50.560 --> 00:45:51.640
<v Speaker 5>That's a bit silly.

NOTE CONF {"raw":[100,100,100,100]}

00:45:52.030 --> 00:45:53.680
<v Speaker 5>I've got an A here.

NOTE CONF {"raw":[100,100,100,100,100]}

00:45:54.520 --> 00:45:56.890
<v Speaker 5>Um, maybe I don't want the A so I can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:56.890 --> 00:45:59.260
<v Speaker 5>just move it over to make it look more straightforward.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:59.260 --> 00:46:01.120
<v Speaker 5>But this isn't doing any useful work.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:46:01.120 --> 00:46:06.190
<v Speaker 5>It's just removing a few symbols, and I can do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:06.190 --> 00:46:08.140
<v Speaker 5>the same negations over here.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:08.470 --> 00:46:11.110
<v Speaker 5>So now I've moved that C over to here and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:11.110 --> 00:46:12.520
<v Speaker 5>absorbed it into that C.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:12.910 --> 00:46:15.340
<v Speaker 5>So on the right hand side of the proof here,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:15.340 --> 00:46:21.590
<v Speaker 5>I've ended up with assumptions A and B entail C.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,80,100]}

00:46:21.590 --> 00:46:23.870
<v Speaker 5>I needed it there and I need it there, and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:23.870 --> 00:46:24.800
<v Speaker 5>now I'm stuck.

NOTE CONF {"raw":[97,97,100]}

00:46:24.800 --> 00:46:28.460
<v Speaker 5>I can't do any more proving because there's just nothing

NOTE CONF {"raw":[100,100,100,99,99,100,100,100,100,100]}

00:46:28.460 --> 00:46:32.810
<v Speaker 5>more to prove what happens on this side.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:46:33.830 --> 00:46:36.320
<v Speaker 5>Well, that's actually true because I've got a not a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,99,98]}

00:46:36.350 --> 00:46:38.030
<v Speaker 5>here and not a here.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:38.030 --> 00:46:45.740
<v Speaker 5>So there is, um, the identity rule that says this

NOTE CONF {"raw":[100,100,100,94,100,100,100,100,100,100]}

00:46:45.740 --> 00:46:46.940
<v Speaker 5>is simply true.

NOTE CONF {"raw":[100,100,100]}

00:46:47.240 --> 00:46:49.640
<v Speaker 5>So here I've got something where I'm trying to prove

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:49.640 --> 00:46:52.160
<v Speaker 5>that this is all tautology, but I can't because I

NOTE CONF {"raw":[100,100,100,76,100,100,100,100,100,100]}

00:46:52.160 --> 00:46:53.660
<v Speaker 5>get stuck in the proof.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:53.900 --> 00:46:56.840
<v Speaker 5>The fact that I get stuck in the proof needing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:56.840 --> 00:47:00.950
<v Speaker 5>to prove these tells me that this assumption is necessary

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:00.950 --> 00:47:03.440
<v Speaker 5>in order for this to be true.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:47:04.700 --> 00:47:09.320
<v Speaker 5>So what I've learned from here is that this tautology

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:09.320 --> 00:47:13.310
<v Speaker 5>requires that A or b, sorry a and b entails

NOTE CONF {"raw":[100,100,100,100,100,75,100,100,100,100]}

00:47:13.340 --> 00:47:17.120
<v Speaker 5>C, and by flipping to the left you can say

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:17.120 --> 00:47:17.240
<v Speaker 5>it.

NOTE CONF {"raw":[100]}

00:47:17.240 --> 00:47:21.760
<v Speaker 5>Alternatively, As if I know that A is false and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:21.790 --> 00:47:25.690
<v Speaker 5>B is false, and C is true, then this formula

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:25.690 --> 00:47:26.530
<v Speaker 5>is true.

NOTE CONF {"raw":[100,100]}

00:47:26.800 --> 00:47:30.070
<v Speaker 5>So actually it's not much of a tautology at all.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:30.070 --> 00:47:32.860
<v Speaker 5>It has some very specific assumptions on what needs to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:32.860 --> 00:47:33.640
<v Speaker 5>be true.

NOTE CONF {"raw":[100,100]}

00:47:33.790 --> 00:47:35.320
<v Speaker 5>Only one circumstance.

NOTE CONF {"raw":[100,100,100]}

00:47:35.590 --> 00:47:38.290
<v Speaker 5>You could alternatively, of course do this by truth tables,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:38.290 --> 00:47:40.720
<v Speaker 5>in which case you would find that there's just this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:40.720 --> 00:47:43.450
<v Speaker 5>one row of the truth table where the formula is

NOTE CONF {"raw":[100,100,98,89,100,100,100,100,100,100]}

00:47:43.450 --> 00:47:44.530
<v Speaker 5>actually true.

NOTE CONF {"raw":[100,100]}

00:47:47.590 --> 00:47:51.550
<v Speaker 5>Okay, we'll come back to this and do it again

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:51.550 --> 00:47:53.260
<v Speaker 5>next week after the tutorial.

NOTE CONF {"raw":[100,100,100,100,100]}

00:47:53.260 --> 00:47:56.080
<v Speaker 5>But let me just summarise in the last couple of

NOTE CONF {"raw":[100,100,100,100,76,100,100,100,100,100]}

00:47:56.080 --> 00:47:59.890
<v Speaker 5>slides what the point of these things is.

NOTE CONF {"raw":[100,99,100,100,100,100,100,100]}

00:48:01.060 --> 00:48:04.090
<v Speaker 5>So assumptions give you counterexamples.

NOTE CONF {"raw":[100,100,100,100,80]}

00:48:05.200 --> 00:48:07.810
<v Speaker 5>What I did just now is to show that this

NOTE CONF {"raw":[100,100,100,100,100,68,100,100,100,100]}

00:48:07.810 --> 00:48:10.420
<v Speaker 5>whole formula requires this to be true.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:48:10.540 --> 00:48:14.830
<v Speaker 5>So a counterexample to the formula is any anywhere where

NOTE CONF {"raw":[100,100,97,94,100,100,100,100,100,100]}

00:48:14.830 --> 00:48:16.780
<v Speaker 5>this top thing is false.

NOTE CONF {"raw":[100,100,100,100,100]}

00:48:16.840 --> 00:48:19.590
<v Speaker 5>For example something where A is true and b is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:19.590 --> 00:48:21.330
<v Speaker 5>true and c is false.

NOTE CONF {"raw":[100,100,100,100,100]}

00:48:22.800 --> 00:48:26.550
<v Speaker 5>And finally, something for you to think about before we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:26.550 --> 00:48:28.380
<v Speaker 5>come back to this next week.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:48:28.830 --> 00:48:32.760
<v Speaker 5>I've shown you that if you have a tautology, you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,57]}

00:48:32.760 --> 00:48:35.910
<v Speaker 5>the proof succeeds, and every leaf at the top of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:35.910 --> 00:48:37.620
<v Speaker 5>the proof is an eye rule.

NOTE CONF {"raw":[100,100,100,100,83,100]}

00:48:37.620 --> 00:48:39.270
<v Speaker 5>So there are no assumptions.

NOTE CONF {"raw":[100,100,100,100,100]}

00:48:39.630 --> 00:48:42.900
<v Speaker 5>If you try to prove a non tautology, you get

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:42.900 --> 00:48:45.690
<v Speaker 5>leaves with assumptions which are needed to make the thing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:45.690 --> 00:48:46.260
<v Speaker 5>true.

NOTE CONF {"raw":[100]}

00:48:47.400 --> 00:48:49.890
<v Speaker 5>Find out what happens when you try to prove something

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:49.890 --> 00:48:51.510
<v Speaker 5>that is always false.

NOTE CONF {"raw":[100,100,100,100]}

00:48:51.540 --> 00:48:54.420
<v Speaker 5>So before next time, do this very simple proof and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:54.420 --> 00:48:56.310
<v Speaker 5>then come back and tell me what you think about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:56.310 --> 00:48:56.610
<v Speaker 5>it.

NOTE CONF {"raw":[100]}

00:48:57.210 --> 00:48:59.040
<v Speaker 5>Okay, good luck with the tutorial.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:48:59.040 --> 00:49:01.230
<v Speaker 5>We will come back and do this again next week.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:01.230 --> 00:49:04.320
<v Speaker 5>And then on Friday next week we'll have an examples

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,90]}

00:49:04.320 --> 00:49:04.770
<v Speaker 5>class.

NOTE CONF {"raw":[100]}

00:49:04.770 --> 00:49:06.750
<v Speaker 5>So come with problems on Friday.

NOTE CONF {"raw":[100,100,100,100,100,100]}
