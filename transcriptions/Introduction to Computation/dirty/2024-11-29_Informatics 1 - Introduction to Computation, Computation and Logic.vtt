WEBVTT

00:01:41.460 --> 00:01:41.700
<v Speaker 0>Yeah.

NOTE CONF {"raw":[61]}

00:01:44.730 --> 00:01:45.060
<v Speaker 0>I think.

NOTE CONF {"raw":[99,97]}

00:02:00.600 --> 00:02:04.260
<v Speaker 1>Okay, so to infinity and beyond.

NOTE CONF {"raw":[100,100,98,100,100,100]}

00:02:04.680 --> 00:02:05.670
<v Speaker 1>Thank you for coming.

NOTE CONF {"raw":[100,100,100,100]}

00:02:05.760 --> 00:02:08.039
<v Speaker 1>Personally, I think this talk is more fun than yesterday,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,96]}

00:02:08.039 --> 00:02:10.200
<v Speaker 1>so I'm a bit surprised that there are fewer people.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:10.590 --> 00:02:14.370
<v Speaker 1>Um, it's getting on for 30 years since Toy Story

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:02:14.370 --> 00:02:15.330
<v Speaker 1>was released.

NOTE CONF {"raw":[100,100]}

00:02:15.330 --> 00:02:16.890
<v Speaker 1>Do your generation watch it?

NOTE CONF {"raw":[80,100,100,100,100]}

00:02:17.400 --> 00:02:17.700
<v Speaker 1>Yes.

NOTE CONF {"raw":[100]}

00:02:18.030 --> 00:02:18.510
<v Speaker 1>Yep.

NOTE CONF {"raw":[67]}

00:02:18.930 --> 00:02:20.250
<v Speaker 1>It's still a pretty good film.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:02:21.780 --> 00:02:25.320
<v Speaker 1>Um, if you remember it.

NOTE CONF {"raw":[100,100,100,100,100]}

00:02:25.320 --> 00:02:28.560
<v Speaker 1>Well, you might remember that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:02:29.280 --> 00:02:31.560
<v Speaker 1>Well, at least in my understanding of it, which was

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:31.560 --> 00:02:34.950
<v Speaker 1>quite a long time ago, because obviously it's a two

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,71,100]}

00:02:34.950 --> 00:02:37.260
<v Speaker 1>new for me, and it was too young for my

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:37.260 --> 00:02:39.000
<v Speaker 1>son, but I think he watched it anyway.

NOTE CONF {"raw":[100,70,100,100,100,100,100,100]}

00:02:39.000 --> 00:02:45.120
<v Speaker 1>So therefore I did, um, Buzz Lightyear phrase catch phrase

NOTE CONF {"raw":[100,100,100,100,100,100,96,99,41,42]}

00:02:45.120 --> 00:02:46.650
<v Speaker 1>to infinity and beyond.

NOTE CONF {"raw":[100,100,100,100]}

00:02:46.650 --> 00:02:48.420
<v Speaker 1>It's one of the things that makes him look just

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:48.420 --> 00:02:49.530
<v Speaker 1>slightly stupid.

NOTE CONF {"raw":[100,100]}

00:02:50.040 --> 00:02:51.780
<v Speaker 1>There are lots of things in the film that make

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:51.780 --> 00:02:53.400
<v Speaker 1>him look just slightly stupid.

NOTE CONF {"raw":[100,100,100,100,100]}

00:02:54.930 --> 00:02:56.820
<v Speaker 1>And part of the point of this talk is that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:56.820 --> 00:02:58.370
<v Speaker 1>it's not a stupid statement at all.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:02:58.370 --> 00:03:00.080
<v Speaker 1>It's a perfectly reasonable statement.

NOTE CONF {"raw":[100,100,100,100,100]}

00:03:02.120 --> 00:03:04.430
<v Speaker 1>Um, that, of course, is Buzz Lightyear.

NOTE CONF {"raw":[100,89,100,100,100,100,100]}

00:03:04.430 --> 00:03:07.340
<v Speaker 1>This is a large array of copyright, trademark and so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:07.340 --> 00:03:07.520
<v Speaker 1>on.

NOTE CONF {"raw":[100]}

00:03:07.520 --> 00:03:07.970
<v Speaker 1>Symbols.

NOTE CONF {"raw":[100]}

00:03:07.970 --> 00:03:12.260
<v Speaker 1>In a desperate attempt to stop Pixar suing the university

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:12.260 --> 00:03:14.690
<v Speaker 1>if these slides ever escape into the world.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:03:15.080 --> 00:03:17.720
<v Speaker 1>And if you think I'm joking about all this copyright

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:17.720 --> 00:03:18.620
<v Speaker 1>stuff, I'm not.

NOTE CONF {"raw":[100,100,100]}

00:03:18.650 --> 00:03:23.420
<v Speaker 1>One of my colleagues gave her inaugural lecture as professor,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:24.080 --> 00:03:26.300
<v Speaker 1>and she took a nice picture of a field of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:26.300 --> 00:03:29.390
<v Speaker 1>flowers off a picture site that advertised that it had

NOTE CONF {"raw":[100,89,98,100,100,100,95,100,100,100]}

00:03:29.390 --> 00:03:30.680
<v Speaker 1>these things available.

NOTE CONF {"raw":[100,100,100]}

00:03:31.220 --> 00:03:33.680
<v Speaker 1>The slides from the inaugural lecture were duly put on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:33.680 --> 00:03:36.860
<v Speaker 1>the web, and a couple of months later, somebody said

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:37.760 --> 00:03:40.760
<v Speaker 1>the site didn't have permission to make these available for

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:40.760 --> 00:03:42.020
<v Speaker 1>public performance.

NOTE CONF {"raw":[100,100]}

00:03:42.260 --> 00:03:45.350
<v Speaker 1>That'll be £500, please, after they were beaten down from

NOTE CONF {"raw":[79,100,100,100,100,100,100,100,100,100]}

00:03:45.350 --> 00:03:46.460
<v Speaker 1>£5,000.

NOTE CONF {"raw":[100]}

00:03:47.690 --> 00:03:50.240
<v Speaker 1>So you should worry about these things.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:03:51.710 --> 00:03:53.210
<v Speaker 1>So what am I talking about today?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:03:53.210 --> 00:03:59.360
<v Speaker 1>Obviously infinity, infinity and eternity are closely related concepts.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:03:59.720 --> 00:04:02.360
<v Speaker 1>One we think of as space and the other we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:02.360 --> 00:04:03.710
<v Speaker 1>think of as time.

NOTE CONF {"raw":[100,100,100,100]}

00:04:03.740 --> 00:04:05.930
<v Speaker 1>But it's all just space time.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:04:05.930 --> 00:04:10.880
<v Speaker 1>So they're the same thing in everyday language.

NOTE CONF {"raw":[100,83,100,100,100,100,100,100]}

00:04:11.540 --> 00:04:16.220
<v Speaker 1>So language of normal people rather than people like me.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:16.220 --> 00:04:21.049
<v Speaker 1>There are idioms which express various forms of eternity and

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:04:21.049 --> 00:04:21.980
<v Speaker 1>infinity.

NOTE CONF {"raw":[100]}

00:04:22.610 --> 00:04:28.490
<v Speaker 1>So in English language fairy stories, things often end forever

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,70]}

00:04:28.490 --> 00:04:29.090
<v Speaker 1>and ever.

NOTE CONF {"raw":[100,100]}

00:04:30.920 --> 00:04:31.520
<v Speaker 1>And why?

NOTE CONF {"raw":[86,97]}

00:04:31.550 --> 00:04:32.210
<v Speaker 1>Forever and ever.

NOTE CONF {"raw":[100,100,100]}

00:04:32.210 --> 00:04:32.780
<v Speaker 1>That's just.

NOTE CONF {"raw":[100,100]}

00:04:32.780 --> 00:04:35.420
<v Speaker 1>I mean, language says things twice to make them more

NOTE CONF {"raw":[95,97,100,100,100,100,100,100,100,100]}

00:04:35.420 --> 00:04:35.960
<v Speaker 1>emphatic.

NOTE CONF {"raw":[100]}

00:04:35.960 --> 00:04:36.980
<v Speaker 1>That's all there is.

NOTE CONF {"raw":[100,100,100,100]}

00:04:37.610 --> 00:04:39.470
<v Speaker 1>Other languages are a bit more elegant.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:04:39.470 --> 00:04:43.490
<v Speaker 1>So the German equivalent is imitative, which means basically the

NOTE CONF {"raw":[100,100,100,100,100,98,100,100,100,100]}

00:04:43.490 --> 00:04:45.890
<v Speaker 1>same, but has some elegant variation in it.

NOTE CONF {"raw":[100,100,99,100,100,100,100,100]}

00:04:47.420 --> 00:04:50.360
<v Speaker 1>Um, there's a remarkable number of idioms in English which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:50.360 --> 00:04:54.080
<v Speaker 1>were coined not by normal people, but by Shakespeare.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:04:54.080 --> 00:04:57.410
<v Speaker 1>So there's a phrase forever and a day, which is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:57.410 --> 00:05:01.130
<v Speaker 1>actually one of Shakespeare's but became part of the language.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:03.050 --> 00:05:06.650
<v Speaker 1>Um, how many of you grew up in the Christian

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:06.650 --> 00:05:08.540
<v Speaker 1>tradition with Latin liturgy?

NOTE CONF {"raw":[100,100,100,100]}

00:05:09.590 --> 00:05:10.220
<v Speaker 1>Anybody?

NOTE CONF {"raw":[100]}

00:05:10.910 --> 00:05:11.690
<v Speaker 1>Just a few.

NOTE CONF {"raw":[100,100,100]}

00:05:12.290 --> 00:05:16.280
<v Speaker 1>Okay, so, you know, nuns separate in secular secularism at

NOTE CONF {"raw":[100,100,100,100,64,48,65,100,64,100]}

00:05:16.280 --> 00:05:17.570
<v Speaker 1>the end of the doxology.

NOTE CONF {"raw":[100,100,100,100,100]}

00:05:17.720 --> 00:05:21.350
<v Speaker 1>Now and always and in centuries of centuries.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:05:21.620 --> 00:05:24.680
<v Speaker 1>In English, we say, as it was, as the beginning

NOTE CONF {"raw":[100,100,100,100,98,100,100,66,100,100]}

00:05:24.680 --> 00:05:27.230
<v Speaker 1>is now and ever shall be, world without end.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:05:28.580 --> 00:05:30.770
<v Speaker 1>Um, this isn't a Latin idiom.

NOTE CONF {"raw":[100,100,100,97,100,100]}

00:05:30.770 --> 00:05:32.630
<v Speaker 1>It isn't even a Greek idiom.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:33.080 --> 00:05:37.460
<v Speaker 1>It was probably once an Aramaic idiom, but we don't

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:37.460 --> 00:05:38.390
<v Speaker 1>actually know.

NOTE CONF {"raw":[100,100]}

00:05:39.590 --> 00:05:43.700
<v Speaker 1>And then Infinity and eternity pop up in various fairy

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:43.700 --> 00:05:46.100
<v Speaker 1>stories and folktales.

NOTE CONF {"raw":[100,100,78]}

00:05:47.540 --> 00:05:50.540
<v Speaker 1>This is from the an extract from one of the

NOTE CONF {"raw":[100,100,100,100,97,100,100,100,100,100]}

00:05:50.540 --> 00:05:53.600
<v Speaker 1>stories in the tales collected by the Grimm Brothers.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:05:54.860 --> 00:05:56.690
<v Speaker 1>And it goes, the king said.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:57.020 --> 00:06:00.320
<v Speaker 1>The third question is how many seconds of time are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:00.320 --> 00:06:01.580
<v Speaker 1>there in eternity?

NOTE CONF {"raw":[100,100,100]}

00:06:02.300 --> 00:06:05.660
<v Speaker 1>Then, said the shepherd boy, in Lower Pomerania is the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:05.660 --> 00:06:09.140
<v Speaker 1>Diamond Mountain, which is a league high, a league wide,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:09.140 --> 00:06:10.550
<v Speaker 1>and a league in depth.

NOTE CONF {"raw":[100,100,100,100,100]}

00:06:10.640 --> 00:06:13.640
<v Speaker 1>Every 100 years, a little bird comes in, sharpens its

NOTE CONF {"raw":[95,77,100,100,100,100,100,96,100,100]}

00:06:13.640 --> 00:06:16.400
<v Speaker 1>beak on it, and when the whole mountain is worn

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:16.400 --> 00:06:19.130
<v Speaker 1>away by this, then the first second of eternity will

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:19.130 --> 00:06:19.820
<v Speaker 1>be over.

NOTE CONF {"raw":[100,100]}

00:06:20.870 --> 00:06:21.920
<v Speaker 1>How long does that make?

NOTE CONF {"raw":[100,100,100,100,100]}

00:06:21.920 --> 00:06:23.210
<v Speaker 1>A second of eternity?

NOTE CONF {"raw":[100,100,100,100]}

00:06:29.120 --> 00:06:31.010
<v Speaker 1>Well, it depends on your assumptions, doesn't it?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:06:31.790 --> 00:06:34.070
<v Speaker 1>Also, what do you mean by quadrillion, which these days

NOTE CONF {"raw":[100,100,52,100,100,100,100,100,100,100]}

00:06:34.070 --> 00:06:34.820
<v Speaker 1>is a bit tricky?

NOTE CONF {"raw":[100,100,100,100]}

00:06:34.820 --> 00:06:36.260
<v Speaker 1>So I get a longer answer.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:06:36.890 --> 00:06:39.710
<v Speaker 1>Um, how many of you know what a league is?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:43.490 --> 00:06:45.890
<v Speaker 1>Um, I mean, a league is a wildly variable unit

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:45.890 --> 00:06:48.470
<v Speaker 1>of measurement depending on when and where you were.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:06:48.710 --> 00:06:52.010
<v Speaker 1>I think the more or less standard English definition is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:52.010 --> 00:06:55.850
<v Speaker 1>three miles, but it varies from 2 to 7, I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:55.850 --> 00:06:57.620
<v Speaker 1>think somewhere even 14 miles.

NOTE CONF {"raw":[100,100,100,100,100]}

00:06:58.730 --> 00:07:02.360
<v Speaker 1>Um, so making a few assumptions like a league is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:02.360 --> 00:07:06.050
<v Speaker 1>three miles and the bird manages to move one atom

NOTE CONF {"raw":[100,100,100,100,100,100,100,62,100,100]}

00:07:06.050 --> 00:07:09.170
<v Speaker 1>each time, then that makes a second of eternity somewhere

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:09.170 --> 00:07:11.480
<v Speaker 1>around ten to the 40 years, which is quite a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:11.480 --> 00:07:13.190
<v Speaker 1>long time longer than you said.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:07:13.190 --> 00:07:15.740
<v Speaker 1>So I must be making different assumptions, but hey, who

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:15.740 --> 00:07:16.220
<v Speaker 1>cares?

NOTE CONF {"raw":[100]}

00:07:18.320 --> 00:07:18.650
<v Speaker 1>Um.

NOTE CONF {"raw":[100]}

00:07:21.170 --> 00:07:21.860
<v Speaker 1>Folktales.

NOTE CONF {"raw":[100]}

00:07:21.860 --> 00:07:23.000
<v Speaker 1>Who reads folktales?

NOTE CONF {"raw":[100,100,100]}

00:07:23.000 --> 00:07:26.420
<v Speaker 1>Children read folktales for children, get folk tales told to

NOTE CONF {"raw":[100,100,100,63,100,100,65,65,100,100]}

00:07:26.420 --> 00:07:26.840
<v Speaker 1>them.

NOTE CONF {"raw":[100]}

00:07:27.320 --> 00:07:30.830
<v Speaker 1>And then I'm going to give you a little quotation

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:30.830 --> 00:07:34.850
<v Speaker 1>from another wonderful book, which can keep you happy for

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:34.850 --> 00:07:35.630
<v Speaker 1>a very long time.

NOTE CONF {"raw":[100,100,100,100]}

00:07:35.630 --> 00:07:37.850
<v Speaker 1>It's called the Handbook of Mathematical Logic.

NOTE CONF {"raw":[100,100,97,100,100,100,100]}

00:07:38.390 --> 00:07:41.300
<v Speaker 1>It's a big yellow book about that thick weighs a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:41.300 --> 00:07:41.870
<v Speaker 1>lot.

NOTE CONF {"raw":[100]}

00:07:43.010 --> 00:07:46.880
<v Speaker 1>Um, I understand probably about 10% of it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:07:46.880 --> 00:07:47.960
<v Speaker 1>By the time I die.

NOTE CONF {"raw":[100,100,100,100,100]}

00:07:47.960 --> 00:07:50.060
<v Speaker 1>I might understand 15% of it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:07:51.190 --> 00:07:55.510
<v Speaker 1>And this says mathematicians and other children often play the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:55.510 --> 00:07:56.590
<v Speaker 1>following game.

NOTE CONF {"raw":[100,100]}

00:07:57.040 --> 00:08:00.070
<v Speaker 1>We take turns naming numbers and see who can name

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:00.070 --> 00:08:01.240
<v Speaker 1>the largest one.

NOTE CONF {"raw":[100,100,100]}

00:08:02.050 --> 00:08:05.020
<v Speaker 1>This is a game, the psychological rather than the formal

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:05.020 --> 00:08:07.660
<v Speaker 1>sense, since I might always just add one to your

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:07.660 --> 00:08:08.320
<v Speaker 1>number.

NOTE CONF {"raw":[100]}

00:08:08.320 --> 00:08:11.260
<v Speaker 1>But my goal is to try to completely demolish your

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:11.260 --> 00:08:15.220
<v Speaker 1>ego by transcending your number via some completely new principle.

NOTE CONF {"raw":[100,100,100,100,77,100,100,100,100,85]}

00:08:15.700 --> 00:08:18.340
<v Speaker 1>And this is essentially a summary of what set theory

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:18.340 --> 00:08:20.200
<v Speaker 1>has been doing for the last century.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:08:20.980 --> 00:08:24.220
<v Speaker 1>Kenneth Coonan is I think he still is.

NOTE CONF {"raw":[100,78,100,100,100,100,100,100]}

00:08:24.220 --> 00:08:25.390
<v Speaker 1>I haven't checked recently.

NOTE CONF {"raw":[100,100,100,100]}

00:08:25.930 --> 00:08:29.830
<v Speaker 1>Um, one of the leading set theorists of the 20th

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:29.830 --> 00:08:34.210
<v Speaker 1>century and is responsible not just for some of the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:34.210 --> 00:08:37.150
<v Speaker 1>biggest numbers, but also for the demonstration that there is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:37.150 --> 00:08:40.240
<v Speaker 1>a limit to how big you can keep inventing numbers.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:40.900 --> 00:08:44.890
<v Speaker 1>There's a thing called the Coonan inconsistency, which is where

NOTE CONF {"raw":[95,100,100,100,100,80,100,100,100,100]}

00:08:44.890 --> 00:08:49.210
<v Speaker 1>your postulation of ever more absurd infinity becomes so absurd

NOTE CONF {"raw":[100,100,100,84,84,100,100,100,100,100]}

00:08:49.210 --> 00:08:50.830
<v Speaker 1>that you actually get a contradiction?

NOTE CONF {"raw":[100,100,100,100,48,100]}

00:08:53.050 --> 00:08:58.930
<v Speaker 1>Um, so this talk is basically about postulating large numbers.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:00.010 --> 00:09:03.850
<v Speaker 1>I'm going to start by postulating by talking about infinities.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:03.850 --> 00:09:05.710
<v Speaker 1>And these are actually very small infinities.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:09:05.710 --> 00:09:08.050
<v Speaker 1>But they will probably look quite large to you.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:09:08.050 --> 00:09:10.750
<v Speaker 1>And then I'll connect them to some very large actual

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:10.750 --> 00:09:12.790
<v Speaker 1>numbers, because big numbers are fun.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:09:13.210 --> 00:09:15.550
<v Speaker 1>And well, that'll be more or less it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:09:15.550 --> 00:09:18.640
<v Speaker 1>And there could be another talk about seriously big infinities,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:18.640 --> 00:09:20.080
<v Speaker 1>but not in this course.

NOTE CONF {"raw":[100,100,100,100,100]}

00:09:21.850 --> 00:09:25.750
<v Speaker 1>So let's go back a century and a half.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:09:27.760 --> 00:09:29.770
<v Speaker 1>To Georg Cantor.

NOTE CONF {"raw":[100,100,100]}

00:09:30.880 --> 00:09:31.210
<v Speaker 1>Um.

NOTE CONF {"raw":[100]}

00:09:32.380 --> 00:09:34.300
<v Speaker 1>Interesting career.

NOTE CONF {"raw":[100,100]}

00:09:34.300 --> 00:09:37.510
<v Speaker 1>He's now one of the.

NOTE CONF {"raw":[91,100,100,100,100]}

00:09:37.510 --> 00:09:39.580
<v Speaker 1>He's considered the father of set theory.

NOTE CONF {"raw":[89,100,100,100,100,100,100]}

00:09:39.580 --> 00:09:40.720
<v Speaker 1>Modern set theory.

NOTE CONF {"raw":[100,100,100]}

00:09:41.560 --> 00:09:43.930
<v Speaker 1>He had a very difficult time as an academic because

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:43.930 --> 00:09:48.070
<v Speaker 1>he had crazy ideas which important people didn't like, and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:48.070 --> 00:09:50.590
<v Speaker 1>they ensured that he didn't get the positions he wanted

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:50.590 --> 00:09:52.780
<v Speaker 1>because they didn't approve of his ideas.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:09:53.410 --> 00:09:56.350
<v Speaker 1>Um, nowadays we think he was extremely right.

NOTE CONF {"raw":[58,100,100,100,100,100,100,100]}

00:09:56.350 --> 00:10:01.090
<v Speaker 1>So this is a quotation from David Hilbert in about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:01.090 --> 00:10:08.020
<v Speaker 1>1901 saying that nobody shall drive us, meaning mathematicians in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:08.020 --> 00:10:10.960
<v Speaker 1>general, and set theorists in particular, from the Paradise that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:10.960 --> 00:10:14.830
<v Speaker 1>Cantor has created for us by inventing set theory in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:14.830 --> 00:10:16.060
<v Speaker 1>its modern form.

NOTE CONF {"raw":[100,100,100]}

00:10:17.290 --> 00:10:21.460
<v Speaker 1>So the first breakthrough in terms of infinity was actually

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:21.460 --> 00:10:24.010
<v Speaker 1>the one I'm not going to talk about today.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:10:24.490 --> 00:10:25.450
<v Speaker 1>You may have heard of it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:10:25.450 --> 00:10:27.760
<v Speaker 1>That's the fact that there are more real numbers than

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:27.760 --> 00:10:32.380
<v Speaker 1>there are natural numbers, then that real numbers are uncountable.

NOTE CONF {"raw":[100,100,100,100,40,52,100,100,100,100]}

00:10:32.980 --> 00:10:35.440
<v Speaker 1>Everything we're going to do is today is actually going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:35.440 --> 00:10:36.370
<v Speaker 1>to be countable.

NOTE CONF {"raw":[100,100,100]}

00:10:36.790 --> 00:10:39.820
<v Speaker 1>And then a bit later, he invented the theory of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:39.820 --> 00:10:44.020
<v Speaker 1>ordinal or discovered the theory of ordinal numbers, which is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:44.020 --> 00:10:45.640
<v Speaker 1>what I will talk about today.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:10:46.000 --> 00:10:49.630
<v Speaker 1>And these are a lot of the more humanly accessible

NOTE CONF {"raw":[100,100,100,100,100,88,52,100,100,100]}

00:10:49.630 --> 00:10:53.680
<v Speaker 1>kinds of large numbers and infinity than the stuff that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:53.680 --> 00:10:55.390
<v Speaker 1>he thought about earlier.

NOTE CONF {"raw":[100,100,100,100]}

00:10:57.790 --> 00:11:00.610
<v Speaker 1>So I want to talk about ordinals and cardinals.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:11:00.610 --> 00:11:01.750
<v Speaker 1>What do they mean?

NOTE CONF {"raw":[100,100,100,100]}

00:11:03.430 --> 00:11:06.280
<v Speaker 1>Um, as I've said so often, you may possibly have

NOTE CONF {"raw":[100,100,97,100,100,100,100,100,100,100]}

00:11:06.280 --> 00:11:09.250
<v Speaker 1>studied the grammar of some language in an old fashioned

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:09.550 --> 00:11:10.810
<v Speaker 1>terminology.

NOTE CONF {"raw":[100]}

00:11:10.990 --> 00:11:14.350
<v Speaker 1>And if you had a sufficiently old fashioned grammar textbook,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:14.470 --> 00:11:17.470
<v Speaker 1>it will have taught you about cardinal numbers in Latin

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:17.470 --> 00:11:22.510
<v Speaker 1>and ordinal numbers in Latin or Sanskrit or Middle Chinese

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:22.510 --> 00:11:22.990
<v Speaker 1>or whatever.

NOTE CONF {"raw":[100,100]}

00:11:22.990 --> 00:11:24.250
<v Speaker 1>It was ancient language.

NOTE CONF {"raw":[100,100,100,100]}

00:11:24.250 --> 00:11:26.260
<v Speaker 1>It was you had to study, and possibly even in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:26.260 --> 00:11:28.330
<v Speaker 1>whatever modern languages you studied.

NOTE CONF {"raw":[100,100,100,100,100]}

00:11:29.740 --> 00:11:31.090
<v Speaker 1>What do we mean in language?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:11:31.090 --> 00:11:33.910
<v Speaker 1>By cardinal numbers, we mean things that count how many

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:33.910 --> 00:11:34.570
<v Speaker 1>of something.

NOTE CONF {"raw":[100,100]}

00:11:34.570 --> 00:11:37.030
<v Speaker 1>So in English we say there are two dogs over

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:37.030 --> 00:11:37.540
<v Speaker 1>there.

NOTE CONF {"raw":[100]}

00:11:39.190 --> 00:11:43.360
<v Speaker 1>Um, and then we have ordinal, ordinal numbers which put

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:43.360 --> 00:11:45.640
<v Speaker 1>things into a sequence and say which one?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:45.640 --> 00:11:48.370
<v Speaker 1>The first dog is black and the second dog is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:48.370 --> 00:11:49.000
<v Speaker 1>brown.

NOTE CONF {"raw":[100]}

00:11:50.590 --> 00:11:54.280
<v Speaker 1>Um, different languages take different attitudes to how they distinguish

NOTE CONF {"raw":[69,100,100,100,100,100,100,100,100,100]}

00:11:54.280 --> 00:11:54.940
<v Speaker 1>these.

NOTE CONF {"raw":[100]}

00:11:54.940 --> 00:11:57.160
<v Speaker 1>English is awkward.

NOTE CONF {"raw":[55,55,100]}

00:11:57.160 --> 00:11:59.650
<v Speaker 1>For the first couple of numbers we go one, two,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:59.650 --> 00:12:01.870
<v Speaker 1>three, first, second, third.

NOTE CONF {"raw":[100,100,100,100]}

00:12:02.290 --> 00:12:04.840
<v Speaker 1>It's quite bizarre, actually, that we borrowed a Latin word

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:04.840 --> 00:12:08.080
<v Speaker 1>for such a fundamental word as second, but they are

NOTE CONF {"raw":[100,100,100,100,100,93,100,100,66,100]}

00:12:09.910 --> 00:12:10.330
<v Speaker 1>um.

NOTE CONF {"raw":[68]}

00:12:11.290 --> 00:12:14.800
<v Speaker 1>So in mathematics, we mean basically the same.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:12:15.160 --> 00:12:17.710
<v Speaker 1>It turns out that there are two rather different kinds

NOTE CONF {"raw":[100,100,100,100,100,96,100,100,100,100]}

00:12:17.710 --> 00:12:20.920
<v Speaker 1>of ways to count in mathematics, just as there are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:20.920 --> 00:12:21.790
<v Speaker 1>in language.

NOTE CONF {"raw":[100,100]}

00:12:22.090 --> 00:12:24.520
<v Speaker 1>So you can take a set and this is just

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:24.520 --> 00:12:26.350
<v Speaker 1>a set in the naive sense that you know it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:26.350 --> 00:12:28.450
<v Speaker 1>and you can say how many things are there in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:28.450 --> 00:12:28.900
<v Speaker 1>it?

NOTE CONF {"raw":[100]}

00:12:29.110 --> 00:12:34.390
<v Speaker 1>How many antecedents are there in the left of, um,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,87]}

00:12:34.690 --> 00:12:37.060
<v Speaker 1>sequence in the sequence calculus?

NOTE CONF {"raw":[100,100,100,100,100]}

00:12:38.590 --> 00:12:43.930
<v Speaker 1>And we call these zero, one, and two, because all

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:43.930 --> 00:12:47.020
<v Speaker 1>modern mathematicians count from zero, except the ones who don't

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:47.020 --> 00:12:48.370
<v Speaker 1>and they don't count.

NOTE CONF {"raw":[100,100,100,100]}

00:12:49.300 --> 00:12:53.560
<v Speaker 1>And the other thing we can do is say we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:53.560 --> 00:12:54.760
<v Speaker 1>don't have just a set.

NOTE CONF {"raw":[100,100,100,100,100]}

00:12:54.760 --> 00:12:56.980
<v Speaker 1>We've got a set of things laid out in order.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:56.980 --> 00:12:59.110
<v Speaker 1>So that's a list in Haskell terms.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:00.040 --> 00:13:03.520
<v Speaker 1>And then we can say where in the sequence is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:03.520 --> 00:13:03.880
<v Speaker 1>this.

NOTE CONF {"raw":[100]}

00:13:03.880 --> 00:13:06.340
<v Speaker 1>So in programming language it's also an array.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:13:06.520 --> 00:13:11.560
<v Speaker 1>And again in all sensible languages we start counting arrays

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:11.560 --> 00:13:12.280
<v Speaker 1>from zero.

NOTE CONF {"raw":[100,100]}

00:13:12.280 --> 00:13:14.530
<v Speaker 1>So we talk about the zeroth element of the array

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:14.530 --> 00:13:16.180
<v Speaker 1>and the first element and so on.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:16.630 --> 00:13:19.360
<v Speaker 1>Alternatively we can say how long is this list.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:13:19.360 --> 00:13:22.450
<v Speaker 1>It's one two 3 or 0 elements long.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:13:23.800 --> 00:13:26.620
<v Speaker 1>So as an example the distinction if we talk about

NOTE CONF {"raw":[100,100,100,100,76,100,100,100,100,100]}

00:13:26.620 --> 00:13:29.770
<v Speaker 1>this sequence ABBA, that's a sequence that is three letters

NOTE CONF {"raw":[100,100,75,100,100,100,100,100,100,100]}

00:13:29.770 --> 00:13:30.370
<v Speaker 1>long.

NOTE CONF {"raw":[100]}

00:13:30.370 --> 00:13:32.560
<v Speaker 1>But if we count the number of distinct letters in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:32.560 --> 00:13:34.180
<v Speaker 1>it then there are just two.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:13:36.970 --> 00:13:40.060
<v Speaker 1>Okay, I've also said before, at some point in this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:40.060 --> 00:13:43.960
<v Speaker 1>course, remember back to probably before you can remember.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:13:44.280 --> 00:13:46.350
<v Speaker 1>Do you remember when you first learned to count?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:13:48.630 --> 00:13:50.880
<v Speaker 1>Probably not, because we tend to do it a bit

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:50.880 --> 00:13:53.010
<v Speaker 1>before the age of five, and then we tend to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:53.010 --> 00:13:55.890
<v Speaker 1>forget almost everything that happened before the age of five.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:57.720 --> 00:14:00.390
<v Speaker 1>Um, you've probably got something like that at some point,

NOTE CONF {"raw":[100,87,100,100,100,100,100,100,100,100]}

00:14:00.390 --> 00:14:03.600
<v Speaker 1>but right at the very beginning, probably the absolute first

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:03.600 --> 00:14:06.180
<v Speaker 1>thing you did with counting was to lay down sticks

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:06.180 --> 00:14:06.960
<v Speaker 1>in a row.

NOTE CONF {"raw":[100,100,100]}

00:14:08.100 --> 00:14:12.480
<v Speaker 1>Um, in due course, you may find yourself doing this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:14.040 --> 00:14:16.830
<v Speaker 1>Um, so the simplest way of counting is to say

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:16.830 --> 00:14:19.170
<v Speaker 1>that's one that's 210 sticks in a row.

NOTE CONF {"raw":[100,100,100,93,100,100,100,100]}

00:14:19.170 --> 00:14:19.740
<v Speaker 1>That's ten.

NOTE CONF {"raw":[100,100]}

00:14:19.770 --> 00:14:24.660
<v Speaker 1>This is what we call unary counting in computer science

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:24.660 --> 00:14:26.880
<v Speaker 1>notation, not binary.

NOTE CONF {"raw":[100,100,100]}

00:14:26.880 --> 00:14:28.320
<v Speaker 1>Because we don't have digits.

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:28.320 --> 00:14:30.210
<v Speaker 1>We just lay down sticks in order.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:14:31.500 --> 00:14:34.860
<v Speaker 1>So this lets us count lets us count rather inefficiently,

NOTE CONF {"raw":[100,100,100,100,100,93,100,100,100,100]}

00:14:34.860 --> 00:14:36.780
<v Speaker 1>but it lets us count in a long way.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:14:37.650 --> 00:14:40.680
<v Speaker 1>Um, and then we can just count forever.

NOTE CONF {"raw":[100,100,100,100,100,100,100,83]}

00:14:42.000 --> 00:14:44.550
<v Speaker 1>I can just lay down sticks all the way out

NOTE CONF {"raw":[100,100,100,100,100,84,100,100,100,100]}

00:14:44.670 --> 00:14:46.290
<v Speaker 1>to the end of the universe.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:14:47.280 --> 00:14:50.700
<v Speaker 1>And where is the universe finite?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:14:50.700 --> 00:14:52.170
<v Speaker 1>Is the universe infinite?

NOTE CONF {"raw":[100,100,100,100]}

00:14:54.240 --> 00:14:57.300
<v Speaker 1>I mean, we believe the universe is finite, but expanding.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:57.300 --> 00:14:59.490
<v Speaker 1>I mean, it's expanding faster than I can lay down

NOTE CONF {"raw":[100,100,95,100,100,100,100,100,100,100]}

00:14:59.490 --> 00:15:02.130
<v Speaker 1>sticks, so maybe I'll never get to the end.

NOTE CONF {"raw":[90,100,100,100,100,100,100,100,100]}

00:15:03.900 --> 00:15:07.290
<v Speaker 1>Um, can we count forever and a day?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:15:08.220 --> 00:15:09.900
<v Speaker 1>So let's keep counting.

NOTE CONF {"raw":[100,100,100,100]}

00:15:09.900 --> 00:15:12.000
<v Speaker 1>Laid on an infinite row of sticks.

NOTE CONF {"raw":[100,100,96,100,100,100,100]}

00:15:12.510 --> 00:15:16.140
<v Speaker 1>And then after that, start another row and put down

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:16.140 --> 00:15:16.950
<v Speaker 1>a new stick.

NOTE CONF {"raw":[100,100,100]}

00:15:17.610 --> 00:15:19.470
<v Speaker 1>So clearly that's what Shakespeare meant.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:15:19.470 --> 00:15:22.140
<v Speaker 1>He was a set theorist before his time.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:15:25.740 --> 00:15:28.200
<v Speaker 1>This is now getting a bit tedious to write down

NOTE CONF {"raw":[79,81,100,100,100,100,100,100,100,100]}

00:15:28.200 --> 00:15:30.240
<v Speaker 1>because I'm writing lots and lots of sticks.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:15:30.240 --> 00:15:33.930
<v Speaker 1>So let me introduce a bit of a notation.

NOTE CONF {"raw":[100,100,100,100,100,100,100,90,100]}

00:15:34.620 --> 00:15:37.770
<v Speaker 1>Let me use the symbol omega for the length of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:37.770 --> 00:15:39.180
<v Speaker 1>the infinite sequence.

NOTE CONF {"raw":[100,100,100]}

00:15:40.470 --> 00:15:42.840
<v Speaker 1>Have you all learnt your Greek alphabet yet?

NOTE CONF {"raw":[100,100,100,92,100,100,100,100]}

00:15:44.940 --> 00:15:48.060
<v Speaker 1>Um, even if you haven't, you should know Omega.

NOTE CONF {"raw":[40,100,100,100,100,100,100,100,92]}

00:15:48.090 --> 00:15:51.510
<v Speaker 1>If you've had any exposure to the Christian tradition.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:15:51.510 --> 00:15:55.200
<v Speaker 1>Again, because I am the Alpha and the Omega occurs

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:55.200 --> 00:15:57.120
<v Speaker 1>somewhere I can't remember where.

NOTE CONF {"raw":[100,100,100,100,100]}

00:15:57.240 --> 00:16:00.000
<v Speaker 1>So Omega is the last letter of the Greek alphabet,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:00.660 --> 00:16:03.060
<v Speaker 1>so it tends to get used for things at the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:03.060 --> 00:16:03.390
<v Speaker 1>end.

NOTE CONF {"raw":[100]}

00:16:03.390 --> 00:16:06.060
<v Speaker 1>And Omega stands for forever.

NOTE CONF {"raw":[100,100,100,100,100]}

00:16:06.060 --> 00:16:09.930
<v Speaker 1>The infinite number of sticks, which comes after all the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:09.930 --> 00:16:10.830
<v Speaker 1>other numbers.

NOTE CONF {"raw":[100,100]}

00:16:12.030 --> 00:16:14.730
<v Speaker 1>And what's a reasonable way to write forever and a

NOTE CONF {"raw":[100,100,100,100,100,100,100,95,100,100]}

00:16:14.730 --> 00:16:15.000
<v Speaker 1>day?

NOTE CONF {"raw":[100]}

00:16:15.000 --> 00:16:18.210
<v Speaker 1>Well, it's obviously it's omega sticks plus one stick because

NOTE CONF {"raw":[100,100,100,100,100,97,100,100,100,100]}

00:16:18.210 --> 00:16:21.420
<v Speaker 1>I've laid down one stick after laying down omega sticks.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:22.620 --> 00:16:24.360
<v Speaker 1>Makes perfect sense, doesn't it?

NOTE CONF {"raw":[100,100,100,100,100]}

00:16:25.080 --> 00:16:27.540
<v Speaker 1>Um, I want to do some more stick diagrams, but

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:27.540 --> 00:16:29.310
<v Speaker 1>I'm running out of space, so I'm going to do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:29.310 --> 00:16:30.120
<v Speaker 1>a little trick.

NOTE CONF {"raw":[100,100,100]}

00:16:30.120 --> 00:16:33.330
<v Speaker 1>So imagine I've got my row of sticks going out

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:33.330 --> 00:16:36.180
<v Speaker 1>all the way to infinity over there, and then I'm

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:36.180 --> 00:16:38.640
<v Speaker 1>just going to rotate it so that it's behind me.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:39.300 --> 00:16:41.310
<v Speaker 1>And now you can see it all at once like

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:41.310 --> 00:16:41.850
<v Speaker 1>that.

NOTE CONF {"raw":[100]}

00:16:43.590 --> 00:16:43.980
<v Speaker 1>Okay.

NOTE CONF {"raw":[100]}

00:16:43.980 --> 00:16:45.630
<v Speaker 1>Perspective is a wonderful thing.

NOTE CONF {"raw":[100,100,100,100,100]}

00:16:46.800 --> 00:16:50.310
<v Speaker 1>So now I have a symbolic representation of Omega.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:16:51.660 --> 00:16:55.230
<v Speaker 1>Now I can start thinking about adding things further.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:16:56.760 --> 00:16:58.140
<v Speaker 1>There's omega plus one.

NOTE CONF {"raw":[100,100,100,100]}

00:16:58.140 --> 00:16:59.580
<v Speaker 1>There's omega plus three.

NOTE CONF {"raw":[100,100,100,100]}

00:16:59.610 --> 00:17:02.160
<v Speaker 1>So I can do forever and ever as well.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:17:02.250 --> 00:17:04.560
<v Speaker 1>Lay down a row of sticks and then lay down

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:04.560 --> 00:17:06.000
<v Speaker 1>another infinite row of sticks.

NOTE CONF {"raw":[100,100,100,100,100]}

00:17:06.000 --> 00:17:06.750
<v Speaker 1>Why not?

NOTE CONF {"raw":[100,100]}

00:17:07.800 --> 00:17:08.130
<v Speaker 1>Um.

NOTE CONF {"raw":[100]}

00:17:08.640 --> 00:17:12.000
<v Speaker 1>What happens if I do one plus omega?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:17:14.250 --> 00:17:17.010
<v Speaker 1>I lay down a stick, and then I lay down

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:17.010 --> 00:17:18.780
<v Speaker 1>an infinite row of sticks.

NOTE CONF {"raw":[100,100,100,100,100]}

00:17:20.730 --> 00:17:21.449
<v Speaker 1>Yeah.

NOTE CONF {"raw":[100]}

00:17:21.689 --> 00:17:24.300
<v Speaker 1>You can't tell it apart from just omega.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:17:24.540 --> 00:17:27.089
<v Speaker 1>I mean, I've drawn it here because perspective lets you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:27.089 --> 00:17:29.370
<v Speaker 1>see that it's slightly different, but we don't have perspective

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:29.370 --> 00:17:30.300
<v Speaker 1>in numbers.

NOTE CONF {"raw":[100,100]}

00:17:30.720 --> 00:17:33.420
<v Speaker 1>So we have the slightly strange situation.

NOTE CONF {"raw":[100,100,100,96,100,100,100]}

00:17:33.420 --> 00:17:36.030
<v Speaker 1>That addition here doesn't mean what we think it's used

NOTE CONF {"raw":[100,97,100,100,100,100,100,100,67,100]}

00:17:36.030 --> 00:17:36.420
<v Speaker 1>to mean.

NOTE CONF {"raw":[100,100]}

00:17:36.420 --> 00:17:39.180
<v Speaker 1>Because if I go one plus omega, I get omega.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:39.630 --> 00:17:42.570
<v Speaker 1>But we are mathematicians and so like Humpty Dumpty.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:17:42.600 --> 00:17:44.760
<v Speaker 1>Words mean whatever we choose them to mean.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:17:44.760 --> 00:17:47.400
<v Speaker 1>And we choose addition to mean this.

NOTE CONF {"raw":[100,100,100,73,100,100,100]}

00:17:49.680 --> 00:17:54.630
<v Speaker 1>Um, if we can do addition, then we can do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:54.630 --> 00:17:55.860
<v Speaker 1>multiplication, right?

NOTE CONF {"raw":[100,100]}

00:17:56.040 --> 00:17:58.140
<v Speaker 1>Do you remember learning multiplication?

NOTE CONF {"raw":[100,100,100,100,100]}

00:17:59.880 --> 00:18:00.990
<v Speaker 1>Yeah, maybe.

NOTE CONF {"raw":[64,93]}

00:18:01.290 --> 00:18:05.100
<v Speaker 1>Probably right at the very beginning, when you learned multiplication,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:05.100 --> 00:18:06.870
<v Speaker 1>it was just repeated addition.

NOTE CONF {"raw":[100,100,100,100,68]}

00:18:07.290 --> 00:18:10.860
<v Speaker 1>If I do two times three, that means add three

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:10.860 --> 00:18:13.860
<v Speaker 1>copies of two together, which is, of course, the definition

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:13.860 --> 00:18:14.910
<v Speaker 1>of multiplication.

NOTE CONF {"raw":[100,100]}

00:18:16.080 --> 00:18:20.550
<v Speaker 1>Um, so just as a matter of convention, in order

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:20.550 --> 00:18:24.510
<v Speaker 1>to distinguish ordinals from numbers, I'm going to use the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:24.510 --> 00:18:28.350
<v Speaker 1>dot multiplication symbol for ordinals rather than the times one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:28.950 --> 00:18:31.470
<v Speaker 1>Also to avoid confusion between times and x.

NOTE CONF {"raw":[100,100,100,100,100,100,100,99]}

00:18:33.000 --> 00:18:37.410
<v Speaker 1>So let me write x dot y to mean y

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,97]}

00:18:37.410 --> 00:18:39.560
<v Speaker 1>copies of X all added together.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:18:39.560 --> 00:18:43.550
<v Speaker 1>So two times three is three copies of two, which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:43.550 --> 00:18:44.330
<v Speaker 1>is six.

NOTE CONF {"raw":[100,100]}

00:18:44.870 --> 00:18:46.610
<v Speaker 1>What's omega times three?

NOTE CONF {"raw":[100,100,100,100]}

00:18:46.640 --> 00:18:48.440
<v Speaker 1>Well, it's three copies of ever.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:18:48.440 --> 00:18:50.030
<v Speaker 1>So it's forever and ever and ever.

NOTE CONF {"raw":[100,100,60,100,100,100,100]}

00:18:50.030 --> 00:18:51.350
<v Speaker 1>And it looks like that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:18:53.000 --> 00:18:55.490
<v Speaker 1>What about two times Omega?

NOTE CONF {"raw":[100,100,100,100,100]}

00:18:55.490 --> 00:18:57.620
<v Speaker 1>So that's omega copies of two.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:18:57.650 --> 00:18:59.780
<v Speaker 1>Well, if I take pairs of sticks and lay them

NOTE CONF {"raw":[57,100,100,100,100,100,100,100,100,100]}

00:18:59.780 --> 00:19:02.990
<v Speaker 1>down forever, that's indistinguishable from taking one stick and laying

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:02.990 --> 00:19:04.070
<v Speaker 1>it down forever.

NOTE CONF {"raw":[100,100,100]}

00:19:04.070 --> 00:19:07.160
<v Speaker 1>So again, we have this situation where two times omega

NOTE CONF {"raw":[100,100,100,100,81,100,100,100,100,100]}

00:19:07.160 --> 00:19:08.660
<v Speaker 1>is the same as Omega.

NOTE CONF {"raw":[100,100,100,100,100]}

00:19:10.490 --> 00:19:10.850
<v Speaker 1>Um.

NOTE CONF {"raw":[95]}

00:19:12.920 --> 00:19:18.020
<v Speaker 1>Are you getting any hint about a general rule about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:18.020 --> 00:19:19.640
<v Speaker 1>addition and multiplication?

NOTE CONF {"raw":[100,100,100]}

00:19:21.290 --> 00:19:21.710
<v Speaker 1>Yeah.

NOTE CONF {"raw":[95]}

00:19:24.110 --> 00:19:27.410
<v Speaker 1>Um, if I multiply on the left, or add on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:27.410 --> 00:19:31.820
<v Speaker 1>the left by something small and multiply on the right

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:31.820 --> 00:19:33.530
<v Speaker 1>by omega, it's all just omega.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:33.530 --> 00:19:36.320
<v Speaker 1>So there's a kind of general rule hitting there, which

NOTE CONF {"raw":[100,100,100,100,100,100,100,96,100,100]}

00:19:36.320 --> 00:19:37.790
<v Speaker 1>is something small time.

NOTE CONF {"raw":[100,100,100,100]}

00:19:37.790 --> 00:19:39.680
<v Speaker 1>Something big is just something big.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:39.740 --> 00:19:42.260
<v Speaker 1>So it's not quite that simple, but roughly.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:19:42.260 --> 00:19:42.650
<v Speaker 1>Yeah.

NOTE CONF {"raw":[100]}

00:19:44.420 --> 00:19:47.150
<v Speaker 1>Um, if I can do two times omega, I can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:47.150 --> 00:19:49.880
<v Speaker 1>do three times omega and 47 times omega.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:19:49.880 --> 00:19:52.040
<v Speaker 1>And I must be able to do omega times omega

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:52.040 --> 00:19:52.610
<v Speaker 1>two.

NOTE CONF {"raw":[100]}

00:19:53.240 --> 00:19:57.020
<v Speaker 1>Okay, so what does Omega look like?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:19:58.160 --> 00:20:00.980
<v Speaker 1>Well, omega times omega is obviously in secular cycle.

NOTE CONF {"raw":[100,100,100,100,100,100,100,90,87]}

00:20:00.980 --> 00:20:03.020
<v Speaker 1>Autumn through ages of ages.

NOTE CONF {"raw":[100,100,100,100,100]}

00:20:04.340 --> 00:20:10.490
<v Speaker 1>So we have omega many a Omega, many copies of

NOTE CONF {"raw":[100,100,100,100,100,97,100,100,100,100]}

00:20:10.490 --> 00:20:11.090
<v Speaker 1>Omega.

NOTE CONF {"raw":[100]}

00:20:11.450 --> 00:20:13.910
<v Speaker 1>And again we can do our perspective trick and we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:13.910 --> 00:20:17.090
<v Speaker 1>can lay out an infinite number of rows going that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:17.090 --> 00:20:20.030
<v Speaker 1>way, lay them up that way, head up in another

NOTE CONF {"raw":[100,100,100,96,100,100,100,100,100,100]}

00:20:20.030 --> 00:20:22.220
<v Speaker 1>dimension somewhere, and look at them like this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:20:22.610 --> 00:20:23.870
<v Speaker 1>Only only a third dimension.

NOTE CONF {"raw":[100,100,100,100,100]}

00:20:23.870 --> 00:20:25.250
<v Speaker 1>That's not too much to ask.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:20:26.570 --> 00:20:32.540
<v Speaker 1>So there is a graphical representation of Omega Times Omega,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:32.540 --> 00:20:34.970
<v Speaker 1>which we might as well call omega squared.

NOTE CONF {"raw":[100,100,100,91,100,100,100,100]}

00:20:37.010 --> 00:20:38.330
<v Speaker 1>Guess what's going to happen next?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:20:38.330 --> 00:20:41.660
<v Speaker 1>Well, I'm going to take a little interlude just to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:41.660 --> 00:20:45.740
<v Speaker 1>explain why these things are useful before we continue doing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:45.740 --> 00:20:46.910
<v Speaker 1>absurd things.

NOTE CONF {"raw":[100,100]}

00:20:48.230 --> 00:20:52.790
<v Speaker 1>What's the point of introducing numbers like this, which are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:52.790 --> 00:20:55.670
<v Speaker 1>infinite but seem to be a sort of well behaved

NOTE CONF {"raw":[100,100,100,100,100,95,100,100,80,77]}

00:20:55.670 --> 00:20:56.540
<v Speaker 1>kind of infinity?

NOTE CONF {"raw":[100,100,100]}

00:20:56.540 --> 00:20:58.280
<v Speaker 1>Because we can see how to lay them down and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:58.280 --> 00:20:58.940
<v Speaker 1>build them.

NOTE CONF {"raw":[100,100]}

00:21:00.170 --> 00:21:03.710
<v Speaker 1>What's actually important with these numbers is that they are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:03.710 --> 00:21:05.510
<v Speaker 1>what's called well-founded.

NOTE CONF {"raw":[100,100,100]}

00:21:05.780 --> 00:21:08.240
<v Speaker 1>So if I take any of those numbers I've written

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:08.240 --> 00:21:13.340
<v Speaker 1>down, let's take that one and I go somewhere inside

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:13.340 --> 00:21:16.130
<v Speaker 1>it and I jump to somewhere smaller.

NOTE CONF {"raw":[100,100,100,90,100,100,100]}

00:21:16.130 --> 00:21:18.830
<v Speaker 1>So that means either jumping to the left or maybe

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:18.830 --> 00:21:22.190
<v Speaker 1>jumping down to a smaller to a closer thing to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:22.190 --> 00:21:24.500
<v Speaker 1>us if I keep jumping.

NOTE CONF {"raw":[100,100,100,100,100]}

00:21:26.930 --> 00:21:29.030
<v Speaker 1>So when I jump down, I can jump as far

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:29.030 --> 00:21:31.190
<v Speaker 1>to the right as I like, because everything here is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:31.190 --> 00:21:32.060
<v Speaker 1>smaller than here.

NOTE CONF {"raw":[100,100,100]}

00:21:32.060 --> 00:21:36.440
<v Speaker 1>So even though I might do something like starting there.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,92]}

00:21:36.590 --> 00:21:37.790
<v Speaker 1>Jump to their.

NOTE CONF {"raw":[100,100,98]}

00:21:38.450 --> 00:21:40.940
<v Speaker 1>Jump jump jump jump jump to their jump jump jump

NOTE CONF {"raw":[100,100,100,100,100,100,94,100,100,100]}

00:21:40.940 --> 00:21:41.180
<v Speaker 1>jump.

NOTE CONF {"raw":[100]}

00:21:41.180 --> 00:21:42.680
<v Speaker 1>I'm always going to hit the beginning.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:21:42.680 --> 00:21:44.420
<v Speaker 1>I'm always going to reach zero.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:21:45.440 --> 00:21:48.140
<v Speaker 1>So that's a property of all these numbers.

NOTE CONF {"raw":[100,100,85,100,100,100,100,100]}

00:21:48.140 --> 00:21:49.970
<v Speaker 1>If I were to define them properly.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:21:50.330 --> 00:21:54.530
<v Speaker 1>If you keep going down, then after a finite number

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:54.530 --> 00:21:57.110
<v Speaker 1>of steps you must hit zero.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:21:58.100 --> 00:22:02.930
<v Speaker 1>And that's a maybe a slightly counterintuitive property because these

NOTE CONF {"raw":[100,100,70,100,100,100,85,100,100,100]}

00:22:02.930 --> 00:22:04.040
<v Speaker 1>are big infinite numbers.

NOTE CONF {"raw":[100,100,100,100]}

00:22:04.040 --> 00:22:06.290
<v Speaker 1>And I'm multiplying infinities by each other.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:22:06.290 --> 00:22:08.030
<v Speaker 1>But now I'm telling you that they have a nice

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:08.030 --> 00:22:10.820
<v Speaker 1>property, that as long as if you jump or at

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,58,100]}

00:22:10.820 --> 00:22:14.660
<v Speaker 1>least one step at a time, then you will eventually

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:14.660 --> 00:22:17.660
<v Speaker 1>hit zero and it won't take you forever to do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:17.660 --> 00:22:18.200
<v Speaker 1>so.

NOTE CONF {"raw":[100]}

00:22:19.310 --> 00:22:22.880
<v Speaker 1>Um, essentially, because there's no biggest number.

NOTE CONF {"raw":[71,100,100,100,100,100,100]}

00:22:22.880 --> 00:22:25.850
<v Speaker 1>So if you're at Omega Plus one and you want

NOTE CONF {"raw":[100,100,100,100,100,94,100,100,100,100]}

00:22:25.850 --> 00:22:27.950
<v Speaker 1>to jump, well, you can go to Omega.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:22:27.950 --> 00:22:29.330
<v Speaker 1>But where can you jump from?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:22:29.330 --> 00:22:31.970
<v Speaker 1>From Omega, you have to jump to some finite actual

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:31.970 --> 00:22:35.540
<v Speaker 1>number like 10,000,705.

NOTE CONF {"raw":[100,100,100]}

00:22:35.570 --> 00:22:36.200
<v Speaker 1>You can't.

NOTE CONF {"raw":[100,100]}

00:22:36.200 --> 00:22:38.390
<v Speaker 1>So then you have 10 million steps.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:22:38.390 --> 00:22:40.100
<v Speaker 1>Steps and you have to hit zero.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:22:42.110 --> 00:22:44.180
<v Speaker 1>Why is that important?

NOTE CONF {"raw":[100,100,100,100]}

00:22:44.180 --> 00:22:46.880
<v Speaker 1>Because that means they give us a general notion of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:46.880 --> 00:22:47.990
<v Speaker 1>proof by induction.

NOTE CONF {"raw":[100,100,100]}

00:22:47.990 --> 00:22:49.910
<v Speaker 1>So who have you think you know?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:22:49.910 --> 00:22:51.110
<v Speaker 1>Proof by induction.

NOTE CONF {"raw":[100,100,100]}

00:22:52.670 --> 00:22:57.560
<v Speaker 1>Okay, I suspect more of you probably should, but maybe

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:57.560 --> 00:22:58.010
<v Speaker 1>not.

NOTE CONF {"raw":[100]}

00:22:58.130 --> 00:23:01.190
<v Speaker 1>So proof by induction as you learn it in school

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:01.190 --> 00:23:04.520
<v Speaker 1>if you do, or in the first year of courses

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,78,100]}

00:23:04.520 --> 00:23:05.120
<v Speaker 1>here.

NOTE CONF {"raw":[100]}

00:23:05.630 --> 00:23:09.050
<v Speaker 1>Basically says if I can prove that if something holds

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:09.050 --> 00:23:11.540
<v Speaker 1>n, then it holds for n plus one, then it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:11.540 --> 00:23:12.890
<v Speaker 1>holds for all numbers.

NOTE CONF {"raw":[100,100,100,100]}

00:23:14.060 --> 00:23:17.480
<v Speaker 1>We have to be slightly more careful with ordinals, because

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:17.660 --> 00:23:20.270
<v Speaker 1>we have to worry about things like omega, and there's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:20.270 --> 00:23:22.490
<v Speaker 1>no number immediately below omega.

NOTE CONF {"raw":[100,100,100,100,100]}

00:23:22.640 --> 00:23:25.760
<v Speaker 1>So the way we formulate it is to say if

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:25.760 --> 00:23:28.430
<v Speaker 1>we have some nice property P and it's true for

NOTE CONF {"raw":[100,100,100,100,100,100,100,95,100,100]}

00:23:28.430 --> 00:23:32.320
<v Speaker 1>zero, and if it's also the case that if we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:32.320 --> 00:23:34.780
<v Speaker 1>can show that it holds for if it holds for

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:34.780 --> 00:23:39.010
<v Speaker 1>every number smaller than alpha alpha, then it holds for

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:39.010 --> 00:23:39.730
<v Speaker 1>alpha.

NOTE CONF {"raw":[100]}

00:23:39.730 --> 00:23:42.040
<v Speaker 1>So that's the equivalent of saying if it holds for

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:42.040 --> 00:23:44.560
<v Speaker 1>all numbers less than n, then it holds for n.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:44.830 --> 00:23:47.590
<v Speaker 1>If we have these two things, then we can conclude

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:47.590 --> 00:23:52.630
<v Speaker 1>that the property holds for all of these ordinal numbers

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:52.630 --> 00:23:53.650
<v Speaker 1>we're generating.

NOTE CONF {"raw":[100,100]}

00:23:54.520 --> 00:23:56.770
<v Speaker 1>So that's a slightly abstract one.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:23:56.770 --> 00:23:58.930
<v Speaker 1>But I'll give you a well I'll give you a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:58.930 --> 00:24:00.640
<v Speaker 1>couple of demonstrations of this.

NOTE CONF {"raw":[100,100,100,100,100]}

00:24:00.640 --> 00:24:03.400
<v Speaker 1>So we'll start with a relatively easy one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:24:05.020 --> 00:24:08.050
<v Speaker 1>Um, this is a fairly condensed talk.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:24:08.050 --> 00:24:10.840
<v Speaker 1>So on the whole I'm not stopping for questions, but

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:10.840 --> 00:24:14.290
<v Speaker 1>if there's a clarification point you want, then shout, okay.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:15.430 --> 00:24:17.170
<v Speaker 1>So this is recreational.

NOTE CONF {"raw":[100,100,100,97]}

00:24:17.170 --> 00:24:18.370
<v Speaker 1>You're not being examined on it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:24:18.370 --> 00:24:20.800
<v Speaker 1>But nonetheless it's a if there's something that would help

NOTE CONF {"raw":[100,100,100,70,100,100,100,100,100,100]}

00:24:20.800 --> 00:24:22.180
<v Speaker 1>understanding then do shout.

NOTE CONF {"raw":[100,100,100,100]}

00:24:24.100 --> 00:24:26.470
<v Speaker 1>So here's an example.

NOTE CONF {"raw":[100,100,100,100]}

00:24:27.010 --> 00:24:30.070
<v Speaker 1>This is a function that you will meet in courses

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:30.070 --> 00:24:30.940
<v Speaker 1>later on.

NOTE CONF {"raw":[100,100]}

00:24:30.940 --> 00:24:32.830
<v Speaker 1>It's called the Ackermann function.

NOTE CONF {"raw":[91,100,100,100,100]}

00:24:32.830 --> 00:24:34.750
<v Speaker 1>It was very hard to find a picture of Ackermann

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:34.750 --> 00:24:36.400
<v Speaker 1>and that was the best I could find.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:24:38.950 --> 00:24:44.740
<v Speaker 1>Um, it's a function of two arguments which are non-negative

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:44.740 --> 00:24:45.580
<v Speaker 1>integers.

NOTE CONF {"raw":[100]}

00:24:45.970 --> 00:24:51.700
<v Speaker 1>So when I say integer, I mean non-negative integer, and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:51.700 --> 00:24:52.810
<v Speaker 1>it's defined like this.

NOTE CONF {"raw":[93,100,100,100]}

00:24:52.810 --> 00:24:54.820
<v Speaker 1>So you can write this down in Haskell.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:24:55.780 --> 00:24:59.020
<v Speaker 1>Ackermann of zero comma y is just y plus one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:59.020 --> 00:25:05.770
<v Speaker 1>So the successor function Ackermann of x comma zero is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:05.770 --> 00:25:08.530
<v Speaker 1>Ackermann of x minus one and one.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:25:08.680 --> 00:25:11.560
<v Speaker 1>So you decrease the first argument by one and you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:11.560 --> 00:25:13.690
<v Speaker 1>increase the second argument by one.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:25:14.890 --> 00:25:17.950
<v Speaker 1>What happens when both arguments are positive?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:25:19.000 --> 00:25:21.910
<v Speaker 1>You do a recursive a nested recursive call.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:25:22.000 --> 00:25:26.560
<v Speaker 1>So first of all you compute Ackermann of x comma

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:26.560 --> 00:25:30.430
<v Speaker 1>y minus one and then you use the result of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:30.430 --> 00:25:33.160
<v Speaker 1>that as the second argument to Ackermann of x minus

NOTE CONF {"raw":[100,100,100,100,100,100,88,100,100,100]}

00:25:33.160 --> 00:25:33.790
<v Speaker 1>one.

NOTE CONF {"raw":[100]}

00:25:36.040 --> 00:25:40.150
<v Speaker 1>Um, is it immediately obvious that this function is always

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:40.150 --> 00:25:42.700
<v Speaker 1>going to terminate and give a result if you write

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:42.700 --> 00:25:43.390
<v Speaker 1>it in Haskell?

NOTE CONF {"raw":[100,100,100]}

00:25:47.050 --> 00:25:49.300
<v Speaker 1>So some people, it's immediately obvious.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:25:49.300 --> 00:25:52.000
<v Speaker 1>To some people it's not quite immediately obvious.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:25:52.570 --> 00:25:55.420
<v Speaker 1>Um, if it's not immediate, obvious, immediately obvious, and you

NOTE CONF {"raw":[72,100,100,100,52,96,100,100,100,100]}

00:25:55.420 --> 00:25:58.090
<v Speaker 1>start testing it, you might get quite worried.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:25:58.300 --> 00:26:03.340
<v Speaker 1>So if you do four of four, you start expanding

NOTE CONF {"raw":[100,100,100,100,46,95,95,100,100,100]}

00:26:03.340 --> 00:26:03.760
<v Speaker 1>it.

NOTE CONF {"raw":[100]}

00:26:03.880 --> 00:26:05.800
<v Speaker 1>And if you were to keep doing it by hand

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:05.800 --> 00:26:08.320
<v Speaker 1>without thinking, you would go on for a seriously long

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:08.320 --> 00:26:10.180
<v Speaker 1>time, as we'll see shortly.

NOTE CONF {"raw":[100,100,100,100,100]}

00:26:11.380 --> 00:26:14.230
<v Speaker 1>But there is something you can observe about it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:26:14.410 --> 00:26:17.920
<v Speaker 1>Every time I do a recursive call, either x or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:17.920 --> 00:26:19.300
<v Speaker 1>y get smaller.

NOTE CONF {"raw":[100,50,100]}

00:26:19.330 --> 00:26:20.800
<v Speaker 1>So why is that?

NOTE CONF {"raw":[100,100,100,100]}

00:26:20.800 --> 00:26:23.860
<v Speaker 1>Because when I do this recursion x gets smaller.

NOTE CONF {"raw":[100,100,100,100,100,100,100,94,100]}

00:26:23.890 --> 00:26:25.720
<v Speaker 1>When I do this recursion.

NOTE CONF {"raw":[100,100,100,100,100]}

00:26:25.750 --> 00:26:28.480
<v Speaker 1>X stays the same and y gets smaller.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:26:29.860 --> 00:26:34.750
<v Speaker 1>So every time you expand the recursive call, something gets

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,93]}

00:26:34.750 --> 00:26:38.020
<v Speaker 1>smaller and the other thing stays the same.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:26:38.020 --> 00:26:41.200
<v Speaker 1>So essentially you're doing a nested recursion on the x

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:41.200 --> 00:26:41.950
<v Speaker 1>and the y.

NOTE CONF {"raw":[100,100,100]}

00:26:41.950 --> 00:26:44.590
<v Speaker 1>And when you do a recursive call, maybe x gets

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:44.590 --> 00:26:47.020
<v Speaker 1>smaller or maybe x stays the same and y gets

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:47.020 --> 00:26:48.610
<v Speaker 1>smaller smaller.

NOTE CONF {"raw":[100,100]}

00:26:48.820 --> 00:26:57.820
<v Speaker 1>So that is effectively doing an inductive proof on omega

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:57.820 --> 00:27:01.390
<v Speaker 1>cross omega times omega the natural numbers times the natural

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:01.390 --> 00:27:01.720
<v Speaker 1>numbers.

NOTE CONF {"raw":[100]}

00:27:01.720 --> 00:27:03.370
<v Speaker 1>If you draw out the x and the y and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:03.370 --> 00:27:05.920
<v Speaker 1>see where it goes, it goes heads down to the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:05.920 --> 00:27:06.580
<v Speaker 1>origin.

NOTE CONF {"raw":[100]}

00:27:07.570 --> 00:27:11.290
<v Speaker 1>So you will ultimately hit Ackerman of zero comma y.

NOTE CONF {"raw":[100,100,100,100,100,63,100,100,100,100]}

00:27:11.680 --> 00:27:14.980
<v Speaker 1>Nonetheless, if you actually do evaluate this function, and obviously

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:14.980 --> 00:27:17.170
<v Speaker 1>it's trivial to write this down in Haskell so you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:17.170 --> 00:27:20.590
<v Speaker 1>can do it enthusiastic among you can do it whilst

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:20.590 --> 00:27:21.430
<v Speaker 1>I'm speaking.

NOTE CONF {"raw":[100,100]}

00:27:22.120 --> 00:27:24.220
<v Speaker 1>Um, it grows quite fast.

NOTE CONF {"raw":[100,100,100,100,100]}

00:27:24.220 --> 00:27:27.310
<v Speaker 1>We will come back to see how fast it grows.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:27.640 --> 00:27:30.700
<v Speaker 1>So that was a little diversion to explain why ordinals

NOTE CONF {"raw":[100,100,65,100,100,100,100,100,100,100]}

00:27:30.700 --> 00:27:33.220
<v Speaker 1>are useful, to show that things finish.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:27:33.700 --> 00:27:37.000
<v Speaker 1>I now want to go back to building even more

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:37.000 --> 00:27:38.710
<v Speaker 1>ridiculously large numbers.

NOTE CONF {"raw":[100,100,100]}

00:27:40.150 --> 00:27:43.510
<v Speaker 1>When you learn multiplication, you learned it by repeating additions.

NOTE CONF {"raw":[100,100,100,100,100,63,100,100,100,80]}

00:27:43.510 --> 00:27:47.650
<v Speaker 1>When you learned exponentiation, which was probably some years later,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:48.490 --> 00:27:51.580
<v Speaker 1>you probably learned it as repeated multiplication, right?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:27:51.730 --> 00:27:54.430
<v Speaker 1>Because that's the definition of exponentiation, at least until you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:54.430 --> 00:27:56.290
<v Speaker 1>have to start worrying about what e to the I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:56.290 --> 00:27:57.250
<v Speaker 1>theta means.

NOTE CONF {"raw":[100,100]}

00:27:58.270 --> 00:28:01.180
<v Speaker 1>So when we write x to the y, that means

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:01.180 --> 00:28:03.400
<v Speaker 1>y copies of x multiplied together.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:28:04.750 --> 00:28:07.030
<v Speaker 1>Well, that is not too hard.

NOTE CONF {"raw":[100,100,100,100,98,100]}

00:28:07.030 --> 00:28:09.910
<v Speaker 1>We can just continue thinking about omega squared omega times

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:09.910 --> 00:28:10.270
<v Speaker 1>omega.

NOTE CONF {"raw":[100]}

00:28:10.270 --> 00:28:13.600
<v Speaker 1>We've seen yet again two to the omega.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:28:13.600 --> 00:28:17.410
<v Speaker 1>Well, that's infinitely many copies of two multiplied together, which

NOTE CONF {"raw":[62,100,100,100,100,100,100,100,100,100]}

00:28:17.410 --> 00:28:19.780
<v Speaker 1>is basically indistinguishable from infinity.

NOTE CONF {"raw":[100,100,100,100,100]}

00:28:20.500 --> 00:28:24.190
<v Speaker 1>Omega Omega cubed, on the other hand, is omega times,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:24.190 --> 00:28:27.760
<v Speaker 1>omega times, omega or omega copies of Omega Squared, and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:27.760 --> 00:28:30.040
<v Speaker 1>we can kind of visualise it like that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:28:32.380 --> 00:28:35.890
<v Speaker 1>Um, how far am I going to go?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:28:36.760 --> 00:28:39.670
<v Speaker 1>Well, at some point my ability to draw diagrams runs

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:39.670 --> 00:28:42.190
<v Speaker 1>out and my ability to draw diagrams runs out about

NOTE CONF {"raw":[100,90,100,100,100,100,100,100,100,100]}

00:28:42.190 --> 00:28:42.820
<v Speaker 1>there.

NOTE CONF {"raw":[100]}

00:28:43.570 --> 00:28:48.160
<v Speaker 1>So this is an obviously inaccurate representation of Omega to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:48.160 --> 00:28:50.680
<v Speaker 1>the Omega, but it looks something like that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:28:51.580 --> 00:28:55.270
<v Speaker 1>And incidentally, these diagrams are generated not even in pure

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:55.270 --> 00:28:55.720
<v Speaker 1>LaTeX.

NOTE CONF {"raw":[100]}

00:28:55.720 --> 00:28:57.340
<v Speaker 1>They're generated in pure text.

NOTE CONF {"raw":[99,100,100,100,68]}

00:28:57.400 --> 00:28:59.800
<v Speaker 1>So no graphics packages here.

NOTE CONF {"raw":[100,100,100,100,100]}

00:29:00.850 --> 00:29:05.170
<v Speaker 1>Um, but you can see and you can also see

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:05.170 --> 00:29:07.540
<v Speaker 1>how the kind of, well, handedness works, because if I'm

NOTE CONF {"raw":[100,100,100,100,96,96,100,100,100,100]}

00:29:07.540 --> 00:29:09.790
<v Speaker 1>somewhere in here and I jump to the left or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:09.790 --> 00:29:12.490
<v Speaker 1>down and left or down, ultimately I'm going to hit

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:12.490 --> 00:29:14.140
<v Speaker 1>the bottom left.

NOTE CONF {"raw":[100,100,100]}

00:29:16.330 --> 00:29:20.980
<v Speaker 1>So what are we doing for time, as always?

NOTE CONF {"raw":[100,44,100,100,100,100,100,100,100]}

00:29:20.980 --> 00:29:21.850
<v Speaker 1>Not enough.

NOTE CONF {"raw":[100,100]}

00:29:24.840 --> 00:29:25.050
<v Speaker 1>Okay.

NOTE CONF {"raw":[100]}

00:29:25.050 --> 00:29:26.070
<v Speaker 1>I'll take a quick pause.

NOTE CONF {"raw":[100,100,100,100,100]}

00:29:26.100 --> 00:29:27.960
<v Speaker 1>Any quick questions at this point?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:27.960 --> 00:29:28.350
<v Speaker 1>Yeah.

NOTE CONF {"raw":[100]}

00:29:29.460 --> 00:29:30.090
<v Unknown>So.

NOTE CONF {"raw":[100]}

00:29:32.940 --> 00:29:37.410
<v Unknown>We're basically being 100% right.

NOTE CONF {"raw":[96,100,100,100,100]}

00:29:38.310 --> 00:29:40.620
<v Speaker 0>So we're coming to this system.

NOTE CONF {"raw":[100,73,69,93,91,94]}

00:29:41.940 --> 00:29:45.990
<v Speaker 0>And this number can get to zero by subtracting, you

NOTE CONF {"raw":[35,100,100,100,89,100,100,100,100,100]}

00:29:45.990 --> 00:29:48.660
<v Speaker 0>know, this one a finite number of times.

NOTE CONF {"raw":[100,51,100,48,95,100,100,94]}

00:29:48.660 --> 00:29:49.560
<v Speaker 0>Which doesn't make sense.

NOTE CONF {"raw":[100,100,100,100]}

00:29:50.460 --> 00:29:50.880
<v Speaker 1>Ah.

NOTE CONF {"raw":[98]}

00:29:50.880 --> 00:29:51.780
<v Speaker 1>But that yes.

NOTE CONF {"raw":[100,43,100]}

00:29:51.780 --> 00:29:53.010
<v Speaker 1>So that's a very good point.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:53.010 --> 00:29:56.040
<v Speaker 1>And you're now kind of spoiling the next ten minutes.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:56.040 --> 00:29:56.910
<v Speaker 1>But that's okay.

NOTE CONF {"raw":[100,100,100]}

00:29:56.910 --> 00:30:00.030
<v Speaker 1>So the question is what happens if you do some

NOTE CONF {"raw":[100,100,100,100,100,100,68,100,100,100]}

00:30:00.030 --> 00:30:03.420
<v Speaker 1>subtraction and you get Omega say how do you subtract

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:03.420 --> 00:30:04.530
<v Speaker 1>one from Omega.

NOTE CONF {"raw":[100,100,100]}

00:30:04.560 --> 00:30:07.050
<v Speaker 1>There is no number immediately below omega.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:30:07.050 --> 00:30:08.730
<v Speaker 1>So that's what we're about to see.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:30:09.030 --> 00:30:12.270
<v Speaker 1>So so you should be able to solve this little

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:12.270 --> 00:30:12.810
<v Speaker 1>puzzle.

NOTE CONF {"raw":[100]}

00:30:13.200 --> 00:30:18.420
<v Speaker 1>So this is a slightly strange concept, but it kind

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:18.420 --> 00:30:19.260
<v Speaker 1>of makes sense.

NOTE CONF {"raw":[100,100,100]}

00:30:19.260 --> 00:30:21.480
<v Speaker 1>You know what it means to write numbers in base

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:21.480 --> 00:30:22.140
<v Speaker 1>seven.

NOTE CONF {"raw":[100]}

00:30:22.290 --> 00:30:23.580
<v Speaker 1>Or at least you know what it means to write

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:23.580 --> 00:30:25.710
<v Speaker 1>numbers in base two, and you should know what it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:25.710 --> 00:30:27.630
<v Speaker 1>means to write numbers in base seven.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:30:28.560 --> 00:30:32.880
<v Speaker 1>This is a kind of expanded base notation, where we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:32.880 --> 00:30:38.010
<v Speaker 1>think about writing a number as the sum of powers

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:38.010 --> 00:30:38.670
<v Speaker 1>of two.

NOTE CONF {"raw":[100,100]}

00:30:38.670 --> 00:30:40.710
<v Speaker 1>So writing it in binary basically.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:30:41.100 --> 00:30:43.620
<v Speaker 1>But then we look at the exponents of the powers

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:43.620 --> 00:30:47.430
<v Speaker 1>of two, and we write those in binary as well.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:47.430 --> 00:30:50.910
<v Speaker 1>So we end up saying that a number like 1030

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:51.000 --> 00:30:53.880
<v Speaker 1>can be written as two to the power of two,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:53.880 --> 00:30:56.940
<v Speaker 1>to the power of two plus one plus two plus

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:56.940 --> 00:30:58.530
<v Speaker 1>two to the power, two plus two.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:30:59.400 --> 00:31:02.130
<v Speaker 1>So basically we're not allowed to use any digit larger

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:02.130 --> 00:31:03.090
<v Speaker 1>than two.

NOTE CONF {"raw":[100,100]}

00:31:03.090 --> 00:31:04.920
<v Speaker 1>And we have to write out the number as a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:04.920 --> 00:31:07.860
<v Speaker 1>sum of powers of powers or powers.

NOTE CONF {"raw":[100,100,100,100,100,93,100]}

00:31:09.030 --> 00:31:10.980
<v Speaker 1>If I were to do it with three then I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:10.980 --> 00:31:14.700
<v Speaker 1>would end up writing something like this.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:31:14.970 --> 00:31:17.850
<v Speaker 1>So you can take my word for it that these

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:17.850 --> 00:31:18.690
<v Speaker 1>are correct.

NOTE CONF {"raw":[100,100]}

00:31:18.690 --> 00:31:19.950
<v Speaker 1>I think I checked them.

NOTE CONF {"raw":[100,100,100,100,100]}

00:31:20.100 --> 00:31:25.470
<v Speaker 1>That's what The number 1030 looks like in this so-called

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:25.470 --> 00:31:27.540
<v Speaker 1>hereditary base three.

NOTE CONF {"raw":[100,100,100]}

00:31:28.950 --> 00:31:31.020
<v Speaker 1>And then the puzzle goes like this.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:31:31.050 --> 00:31:35.700
<v Speaker 1>Think of a number, any number n write it in

NOTE CONF {"raw":[100,100,100,100,100,100,99,97,100,100]}

00:31:35.700 --> 00:31:37.470
<v Speaker 1>hereditary base two.

NOTE CONF {"raw":[100,100,100]}

00:31:37.920 --> 00:31:41.850
<v Speaker 1>Now wherever you see the digit two, replace it by

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:41.850 --> 00:31:42.450
<v Speaker 1>three.

NOTE CONF {"raw":[100]}

00:31:43.350 --> 00:31:44.760
<v Speaker 1>Evaluate the result.

NOTE CONF {"raw":[100,100,100]}

00:31:45.480 --> 00:31:47.100
<v Speaker 1>The number's going to get much bigger.

NOTE CONF {"raw":[100,77,100,100,100,100,100]}

00:31:47.790 --> 00:31:49.800
<v Speaker 1>Subtract one from that number.

NOTE CONF {"raw":[100,100,100,100,100]}

00:31:50.760 --> 00:31:51.150
<v Speaker 1>Okay.

NOTE CONF {"raw":[100]}

00:31:51.750 --> 00:31:53.640
<v Speaker 1>Write it in hereditary base three.

NOTE CONF {"raw":[97,100,65,47,100,100]}

00:31:53.640 --> 00:31:54.300
<v Speaker 1>Again.

NOTE CONF {"raw":[100]}

00:31:54.300 --> 00:31:57.540
<v Speaker 1>Everywhere you see three, replace it by four.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:57.870 --> 00:31:58.560
<v Speaker 1>Evaluate it.

NOTE CONF {"raw":[87,87]}

00:31:58.560 --> 00:32:00.180
<v Speaker 1>It's going to get much bigger again.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:32:00.780 --> 00:32:02.040
<v Speaker 1>Subtract one.

NOTE CONF {"raw":[100,100]}

00:32:02.550 --> 00:32:05.220
<v Speaker 1>Keep on going until you hit zero.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:32:05.550 --> 00:32:06.810
<v Speaker 1>If you hit zero.

NOTE CONF {"raw":[100,100,100,100]}

00:32:07.560 --> 00:32:11.160
<v Speaker 1>Um, so the Goodstein function g of n is how

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:11.160 --> 00:32:14.070
<v Speaker 1>many steps of this process it takes to hit zero.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:14.280 --> 00:32:17.760
<v Speaker 1>And the question is, is that a sensible number or

NOTE CONF {"raw":[90,100,100,100,100,100,100,100,100,100]}

00:32:17.760 --> 00:32:19.290
<v Speaker 1>is it infinity?

NOTE CONF {"raw":[100,100,100]}

00:32:21.630 --> 00:32:21.930
<v Speaker 1>Um.

NOTE CONF {"raw":[100]}

00:32:21.930 --> 00:32:22.770
<v Speaker 1>Any bets?

NOTE CONF {"raw":[100,92]}

00:32:23.160 --> 00:32:23.700
<v Speaker 1>Yeah.

NOTE CONF {"raw":[100]}

00:32:25.410 --> 00:32:26.070
<v Speaker 1>Finite.

NOTE CONF {"raw":[100]}

00:32:26.100 --> 00:32:27.720
<v Speaker 1>Anybody going for infinite?

NOTE CONF {"raw":[100,100,100,100]}

00:32:29.700 --> 00:32:30.420
<v Speaker 1>Okay.

NOTE CONF {"raw":[100]}

00:32:31.530 --> 00:32:32.220
<v Speaker 1>Right.

NOTE CONF {"raw":[96]}

00:32:33.210 --> 00:32:36.360
<v Speaker 1>This is a deliberately deceptive way of writing it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:32:36.450 --> 00:32:38.490
<v Speaker 1>Okay, so now let's think about it.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:32:39.510 --> 00:32:41.880
<v Speaker 1>But let's also, I mean, when you get a puzzle

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:41.880 --> 00:32:43.950
<v Speaker 1>like this, it helps to try a few examples.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:32:43.950 --> 00:32:45.960
<v Speaker 1>What is the value of the Goodstein function?

NOTE CONF {"raw":[100,100,100,100,100,100,85,100]}

00:32:45.960 --> 00:32:48.000
<v Speaker 1>For example, how many steps does it take.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:32:48.000 --> 00:32:51.780
<v Speaker 1>So is your question going to anticipate something or not?

NOTE CONF {"raw":[100,72,100,100,100,100,100,100,100,100]}

00:32:52.230 --> 00:32:53.970
<v Speaker 0>I was going to say that when.

NOTE CONF {"raw":[100,100,100,100,96,100,65]}

00:32:54.240 --> 00:32:57.180
<v Speaker 2>Uh, each time you subtract one, you're eventually going to

NOTE CONF {"raw":[57,100,100,100,100,100,100,100,100,100]}

00:32:57.180 --> 00:32:58.380
<v Speaker 2>remove a digit from this.

NOTE CONF {"raw":[100,100,100,100,94]}

00:32:58.380 --> 00:32:58.920
<v Speaker 1>Yes.

NOTE CONF {"raw":[100]}

00:32:58.920 --> 00:33:01.410
<v Speaker 1>So we'll see that in action now.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:33:01.500 --> 00:33:03.810
<v Speaker 1>But let's think about what the numbers are.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:33:04.080 --> 00:33:07.530
<v Speaker 1>So here is let's think about the good steam function

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,81,100]}

00:33:07.530 --> 00:33:08.940
<v Speaker 1>applied to the value three.

NOTE CONF {"raw":[100,100,100,100,100]}

00:33:09.810 --> 00:33:12.600
<v Speaker 1>Now back sometime in the 80s or 90s, I forget

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:12.600 --> 00:33:17.430
<v Speaker 1>when there was some conservative politician who was cutting public

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:17.430 --> 00:33:20.880
<v Speaker 1>spending in ways that are familiar to us.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:33:21.090 --> 00:33:23.700
<v Speaker 1>And they said, there is no magic money tree.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:33:23.700 --> 00:33:25.590
<v Speaker 1>So here's a magic money tree.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:33:26.610 --> 00:33:27.570
<v Speaker 1>Why is it magic?

NOTE CONF {"raw":[100,100,100,100]}

00:33:27.570 --> 00:33:30.960
<v Speaker 1>It has wonderful little gold sovereigns as leaves.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:33:32.100 --> 00:33:35.130
<v Speaker 1>And each day you can pluck one of the gold

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:35.130 --> 00:33:35.940
<v Speaker 1>sovereigns.

NOTE CONF {"raw":[100]}

00:33:36.150 --> 00:33:38.280
<v Speaker 1>And then something happens to the tree.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:33:38.430 --> 00:33:43.410
<v Speaker 1>So the tree has dead nodes and live nodes.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:33:45.150 --> 00:33:51.240
<v Speaker 1>And what happens is each day, each live node grows

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:51.240 --> 00:33:53.940
<v Speaker 1>another leaf with a nice gold coin on the end.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:55.140 --> 00:33:58.170
<v Speaker 1>And then you pluck a sovereign, and if you're sensible,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:58.170 --> 00:34:00.030
<v Speaker 1>you pluck it from one of the dead nodes.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:34:00.660 --> 00:34:01.830
<v Speaker 1>Okay, so we get that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:34:01.830 --> 00:34:06.480
<v Speaker 1>What happens on the next day the tree grows another

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:06.480 --> 00:34:09.990
<v Speaker 1>leaf there with a gold coin, another fruit, gold fruit.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:10.260 --> 00:34:12.450
<v Speaker 1>And now you have to pluck from there.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:34:12.450 --> 00:34:14.639
<v Speaker 1>But when you pluck from a live node, you kill

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:14.639 --> 00:34:17.610
<v Speaker 1>it and it can't go anymore.

NOTE CONF {"raw":[100,100,100,100,100,72]}

00:34:18.409 --> 00:34:21.409
<v Speaker 1>So when you keep plucking your gold coins.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:34:23.870 --> 00:34:24.919
<v Speaker 1>You're going to.

NOTE CONF {"raw":[100,100,100]}

00:34:25.220 --> 00:34:27.530
<v Speaker 1>After six days, you'll go back to the tree and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:27.530 --> 00:34:29.060
<v Speaker 1>find there's nothing more to pluck.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:34:29.629 --> 00:34:32.600
<v Speaker 1>So in terms of this hereditary base B, which I'm

NOTE CONF {"raw":[100,100,100,100,100,100,83,83,100,100]}

00:34:32.600 --> 00:34:34.399
<v Speaker 1>not sure is actually point, well, it's the point that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:34.399 --> 00:34:35.540
<v Speaker 1>was just made here.

NOTE CONF {"raw":[100,100,100,100]}

00:34:35.570 --> 00:34:38.450
<v Speaker 1>If I look at the expansion here, three is two

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:38.450 --> 00:34:39.440
<v Speaker 1>plus one.

NOTE CONF {"raw":[100,100]}

00:34:39.860 --> 00:34:43.399
<v Speaker 1>So I replace two by three and write it out

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:43.399 --> 00:34:44.120
<v Speaker 1>again.

NOTE CONF {"raw":[100]}

00:34:44.600 --> 00:34:47.330
<v Speaker 1>Well that's really just subtracting one.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:34:47.330 --> 00:34:49.790
<v Speaker 1>So I get three plus one and then three and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:49.790 --> 00:34:50.360
<v Speaker 1>then four.

NOTE CONF {"raw":[100,100]}

00:34:50.360 --> 00:34:52.550
<v Speaker 1>And then four has to be replaced.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:52.550 --> 00:34:54.679
<v Speaker 1>I have to subtract one from four which gives me

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:54.679 --> 00:34:55.310
<v Speaker 1>three.

NOTE CONF {"raw":[100]}

00:34:55.310 --> 00:34:57.890
<v Speaker 1>And then I no longer have the magic base digit

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:57.890 --> 00:34:59.030
<v Speaker 1>in my number.

NOTE CONF {"raw":[100,100,100]}

00:34:59.030 --> 00:35:00.800
<v Speaker 1>And now it just dies off.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:35:01.550 --> 00:35:04.760
<v Speaker 1>So that's the reason why you can see that actually

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:04.760 --> 00:35:08.150
<v Speaker 1>this always finishes, but you might wonder how long it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:08.150 --> 00:35:09.260
<v Speaker 1>takes to finish.

NOTE CONF {"raw":[100,100,100]}

00:35:09.260 --> 00:35:13.820
<v Speaker 1>So starting with the number three here, the magic money

NOTE CONF {"raw":[100,100,100,96,100,100,100,100,100,100]}

00:35:13.820 --> 00:35:17.690
<v Speaker 1>tree that started with three fruits on it took six

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:17.720 --> 00:35:19.910
<v Speaker 1>days to run out of money.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:35:20.660 --> 00:35:23.210
<v Speaker 1>If I start with four.

NOTE CONF {"raw":[100,100,100,100,100]}

00:35:23.390 --> 00:35:24.650
<v Speaker 1>What do you think happens?

NOTE CONF {"raw":[100,100,100,100,100]}

00:35:24.650 --> 00:35:26.180
<v Speaker 1>How long do you think it takes to run out

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:26.180 --> 00:35:26.870
<v Speaker 1>of money?

NOTE CONF {"raw":[100,100]}

00:35:28.520 --> 00:35:31.280
<v Speaker 1>Much, much longer.

NOTE CONF {"raw":[44,100,100]}

00:35:31.520 --> 00:35:32.450
<v Speaker 1>Much longer.

NOTE CONF {"raw":[100,100]}

00:35:32.450 --> 00:35:34.160
<v Speaker 1>How much is much longer, I wonder?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:35:34.370 --> 00:35:36.230
<v Speaker 1>Well, let's have a quick look at it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:35:36.230 --> 00:35:40.460
<v Speaker 1>You'll notice that I've written live nodes in two sizes.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:40.460 --> 00:35:44.870
<v Speaker 1>That's because these are super fertile live nodes.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:35:44.870 --> 00:35:47.930
<v Speaker 1>They don't just expand the fruits, they do something more

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:47.930 --> 00:35:48.830
<v Speaker 1>complicated.

NOTE CONF {"raw":[100]}

00:35:50.510 --> 00:35:55.430
<v Speaker 1>So when I take money off this one, I'm going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:55.430 --> 00:35:57.350
<v Speaker 1>to pluck a live node which is going to kill

NOTE CONF {"raw":[100,98,100,100,100,100,100,100,100,100]}

00:35:57.350 --> 00:35:57.650
<v Speaker 1>a node.

NOTE CONF {"raw":[100,100]}

00:35:57.650 --> 00:36:02.750
<v Speaker 1>But on that day, not only did these nodes grow

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:02.750 --> 00:36:06.650
<v Speaker 1>new fruits and this node grew a new fruit, but

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:06.650 --> 00:36:09.860
<v Speaker 1>this node grew a whole new level of new fruits.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:10.190 --> 00:36:12.500
<v Speaker 1>So the tree actually expanded to that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:36:12.500 --> 00:36:14.000
<v Speaker 1>That was the original root.

NOTE CONF {"raw":[100,100,100,100,66]}

00:36:14.180 --> 00:36:17.270
<v Speaker 1>And just before it died, it managed to spout off

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,78,97]}

00:36:17.270 --> 00:36:20.510
<v Speaker 1>a new level of live nodes.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:36:22.520 --> 00:36:24.620
<v Speaker 1>These are now ordinary life nodes.

NOTE CONF {"raw":[100,100,75,100,81,100]}

00:36:25.160 --> 00:36:26.750
<v Speaker 1>And then what happens?

NOTE CONF {"raw":[100,100,100,100]}

00:36:26.750 --> 00:36:28.940
<v Speaker 1>Well, I'm going to pluck a thing from up here,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:28.940 --> 00:36:31.790
<v Speaker 1>but when I do that, everything else is ground going

NOTE CONF {"raw":[100,100,100,100,100,100,100,99,40,100]}

00:36:31.790 --> 00:36:32.060
<v Speaker 1>to grow.

NOTE CONF {"raw":[100,100]}

00:36:32.060 --> 00:36:33.380
<v Speaker 1>Lots and lots more.

NOTE CONF {"raw":[100,100,100,100]}

00:36:34.430 --> 00:36:36.770
<v Speaker 1>So you can see it might go on for quite

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:36.770 --> 00:36:37.370
<v Speaker 1>a long time.

NOTE CONF {"raw":[100,100,100]}

00:36:37.370 --> 00:36:39.140
<v Speaker 1>And my latex skills got a bit.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:36:39.140 --> 00:36:42.020
<v Speaker 1>I got just got bored with later seeing these diagrams.

NOTE CONF {"raw":[100,100,100,100,100,100,73,47,100,100]}

00:36:42.290 --> 00:36:46.790
<v Speaker 1>So then we come to the question of, well, we've

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:47.810 --> 00:36:50.360
<v Speaker 1>we've been led into thinking that g of for the

NOTE CONF {"raw":[100,100,100,88,100,100,91,100,93,100]}

00:36:50.360 --> 00:36:52.520
<v Speaker 1>number of days it takes for that tree to die

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:52.520 --> 00:36:54.440
<v Speaker 1>is not probably infinity.

NOTE CONF {"raw":[100,100,100,100]}

00:36:54.440 --> 00:36:55.970
<v Speaker 1>It's probably some large number.

NOTE CONF {"raw":[100,100,100,100,100]}

00:36:55.970 --> 00:36:57.770
<v Speaker 1>And somebody said a large number.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:36:58.070 --> 00:37:00.950
<v Speaker 1>Anybody want to guess what kind of large number it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:00.950 --> 00:37:01.670
<v Speaker 1>might be?

NOTE CONF {"raw":[100,100]}

00:37:03.890 --> 00:37:06.950
<v Speaker 1>A Google and who can remember what a googol is.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:08.870 --> 00:37:09.200
<v Speaker 1>Yeah.

NOTE CONF {"raw":[100]}

00:37:09.260 --> 00:37:10.310
<v Speaker 1>Ten to the 100.

NOTE CONF {"raw":[100,100,100,100]}

00:37:11.120 --> 00:37:15.110
<v Speaker 1>Anybody going to go for a Googleplex which is ten

NOTE CONF {"raw":[92,100,100,100,100,100,97,100,100,100]}

00:37:15.110 --> 00:37:16.280
<v Speaker 1>to the power of the Google.

NOTE CONF {"raw":[100,100,100,100,68,100]}

00:37:17.270 --> 00:37:20.570
<v Speaker 1>Well let's see, Google is actually a pretty good guess.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:20.990 --> 00:37:23.780
<v Speaker 1>Um, but I computed this number for you.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:37:24.440 --> 00:37:25.400
<v Speaker 1>So.

NOTE CONF {"raw":[100]}

00:37:27.770 --> 00:37:31.970
<v Speaker 1>That is not G of four.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:37:32.000 --> 00:37:34.730
<v Speaker 1>That's the first few digits of g of four.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:37:36.740 --> 00:37:38.480
<v Speaker 1>Now, I don't know how long you're willing to sit

NOTE CONF {"raw":[93,100,100,100,100,100,100,100,100,100]}

00:37:38.480 --> 00:37:41.150
<v Speaker 1>here, but I imagine you're not willing for me to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:41.150 --> 00:37:43.760
<v Speaker 1>skip through 135,000 slides.

NOTE CONF {"raw":[100,68,100,100]}

00:37:45.170 --> 00:37:47.060
<v Speaker 1>And all of those slides were computed.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:47.090 --> 00:37:51.320
<v Speaker 1>They were not typeset because LaTeX cannot typeset 135,000 slides.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:51.320 --> 00:37:53.090
<v Speaker 1>And yes, I did try just to see whether it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:53.090 --> 00:37:53.570
<v Speaker 1>could.

NOTE CONF {"raw":[100]}

00:37:54.680 --> 00:37:58.130
<v Speaker 1>Um, and those are the last few digits.

NOTE CONF {"raw":[100,100,100,50,100,100,100,100]}

00:37:59.270 --> 00:38:01.340
<v Speaker 1>Um, so no, actually ten to the Google was not

NOTE CONF {"raw":[92,100,100,100,100,100,100,100,100,100]}

00:38:01.340 --> 00:38:01.970
<v Speaker 1>a good guess.

NOTE CONF {"raw":[100,100,100]}

00:38:01.970 --> 00:38:03.590
<v Speaker 1>Why did I say, well, it depends on what you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:03.590 --> 00:38:05.960
<v Speaker 1>mean by big small and what's a good guess.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:38:05.960 --> 00:38:10.340
<v Speaker 1>So it's actually something around ten to the 121 million,

NOTE CONF {"raw":[100,100,100,100,100,100,100,90,100,100]}

00:38:10.970 --> 00:38:13.100
<v Speaker 1>which is a lot bigger than a Google, but a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:13.100 --> 00:38:15.050
<v Speaker 1>lot smaller than a Google Plex.

NOTE CONF {"raw":[100,100,100,99,36,36]}

00:38:15.050 --> 00:38:20.150
<v Speaker 1>So somewhere in between, um, that that's the exact value

NOTE CONF {"raw":[100,100,100,100,95,100,100,100,100,100]}

00:38:20.150 --> 00:38:21.590
<v Speaker 1>of G of four.

NOTE CONF {"raw":[100,100,100,97]}

00:38:23.750 --> 00:38:27.050
<v Speaker 1>Um, would you care to hazard a guess as to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:27.050 --> 00:38:28.370
<v Speaker 1>what G of five is?

NOTE CONF {"raw":[100,100,100,100,100]}

00:38:31.070 --> 00:38:32.930
<v Speaker 1>I mean, it's going to be a big number, right?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:32.930 --> 00:38:35.120
<v Speaker 1>So I'm going to have to write some quite large

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:35.120 --> 00:38:39.170
<v Speaker 1>power of tens, tower of tens to talk about it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:41.090 --> 00:38:45.200
<v Speaker 1>Um, I can tell you how how high this Tower

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:45.200 --> 00:38:46.520
<v Speaker 1>of exponents is.

NOTE CONF {"raw":[100,100,100]}

00:38:47.030 --> 00:38:49.430
<v Speaker 1>Unfortunately, in order to do so, I first have to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:49.430 --> 00:38:51.470
<v Speaker 1>write down another stack of tens.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:38:51.470 --> 00:38:53.900
<v Speaker 1>But I can tell you how high this tower of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:53.900 --> 00:38:56.930
<v Speaker 1>tens is, provided you let me write down another stack

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:56.930 --> 00:38:58.220
<v Speaker 1>of powers of tens.

NOTE CONF {"raw":[100,100,100,100]}

00:38:58.220 --> 00:39:00.110
<v Speaker 1>But I can tell you how high this one is.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:02.150 --> 00:39:08.180
<v Speaker 1>Okay, so this is by sort of any normal understanding,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:08.180 --> 00:39:13.090
<v Speaker 1>quite a big number, although mathematicians do work with much

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:13.090 --> 00:39:14.170
<v Speaker 1>larger numbers.

NOTE CONF {"raw":[100,100]}

00:39:16.300 --> 00:39:20.290
<v Speaker 1>Um, and you can go on, you can try to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:20.290 --> 00:39:21.580
<v Speaker 1>work out G of six.

NOTE CONF {"raw":[100,100,95,100,100]}

00:39:21.790 --> 00:39:23.500
<v Speaker 1>It gets quite tedious trying to do.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:39:23.500 --> 00:39:26.110
<v Speaker 1>This was all done with pen and paper after G

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:26.110 --> 00:39:26.680
<v Speaker 1>of four.

NOTE CONF {"raw":[100,100]}

00:39:27.610 --> 00:39:31.210
<v Speaker 1>Um, why does the function always terminate?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:39:31.210 --> 00:39:34.720
<v Speaker 1>Well, we've had the explanation during the questions and conversation

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:34.720 --> 00:39:40.450
<v Speaker 1>anyway, and essentially it's because this magic hereditary base B

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,64,84]}

00:39:40.480 --> 00:39:42.520
<v Speaker 1>why did I call it B it would actually be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,93]}

00:39:42.520 --> 00:39:44.110
<v Speaker 1>quite nice to call it Omega.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:39:44.890 --> 00:39:47.590
<v Speaker 1>Um, if I were to call it Omega, then four

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,91]}

00:39:47.590 --> 00:39:49.720
<v Speaker 1>is two to the power, two which I write as

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:49.720 --> 00:39:52.960
<v Speaker 1>omega to the omega, and then subtracting one from that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:52.960 --> 00:39:56.230
<v Speaker 1>basically means expanding out omega for the current value of

NOTE CONF {"raw":[100,100,100,100,72,100,100,100,100,100]}

00:39:56.230 --> 00:40:00.340
<v Speaker 1>the base as much as necessary, until I can actually

NOTE CONF {"raw":[100,92,100,100,100,100,100,100,100,100]}

00:40:00.340 --> 00:40:01.600
<v Speaker 1>do some subtraction.

NOTE CONF {"raw":[100,100,100]}

00:40:01.750 --> 00:40:04.660
<v Speaker 1>So here I've switched the base from 2 to 3,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:04.660 --> 00:40:06.610
<v Speaker 1>and now I have to subtract one from omega to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:06.610 --> 00:40:07.090
<v Speaker 1>the omega.

NOTE CONF {"raw":[100,100]}

00:40:07.090 --> 00:40:08.290
<v Speaker 1>I can't do that.

NOTE CONF {"raw":[100,100,100,100]}

00:40:08.290 --> 00:40:10.720
<v Speaker 1>So I say oh well Omega is three at the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:10.720 --> 00:40:11.110
<v Speaker 1>moment.

NOTE CONF {"raw":[100]}

00:40:11.110 --> 00:40:13.450
<v Speaker 1>So let's lets them make that omega cubed.

NOTE CONF {"raw":[100,86,81,100,100,100,100,100]}

00:40:14.440 --> 00:40:16.630
<v Speaker 1>I can't subtract one from omega cubed, so I just

NOTE CONF {"raw":[100,100,100,100,100,100,89,100,100,100]}

00:40:16.630 --> 00:40:19.060
<v Speaker 1>expand it to be omega squared plus omega squared plus

NOTE CONF {"raw":[100,100,100,97,100,100,100,100,100,100]}

00:40:19.060 --> 00:40:21.970
<v Speaker 1>omega squared and so on and so on and so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:21.970 --> 00:40:22.120
<v Speaker 1>on.

NOTE CONF {"raw":[100]}

00:40:22.120 --> 00:40:25.720
<v Speaker 1>And eventually I end up with omega squared plus omega

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:25.720 --> 00:40:28.570
<v Speaker 1>squared plus omega plus omega plus two as the result

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:28.570 --> 00:40:31.810
<v Speaker 1>of subtracting one from omega cubed.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:40:31.810 --> 00:40:35.200
<v Speaker 1>If I'm pretending that omega is three and now I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:35.200 --> 00:40:37.780
<v Speaker 1>stop pretending that omega is three, and then it becomes

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:37.780 --> 00:40:39.250
<v Speaker 1>four, five, six.

NOTE CONF {"raw":[100,100,100]}

00:40:40.450 --> 00:40:44.020
<v Speaker 1>And so whilst this number is getting bigger and bigger,

NOTE CONF {"raw":[100,100,95,100,100,100,100,100,100,100]}

00:40:44.650 --> 00:40:48.880
<v Speaker 1>this fictional ordinal here is getting smaller and smaller.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:40:49.180 --> 00:40:52.390
<v Speaker 1>And ultimately we hit the point where we've reduced to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:52.390 --> 00:40:55.600
<v Speaker 1>this to Omega and then expands to the current value

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:55.600 --> 00:40:58.120
<v Speaker 1>of the base, and then you're just subtracting one for

NOTE CONF {"raw":[100,100,98,100,100,100,100,100,100,100]}

00:40:58.120 --> 00:40:58.960
<v Speaker 1>the rest of it.

NOTE CONF {"raw":[100,100,100,100]}

00:40:58.960 --> 00:41:01.810
<v Speaker 1>So you spend half the time going up and half

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:01.810 --> 00:41:02.950
<v Speaker 1>the time going down.

NOTE CONF {"raw":[100,100,100,100]}

00:41:02.950 --> 00:41:03.970
<v Speaker 1>Roughly speaking.

NOTE CONF {"raw":[100,100]}

00:41:04.990 --> 00:41:05.470
<v Speaker 1>Exactly.

NOTE CONF {"raw":[100]}

00:41:05.470 --> 00:41:09.310
<v Speaker 1>Speaking this side note is something that only occurred to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:09.310 --> 00:41:11.920
<v Speaker 1>me last year and it still boggles me.

NOTE CONF {"raw":[100,100,100,100,89,100,100,100]}

00:41:11.920 --> 00:41:13.540
<v Speaker 1>So think about that.

NOTE CONF {"raw":[100,100,100,100]}

00:41:14.830 --> 00:41:18.850
<v Speaker 1>So the Goodstein function is something that clearly grows quite

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:18.850 --> 00:41:19.270
<v Speaker 1>fast.

NOTE CONF {"raw":[100]}

00:41:19.300 --> 00:41:20.920
<v Speaker 1>Year four is huge.

NOTE CONF {"raw":[100,100,100,100]}

00:41:21.040 --> 00:41:23.020
<v Speaker 1>Year five is incomprehensible.

NOTE CONF {"raw":[99,100,100,100]}

00:41:24.070 --> 00:41:27.250
<v Speaker 1>The Ackermann function grows quite fast as well.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:41:27.880 --> 00:41:30.790
<v Speaker 1>So this is what the Ackermann function looks like as

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:30.790 --> 00:41:32.560
<v Speaker 1>a table of x and y.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:41:33.580 --> 00:41:36.790
<v Speaker 1>Um, as the first argument gets bigger, the numbers get

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:41:36.790 --> 00:41:37.360
<v Speaker 1>bigger.

NOTE CONF {"raw":[100]}

00:41:37.390 --> 00:41:38.860
<v Speaker 1>Similarly with y.

NOTE CONF {"raw":[100,100,100]}

00:41:40.720 --> 00:41:44.440
<v Speaker 1>Once x hits four, then it starts starts getting big

NOTE CONF {"raw":[100,100,100,100,100,72,66,100,100,95]}

00:41:44.440 --> 00:41:46.540
<v Speaker 1>quite quickly as you.

NOTE CONF {"raw":[100,100,100,98]}

00:41:46.570 --> 00:41:49.330
<v Speaker 1>When x is four, basically you get a new level

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:49.330 --> 00:41:52.960
<v Speaker 1>of power of two every time you increase y.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:41:54.730 --> 00:41:57.160
<v Speaker 1>Um, so which is growing faster?

NOTE CONF {"raw":[100,100,100,100,80,100]}

00:41:57.160 --> 00:41:58.390
<v Speaker 1>Ackermann or Goodstein?

NOTE CONF {"raw":[100,100,100]}

00:42:05.710 --> 00:42:08.260
<v Speaker 1>So Ackermann is a two argument function.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:42:08.260 --> 00:42:10.570
<v Speaker 1>So let's turn it into a one argument function by

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:10.570 --> 00:42:12.460
<v Speaker 1>taking the diagonal like that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:42:12.730 --> 00:42:15.550
<v Speaker 1>Okay, so here's a table of the first few values

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:15.550 --> 00:42:17.920
<v Speaker 1>of these competing functions.

NOTE CONF {"raw":[100,100,100,100]}

00:42:18.790 --> 00:42:23.320
<v Speaker 1>And you can see that although Goodstein is going pretty

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,49,100]}

00:42:23.320 --> 00:42:26.500
<v Speaker 1>fast, Ackermann is a long way ahead of it at

NOTE CONF {"raw":[100,82,100,100,100,100,100,100,100,100]}

00:42:26.500 --> 00:42:27.130
<v Speaker 1>four.

NOTE CONF {"raw":[98]}

00:42:29.350 --> 00:42:32.650
<v Speaker 1>Um, now to think about what happens any further, I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:32.650 --> 00:42:35.770
<v Speaker 1>have to go back to building big numbers again.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:42:37.630 --> 00:42:41.620
<v Speaker 1>Exponentiation is iterated multiplication.

NOTE CONF {"raw":[100,100,100,100]}

00:42:41.620 --> 00:42:43.840
<v Speaker 1>Multiplication is iterated addition.

NOTE CONF {"raw":[100,100,100,95]}

00:42:45.670 --> 00:42:47.950
<v Speaker 1>We can iterate exponentiation again.

NOTE CONF {"raw":[100,100,100,100,100]}

00:42:47.950 --> 00:42:49.540
<v Speaker 1>We did these tiles of ten.

NOTE CONF {"raw":[100,100,100,97,100,100]}

00:42:49.540 --> 00:42:52.030
<v Speaker 1>Why don't we have a notation for talking about towers

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:52.030 --> 00:42:53.830
<v Speaker 1>of 10 or 2?

NOTE CONF {"raw":[100,100,100,100]}

00:42:53.830 --> 00:42:55.660
<v Speaker 1>Because we're computer scientists.

NOTE CONF {"raw":[100,100,100,100]}

00:42:56.380 --> 00:43:01.390
<v Speaker 1>Um, it's called titration because it's the fourth level of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:01.390 --> 00:43:06.520
<v Speaker 1>exponential iterating stuff, sometimes written like that, sometimes written like

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:06.520 --> 00:43:08.050
<v Speaker 1>that, and lots of other notations.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:43:08.080 --> 00:43:11.110
<v Speaker 1>It's not useful enough to have a completely standard notation.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:12.790 --> 00:43:15.070
<v Speaker 1>And now I'm going to introduce a handy little bit

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:15.070 --> 00:43:17.980
<v Speaker 1>of terminology which will let me avoid writing.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:43:17.980 --> 00:43:20.530
<v Speaker 1>Trying to write down extremely big numbers.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:43:21.400 --> 00:43:24.820
<v Speaker 1>Let's say that a number is small if it's small

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,97,100]}

00:43:24.820 --> 00:43:28.510
<v Speaker 1>in some humanly comprehensible sense, so I don't really care

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:28.510 --> 00:43:29.590
<v Speaker 1>what you mean by small.

NOTE CONF {"raw":[100,100,100,100,100]}

00:43:29.590 --> 00:43:32.230
<v Speaker 1>Maybe you mean five, maybe you mean a few hundred.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:32.230 --> 00:43:34.040
<v Speaker 1>Maybe you have a big brain and you mean a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:34.040 --> 00:43:34.240
<v Speaker 1>million.

NOTE CONF {"raw":[100]}

00:43:34.240 --> 00:43:35.050
<v Speaker 1>It doesn't matter.

NOTE CONF {"raw":[100,100,100]}

00:43:36.820 --> 00:43:39.140
<v Speaker 1>And I'm going to call it big at level 1

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:39.140 --> 00:43:42.700
<v Speaker 1>or 1 big if it's two to the power of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:42.700 --> 00:43:43.990
<v Speaker 1>something small.

NOTE CONF {"raw":[100,100]}

00:43:44.470 --> 00:43:44.950
<v Speaker 1>Okay.

NOTE CONF {"raw":[100]}

00:43:45.370 --> 00:43:48.580
<v Speaker 1>And I'm going to call it two big if it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:48.580 --> 00:43:51.760
<v Speaker 1>is two titrated to the power of something small.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:51.760 --> 00:43:52.990
<v Speaker 1>So that means express.

NOTE CONF {"raw":[100,100,100,100]}

00:43:52.990 --> 00:43:55.870
<v Speaker 1>It's expressible as a stack of powers of two.

NOTE CONF {"raw":[93,100,100,100,100,100,100,100,100]}

00:43:55.870 --> 00:43:58.510
<v Speaker 1>But the height of the stack is small for whatever

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:58.510 --> 00:44:00.280
<v Speaker 1>your favourite value of small is.

NOTE CONF {"raw":[100,80,100,100,100,100]}

00:44:02.050 --> 00:44:03.640
<v Speaker 1>And so on and so on.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:44:03.640 --> 00:44:08.890
<v Speaker 1>So three big is something that is two penetrated to

NOTE CONF {"raw":[100,100,100,100,100,100,100,57,92,100]}

00:44:08.890 --> 00:44:09.940
<v Speaker 1>the towers small.

NOTE CONF {"raw":[100,47,100]}

00:44:09.940 --> 00:44:13.780
<v Speaker 1>So you have a small number of iterated stacks of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:14.050 --> 00:44:16.030
<v Speaker 1>like I was doing for G of five.

NOTE CONF {"raw":[100,100,100,100,70,100,99,100]}

00:44:16.360 --> 00:44:19.540
<v Speaker 1>So if we extend the comparison table, it now looks

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:19.540 --> 00:44:23.140
<v Speaker 1>like this G of four was a two big function.

NOTE CONF {"raw":[100,100,100,100,100,100,100,78,100,100]}

00:44:23.140 --> 00:44:26.200
<v Speaker 1>It was a power of two's that was small in

NOTE CONF {"raw":[100,100,100,100,100,72,100,100,100,100]}

00:44:26.200 --> 00:44:26.800
<v Speaker 1>height.

NOTE CONF {"raw":[100]}

00:44:27.190 --> 00:44:29.800
<v Speaker 1>G of five was a three big thing.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:44:29.800 --> 00:44:34.480
<v Speaker 1>We had to have an extended expanded row of brackets

NOTE CONF {"raw":[100,100,84,100,100,95,100,100,100,100]}

00:44:34.480 --> 00:44:39.580
<v Speaker 1>describing towers of two, and it turns out the same

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:39.580 --> 00:44:42.130
<v Speaker 1>happens with Ackermann at level five.

NOTE CONF {"raw":[100,100,83,100,100,100]}

00:44:42.130 --> 00:44:44.740
<v Speaker 1>When X is five, you also get something that is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:44.740 --> 00:44:45.820
<v Speaker 1>roughly three big.

NOTE CONF {"raw":[100,100,100]}

00:44:47.470 --> 00:44:49.960
<v Speaker 1>Um, but this is where Goodstein starts pulling ahead.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:44:49.960 --> 00:44:50.980
<v Speaker 1>So you are right.

NOTE CONF {"raw":[100,100,100,100]}

00:44:51.520 --> 00:44:54.790
<v Speaker 1>So at six it pulls ahead.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:44:54.790 --> 00:44:56.560
<v Speaker 1>We now have four big numbers.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:44:56.560 --> 00:45:01.510
<v Speaker 1>But Goodstein has gone to level five of bigness seven

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:01.510 --> 00:45:03.160
<v Speaker 1>five big and seven big.

NOTE CONF {"raw":[100,100,100,100,100]}

00:45:03.880 --> 00:45:07.260
<v Speaker 1>Um and this is where things get a little bit

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:07.260 --> 00:45:09.750
<v Speaker 1>absurd, because at level eight, the good steam function is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:09.750 --> 00:45:11.160
<v Speaker 1>now G of four big.

NOTE CONF {"raw":[100,100,100,95,100]}

00:45:15.150 --> 00:45:17.970
<v Speaker 1>Um, which is kind of silly.

NOTE CONF {"raw":[99,100,100,100,100,100]}

00:45:18.450 --> 00:45:19.440
<v Speaker 0>What does that look like?

NOTE CONF {"raw":[100,100,100,100,100]}

00:45:19.740 --> 00:45:20.280
<v Speaker 1>Sorry.

NOTE CONF {"raw":[100]}

00:45:22.710 --> 00:45:24.300
<v Speaker 1>I mean, one can't write it down, right?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:45:24.300 --> 00:45:28.080
<v Speaker 1>You can only write this in mathematical notation.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:45:28.680 --> 00:45:31.350
<v Speaker 1>Um, I mean, I'll well, actually, I'll.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:45:31.740 --> 00:45:33.300
<v Speaker 1>And you can keep doing this forever.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:45:33.300 --> 00:45:38.040
<v Speaker 1>So again, some more informal terminology.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:45:38.670 --> 00:45:41.310
<v Speaker 1>I can call a number huge at level one if

NOTE CONF {"raw":[100,100,100,100,100,98,98,100,100,100]}

00:45:41.310 --> 00:45:44.130
<v Speaker 1>it's big at level one big and I can call

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:44.130 --> 00:45:46.710
<v Speaker 1>it two huge if it's big at level one huge

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:46.710 --> 00:45:48.360
<v Speaker 1>and I can so on and I can call it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:48.360 --> 00:45:50.850
<v Speaker 1>one humongous if it's one huge huge.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:45:52.110 --> 00:45:54.630
<v Speaker 1>Now these of course are not real definitions, but they

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:54.630 --> 00:45:57.870
<v Speaker 1>are in fact just an informal version of very real

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:57.870 --> 00:46:03.030
<v Speaker 1>definitions in large cardinal theory, which is something about genuine,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:03.030 --> 00:46:06.690
<v Speaker 1>seriously big infinities to which all these things are tiny

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:08.130 --> 00:46:09.420
<v Speaker 1>and you just keep going.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:09.810 --> 00:46:12.540
<v Speaker 1>And when this happens, depends on whether you're a set

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:12.540 --> 00:46:13.590
<v Speaker 1>theorist or not.

NOTE CONF {"raw":[100,100,100]}

00:46:13.590 --> 00:46:15.960
<v Speaker 1>If you are a set theorist, happens at the Koonin

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,94]}

00:46:15.960 --> 00:46:18.330
<v Speaker 1>inconsistency when your universe explodes.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:20.160 --> 00:46:23.550
<v Speaker 1>Um, I said do it to infinity.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:46:23.550 --> 00:46:26.100
<v Speaker 1>But of course we're actually doing it beyond infinity.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:46:27.270 --> 00:46:32.280
<v Speaker 1>Um, we can keep doing this exponentiation trick so I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:32.280 --> 00:46:34.710
<v Speaker 1>can go Omega omega to the omega omega to the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:34.710 --> 00:46:35.790
<v Speaker 1>omega to the omega.

NOTE CONF {"raw":[100,100,100,100]}

00:46:35.790 --> 00:46:38.280
<v Speaker 1>Then I can define this thing called, which we call

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:38.280 --> 00:46:41.580
<v Speaker 1>epsilon zero, which is omega titrated to the omega.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:46:41.580 --> 00:46:45.180
<v Speaker 1>So it's an omega high stack of powers of omega.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:45.390 --> 00:46:46.920
<v Speaker 1>It's actually a useful number.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:47.520 --> 00:46:50.250
<v Speaker 1>Um, it's an interesting fact that if you take this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:50.250 --> 00:46:53.760
<v Speaker 1>thing and do omega to the epsilon nought, then you

NOTE CONF {"raw":[100,100,100,100,94,100,100,100,100,100]}

00:46:53.760 --> 00:46:57.000
<v Speaker 1>get the same thing again, just as if we took

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:57.000 --> 00:47:00.510
<v Speaker 1>omega of the Omega and multiplied it by Omega, it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:00.510 --> 00:47:02.070
<v Speaker 1>was still Omega to the Omega.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:47:02.550 --> 00:47:07.080
<v Speaker 1>So what that means is that epsilon zero is what

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:07.080 --> 00:47:09.420
<v Speaker 1>we call the fixed point of the function.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:47:09.540 --> 00:47:13.020
<v Speaker 1>The omega exponential exponentiation function.

NOTE CONF {"raw":[100,100,100,100,100]}

00:47:14.160 --> 00:47:16.530
<v Speaker 1>And this is this is the recipe for going on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:16.530 --> 00:47:17.220
<v Speaker 1>forever.

NOTE CONF {"raw":[100]}

00:47:17.460 --> 00:47:19.800
<v Speaker 1>So now you can say well if there's one fixed

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:19.800 --> 00:47:21.540
<v Speaker 1>point there's probably a second fixed point.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:47:21.540 --> 00:47:23.730
<v Speaker 1>And we can actually compute that by adding one to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:23.730 --> 00:47:27.000
<v Speaker 1>the first and then exponentiating it forever and ever.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:47:27.690 --> 00:47:29.160
<v Speaker 1>You can keep on going.

NOTE CONF {"raw":[100,100,100,100,100]}

00:47:30.150 --> 00:47:32.850
<v Speaker 1>Then you can talk about epsilon sub epsilon sub epsilon,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:32.850 --> 00:47:34.770
<v Speaker 1>which is the first fixed point of the function that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:34.770 --> 00:47:36.450
<v Speaker 1>counts the epsilon numbers.

NOTE CONF {"raw":[100,100,100,100]}

00:47:37.140 --> 00:47:39.750
<v Speaker 1>And you just well keep going.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:47:40.500 --> 00:47:44.280
<v Speaker 1>So you're now counting functions and then you're computing fixed

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:44.280 --> 00:47:47.100
<v Speaker 1>points of functions and counting the fixed points and counting

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:47.100 --> 00:47:49.620
<v Speaker 1>the fixed points of the functions that count them, and

NOTE CONF {"raw":[100,100,100,89,100,100,100,100,100,100]}

00:47:49.620 --> 00:47:50.190
<v Speaker 1>so on.

NOTE CONF {"raw":[100,100]}

00:47:50.430 --> 00:47:53.340
<v Speaker 1>This gives you a thing called the Veblen hierarchy.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:47:53.520 --> 00:47:57.180
<v Speaker 1>And the n process of that is some enormous ordinal

NOTE CONF {"raw":[100,100,61,100,100,100,100,100,100,100]}

00:47:57.180 --> 00:48:00.120
<v Speaker 1>which is actually used inside in proof theory.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:48:00.330 --> 00:48:02.010
<v Speaker 1>It's called gamma nought.

NOTE CONF {"raw":[100,100,100,100]}

00:48:03.240 --> 00:48:05.790
<v Speaker 1>After that, it starts getting complicated and it is way

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:05.790 --> 00:48:07.440
<v Speaker 1>beyond my level of understanding.

NOTE CONF {"raw":[100,100,100,100,100]}

00:48:07.440 --> 00:48:11.520
<v Speaker 1>So my understanding stops here and I don't have that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:11.520 --> 00:48:12.780
<v Speaker 1>understanding all the time.

NOTE CONF {"raw":[100,100,100,100]}

00:48:12.780 --> 00:48:14.160
<v Speaker 1>Only when I revise it.

NOTE CONF {"raw":[100,100,100,100,100]}

00:48:16.200 --> 00:48:19.860
<v Speaker 1>Um, is this all just a game for mathematicians and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:19.860 --> 00:48:20.670
<v Speaker 1>other children?

NOTE CONF {"raw":[100,100]}

00:48:20.670 --> 00:48:22.050
<v Speaker 1>Does it have any use?

NOTE CONF {"raw":[100,100,100,100,100]}

00:48:22.080 --> 00:48:23.490
<v Speaker 1>Well, actually it does.

NOTE CONF {"raw":[100,100,100,100]}

00:48:24.090 --> 00:48:28.950
<v Speaker 1>So the working theoretical computer scientists.

NOTE CONF {"raw":[100,100,100,100,100,60]}

00:48:28.950 --> 00:48:32.130
<v Speaker 1>By which I mean people like me, we use ordinals

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:32.130 --> 00:48:35.490
<v Speaker 1>to do inductions to prove that some function terminates, like

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:35.490 --> 00:48:37.920
<v Speaker 1>the Ackermann function or some function that we actually write

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:37.920 --> 00:48:38.250
<v Speaker 1>down.

NOTE CONF {"raw":[100]}

00:48:38.250 --> 00:48:40.620
<v Speaker 1>I have had to prove that a function terminates.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:48:41.790 --> 00:48:45.000
<v Speaker 1>Generally speaking, we don't need big ordinals to do this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:45.000 --> 00:48:45.840
<v Speaker 1>up to omega.

NOTE CONF {"raw":[100,100,100]}

00:48:45.840 --> 00:48:47.910
<v Speaker 1>To the omega is as far as one tends to

NOTE CONF {"raw":[100,100,89,82,100,100,100,100,100,100]}

00:48:47.910 --> 00:48:49.920
<v Speaker 1>go in the kind of functions that we write in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:49.920 --> 00:48:50.940
<v Speaker 1>everyday life.

NOTE CONF {"raw":[100,100]}

00:48:51.450 --> 00:48:55.890
<v Speaker 1>But it turns out that proof theorists and proof theorists

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:55.890 --> 00:48:58.470
<v Speaker 1>are people who work on things like the sequent calculus

NOTE CONF {"raw":[93,100,100,100,100,100,100,100,69,100]}

00:48:58.470 --> 00:49:00.900
<v Speaker 1>and the basic theory of that, and a lot of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:00.900 --> 00:49:03.720
<v Speaker 1>them are in computer science departments, because there's more money

NOTE CONF {"raw":[100,65,100,100,100,100,100,100,100,100]}

00:49:03.720 --> 00:49:06.660
<v Speaker 1>in computer science departments than there is in math departments.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,78,100]}

00:49:06.660 --> 00:49:09.480
<v Speaker 1>And computer scientists have a more favourable view of logic

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:09.480 --> 00:49:11.070
<v Speaker 1>than other mathematicians do.

NOTE CONF {"raw":[100,100,100,100]}

00:49:11.880 --> 00:49:16.410
<v Speaker 1>Um, they need much bigger ordinals, because it turns out

NOTE CONF {"raw":[95,100,100,100,100,100,100,100,100,100]}

00:49:16.740 --> 00:49:20.610
<v Speaker 1>that in a remarkably beautiful way that if you have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:20.610 --> 00:49:22.950
<v Speaker 1>a proof, a system of proof, you want to know

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:22.950 --> 00:49:24.540
<v Speaker 1>how much can I prove with it?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:49:24.990 --> 00:49:27.900
<v Speaker 1>The perfect proof system would be able to prove every

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:27.900 --> 00:49:29.580
<v Speaker 1>true mathematical theorem.

NOTE CONF {"raw":[100,100,100]}

00:49:29.700 --> 00:49:33.690
<v Speaker 1>We know that's impossible, but you can take your favourite

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,96]}

00:49:33.690 --> 00:49:35.760
<v Speaker 1>theory and ask how much can it prove?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:49:35.820 --> 00:49:38.370
<v Speaker 1>And it turns out that these ordinals give you a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:38.370 --> 00:49:41.430
<v Speaker 1>very precise and nice measure of how much a theory

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:41.430 --> 00:49:42.330
<v Speaker 1>can prove.

NOTE CONF {"raw":[100,100]}

00:49:43.950 --> 00:49:46.320
<v Speaker 1>Um, so if you've ever come across a thing called

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:49:46.320 --> 00:49:50.880
<v Speaker 1>piano arithmetic, it's not actually strong enough to prove that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:50.880 --> 00:49:53.100
<v Speaker 1>the Goodstein function always terminates.

NOTE CONF {"raw":[100,73,100,100,100]}

00:49:54.330 --> 00:49:56.190
<v Speaker 1>Why do we care about proof theory?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:49:56.220 --> 00:49:59.640
<v Speaker 1>Well, we do formal verification of systems.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:50:00.110 --> 00:50:03.650
<v Speaker 1>We do that by building computer tools that work in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:03.650 --> 00:50:06.260
<v Speaker 1>a proof theory, and do the proofs for us to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:06.260 --> 00:50:07.730
<v Speaker 1>make sure that they're correct.

NOTE CONF {"raw":[100,100,100,96,98]}

00:50:07.880 --> 00:50:10.880
<v Speaker 1>And it's quite nice to know what the strength of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:10.880 --> 00:50:12.980
<v Speaker 1>the system we're working in is.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:50:12.980 --> 00:50:15.080
<v Speaker 1>And it's also quite nice to know how long it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:15.080 --> 00:50:16.610
<v Speaker 1>might take to prove something.

NOTE CONF {"raw":[100,100,100,100,100]}

00:50:16.610 --> 00:50:19.760
<v Speaker 1>And sometimes the fact that a proof has a large

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:19.760 --> 00:50:23.240
<v Speaker 1>ordinal associated with it also means that the proofs can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:23.240 --> 00:50:25.730
<v Speaker 1>get very long, in the same way that the Goodstein

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:25.730 --> 00:50:27.290
<v Speaker 1>function can get very big.

NOTE CONF {"raw":[100,100,100,100,100]}

00:50:27.380 --> 00:50:31.280
<v Speaker 1>So if you're unlucky, there are things that if you

NOTE CONF {"raw":[100,100,100,100,100,97,100,100,100,100]}

00:50:31.280 --> 00:50:33.080
<v Speaker 1>try to prove it, you might end up with a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,97]}

00:50:33.080 --> 00:50:33.440
<v Speaker 1>proof.

NOTE CONF {"raw":[100]}

00:50:33.440 --> 00:50:36.260
<v Speaker 1>In the sequent calculus that is expanding like the Goodstein

NOTE CONF {"raw":[100,100,48,100,100,100,100,100,100,100]}

00:50:36.260 --> 00:50:37.790
<v Speaker 1>function expands.

NOTE CONF {"raw":[100,100]}

00:50:37.940 --> 00:50:40.010
<v Speaker 1>And that would be bad news because we don't have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:40.010 --> 00:50:41.120
<v Speaker 1>computers that big.

NOTE CONF {"raw":[100,100,100]}

00:50:42.800 --> 00:50:45.620
<v Speaker 1>Um, okay, so for the first time in recorded history,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:45.620 --> 00:50:48.950
<v Speaker 1>I've finished in an hour exactly from when I started.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:49.070 --> 00:50:53.480
<v Speaker 1>So as a final comment, these things are all very

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:50:53.480 --> 00:50:54.200
<v Speaker 1>small.

NOTE CONF {"raw":[100]}

00:50:54.530 --> 00:50:56.900
<v Speaker 1>These are all countable infinities.

NOTE CONF {"raw":[100,100,100,100,100]}

00:50:56.900 --> 00:50:59.510
<v Speaker 1>They're all things that you can count natural numbers, whereas

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,92]}

00:50:59.510 --> 00:51:01.070
<v Speaker 1>if you do it in a funny order.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:51:01.190 --> 00:51:04.430
<v Speaker 1>So the actual Cantor in Revolution was about the real

NOTE CONF {"raw":[100,100,100,78,61,100,100,100,100,100]}

00:51:04.430 --> 00:51:06.890
<v Speaker 1>numbers, and I haven't gone there at all.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:51:07.160 --> 00:51:10.520
<v Speaker 1>That's for another talk given by somebody else in some

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:51:10.520 --> 00:51:11.630
<v Speaker 1>other place.

NOTE CONF {"raw":[100,100]}

00:51:12.260 --> 00:51:14.570
<v Speaker 1>So thank you for coming to the course.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:51:14.570 --> 00:51:17.630
<v Speaker 1>I've had fun for the last 11 weeks, I hope.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:51:17.780 --> 00:51:19.910
<v Speaker 1>Well, the fact that you're here means you probably have.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:51:19.910 --> 00:51:22.010
<v Speaker 1>I hope the people who aren't here have as well.

NOTE CONF {"raw":[100,100,97,100,100,100,100,100,100,100]}

00:51:22.550 --> 00:51:25.130
<v Speaker 1>Um, enjoy your lack of exams for this course.

NOTE CONF {"raw":[96,100,100,100,100,100,100,100,100]}

00:51:25.130 --> 00:51:27.290
<v Speaker 1>Good luck in the exams for your other course, and

NOTE CONF {"raw":[100,100,100,100,100,100,67,100,100,100]}

00:51:27.290 --> 00:51:29.370
<v Speaker 1>I will see you around over the next 3 to

NOTE CONF {"raw":[100,100,100,100,100,92,92,100,100,100]}

00:51:29.370 --> 00:51:30.410
<v Speaker 1>4 years.

NOTE CONF {"raw":[100,100]}

00:51:30.680 --> 00:51:32.150
<v Speaker 1>Somewhere, sometime.

NOTE CONF {"raw":[100,100]}

00:51:33.500 --> 00:51:34.130
<v Unknown>After you are.

NOTE CONF {"raw":[75,85,43]}
