WEBVTT

00:00:00.060 --> 00:00:02.370
<v Speaker 0>The biggest and coolest hackathon in Scotland.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:00:02.760 --> 00:00:05.610
<v Speaker 0>Um, you know, you get to see behind the scenes

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:05.610 --> 00:00:09.150
<v Speaker 0>in the Tech society of the University of Edinburgh.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:00:09.660 --> 00:00:12.240
<v Speaker 0>Um, and you know, that propels you forward.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:00:12.240 --> 00:00:15.210
<v Speaker 0>You can later become and run for president like me.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:15.420 --> 00:00:16.920
<v Speaker 0>Uh, you can join other committee roles.

NOTE CONF {"raw":[58,100,100,100,100,100,100]}

00:00:16.920 --> 00:00:21.540
<v Speaker 0>You can find research positions, network with, uh, lecturers, academics.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,89,100]}

00:00:21.540 --> 00:00:26.970
<v Speaker 0>So joining the committee propels your university career, just like

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:26.970 --> 00:00:27.870
<v Speaker 0>on a rocket ship.

NOTE CONF {"raw":[100,100,100,100]}

00:00:27.900 --> 00:00:29.220
<v Speaker 0>I really, really recommend it.

NOTE CONF {"raw":[100,100,100,100,100]}

00:00:29.220 --> 00:00:31.890
<v Speaker 0>So if you want to join our committee, all you

NOTE CONF {"raw":[100,100,100,100,100,100,100,95,100,100]}

00:00:31.890 --> 00:00:33.540
<v Speaker 0>have to do is give a one minute speech and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:33.540 --> 00:00:35.670
<v Speaker 0>optionally write a manifesto for 200 words.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:00:35.700 --> 00:00:37.830
<v Speaker 0>Scan that QR code that's going to go to the

NOTE CONF {"raw":[100,67,100,100,99,100,100,100,100,100]}

00:00:37.830 --> 00:00:39.870
<v Speaker 0>page for our AGM for our election.

NOTE CONF {"raw":[100,100,91,96,100,73,100]}

00:00:40.470 --> 00:00:41.310
<v Speaker 0>Um, yeah.

NOTE CONF {"raw":[100,100]}

00:00:41.310 --> 00:00:41.880
<v Speaker 0>That's it.

NOTE CONF {"raw":[100,100]}

00:00:44.430 --> 00:00:48.450
<v Speaker 0>Come along on October 23rd Informatics forum at 6 p.m..

NOTE CONF {"raw":[100,100,100,99,99,100,100,100,84,84]}

00:00:48.450 --> 00:00:49.530
<v Speaker 0>I hope to see you there.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:00:49.620 --> 00:00:50.370
<v Speaker 0>Thank you.

NOTE CONF {"raw":[100,100]}

00:01:37.140 --> 00:01:37.560
<v Speaker 1>Okay.

NOTE CONF {"raw":[100]}

00:01:37.560 --> 00:01:38.760
<v Speaker 1>Good afternoon everyone.

NOTE CONF {"raw":[100,100,100]}

00:01:39.750 --> 00:01:42.210
<v Speaker 1>Um, firstly, I have a small admin announcement.

NOTE CONF {"raw":[97,100,100,100,100,100,100,100]}

00:01:42.210 --> 00:01:45.150
<v Speaker 1>If you're in my tutorial group this afternoon.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:01:45.150 --> 00:01:48.390
<v Speaker 1>Could you come and see me here after the lecture?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:49.350 --> 00:01:52.170
<v Speaker 1>If you're here and if you're online, please read your

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:52.170 --> 00:01:52.710
<v Speaker 1>email.

NOTE CONF {"raw":[100]}

00:01:54.600 --> 00:02:00.490
<v Speaker 1>Um, so we have I spent some time talking about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:00.610 --> 00:02:02.890
<v Speaker 1>2500 year old logic.

NOTE CONF {"raw":[100,100,100,100]}

00:02:03.520 --> 00:02:09.700
<v Speaker 1>We're now going to talk about modern logic and the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:09.700 --> 00:02:12.310
<v Speaker 1>form of modern logic that we're going to talk about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:12.310 --> 00:02:17.260
<v Speaker 1>was developed early 20th century building on work from the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:17.260 --> 00:02:18.580
<v Speaker 1>19th century.

NOTE CONF {"raw":[100,100]}

00:02:20.110 --> 00:02:24.280
<v Speaker 1>So a couple of the characters involved from the earlier

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:24.280 --> 00:02:25.270
<v Speaker 1>side of this.

NOTE CONF {"raw":[100,100,100]}

00:02:26.050 --> 00:02:28.990
<v Speaker 1>This is George Boole, as in Boolean algebra.

NOTE CONF {"raw":[100,100,100,100,83,100,100,100]}

00:02:28.990 --> 00:02:31.150
<v Speaker 1>So you all know Boolean algebra by now.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:02:32.200 --> 00:02:37.390
<v Speaker 1>And this is Charles Pierce, who is an American who

NOTE CONF {"raw":[100,100,100,100,34,100,100,100,97,100]}

00:02:37.390 --> 00:02:40.960
<v Speaker 1>was an American logician and one of the great figures

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:40.960 --> 00:02:48.100
<v Speaker 1>in logic and semiotics from the 19th century and early

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,92,100]}

00:02:48.100 --> 00:02:49.300
<v Speaker 1>20th century.

NOTE CONF {"raw":[100,100]}

00:02:50.440 --> 00:02:53.530
<v Speaker 1>I have an acquaintance who is a fanatical about purse,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,88]}

00:02:53.530 --> 00:02:56.440
<v Speaker 1>so my Facebook feed is full of stuff about purse

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,85]}

00:02:56.440 --> 00:02:57.100
<v Speaker 1>every day.

NOTE CONF {"raw":[99,99]}

00:02:57.100 --> 00:02:58.660
<v Speaker 1>And has been for three years.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:03:00.310 --> 00:03:04.330
<v Speaker 1>So I want to start by summarising what we've done

NOTE CONF {"raw":[100,100,100,100,100,100,95,100,100,100]}

00:03:04.330 --> 00:03:09.370
<v Speaker 1>so far, and at this point, please ask any clarifying

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:09.370 --> 00:03:13.240
<v Speaker 1>questions from what we've done in the previous three weeks.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:15.190 --> 00:03:21.370
<v Speaker 1>So we introduced propositional logic with true and false propositions.

NOTE CONF {"raw":[100,100,79,100,100,100,100,100,100,100]}

00:03:22.150 --> 00:03:26.980
<v Speaker 1>And we introduced the Boolean connectives and which I called

NOTE CONF {"raw":[100,100,95,100,100,100,100,100,100,100]}

00:03:26.980 --> 00:03:34.060
<v Speaker 1>and or not and implies or if then we then

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:34.060 --> 00:03:38.890
<v Speaker 1>mentioned predicate logic where we talk about objects in a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:38.890 --> 00:03:39.820
<v Speaker 1>universe.

NOTE CONF {"raw":[100]}

00:03:39.880 --> 00:03:42.280
<v Speaker 1>So we have a universe big X and we talk

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:42.280 --> 00:03:45.520
<v Speaker 1>about some object little X inside the universe.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:03:45.940 --> 00:03:50.590
<v Speaker 1>And a predicate applies to an object.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:03:50.590 --> 00:03:53.380
<v Speaker 1>So this gives us a boolean true or false value.

NOTE CONF {"raw":[100,100,100,100,100,100,100,51,98,100]}

00:03:53.380 --> 00:03:58.700
<v Speaker 1>If a is true of object x And I introduced

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:58.700 --> 00:04:00.830
<v Speaker 1>mainly for the purpose of saying we weren't going to

NOTE CONF {"raw":[100,100,100,100,84,100,100,100,100,100]}

00:04:00.830 --> 00:04:01.850
<v Speaker 1>talk about them yet.

NOTE CONF {"raw":[100,100,100,100]}

00:04:02.120 --> 00:04:07.250
<v Speaker 1>The universal and existential quantifiers, which is what we use

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:07.250 --> 00:04:08.540
<v Speaker 1>in modern logic.

NOTE CONF {"raw":[100,100,100]}

00:04:09.110 --> 00:04:15.110
<v Speaker 1>And instead of talking about those, we introduced a modern

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:15.110 --> 00:04:19.489
<v Speaker 1>version of Aristotle's categorical propositions.

NOTE CONF {"raw":[100,100,100,100,100]}

00:04:20.690 --> 00:04:23.180
<v Speaker 1>So we have sequence of the form.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:04:23.390 --> 00:04:26.330
<v Speaker 1>Some predicate entails some other predicate.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:04:26.570 --> 00:04:29.630
<v Speaker 1>And these are statements about all the objects in a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,92]}

00:04:29.630 --> 00:04:30.230
<v Speaker 1>universe.

NOTE CONF {"raw":[100]}

00:04:30.230 --> 00:04:34.190
<v Speaker 1>So there's an implicit universal quantification for every x in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:34.190 --> 00:04:34.910
<v Speaker 1>the universe.

NOTE CONF {"raw":[100,100]}

00:04:34.940 --> 00:04:37.040
<v Speaker 1>A of x implies b of x.

NOTE CONF {"raw":[100,100,100,100,98,100,100]}

00:04:38.870 --> 00:04:44.000
<v Speaker 1>And as I said, that gives us Aristotle's four categorical

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:44.000 --> 00:04:45.080
<v Speaker 1>propositions.

NOTE CONF {"raw":[100]}

00:04:45.170 --> 00:04:49.340
<v Speaker 1>Every a is b, no a is B, some a

NOTE CONF {"raw":[100,100,100,100,66,100,100,100,100,96]}

00:04:49.340 --> 00:04:51.230
<v Speaker 1>is B, some a is not b.

NOTE CONF {"raw":[96,100,100,100,100,100,100]}

00:04:52.820 --> 00:04:54.620
<v Speaker 1>And we went through that and you did lots of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:54.620 --> 00:04:58.010
<v Speaker 1>exercises with Venn diagrams, and you did a little bit

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:58.010 --> 00:05:02.210
<v Speaker 1>of work on proving stuff in the tutorial exercise that

NOTE CONF {"raw":[100,100,100,84,100,100,100,100,100,100]}

00:05:02.210 --> 00:05:03.830
<v Speaker 1>you've just submitted.

NOTE CONF {"raw":[100,100,100]}

00:05:05.330 --> 00:05:09.110
<v Speaker 1>And to do that, we used rules that let us

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:09.890 --> 00:05:12.890
<v Speaker 1>derive new sequence from old ones.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:13.490 --> 00:05:19.160
<v Speaker 1>We started with our fundamental syllogism, Barbara, which we take

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:19.160 --> 00:05:20.930
<v Speaker 1>to be self-evidently true.

NOTE CONF {"raw":[100,100,100,100]}

00:05:21.200 --> 00:05:22.310
<v Speaker 1>We had double negation.

NOTE CONF {"raw":[100,100,100,100]}

00:05:22.310 --> 00:05:24.500
<v Speaker 1>We had contra position in a sequence.

NOTE CONF {"raw":[100,100,98,100,100,100,62]}

00:05:24.710 --> 00:05:27.410
<v Speaker 1>And remember contra position is negate and flip.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:05:27.590 --> 00:05:31.130
<v Speaker 1>And we had contra position in a rule where we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:31.130 --> 00:05:34.040
<v Speaker 1>could take one of the premises and negate and flip

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:34.040 --> 00:05:35.510
<v Speaker 1>it with the conclusion.

NOTE CONF {"raw":[100,100,100,100]}

00:05:37.190 --> 00:05:41.420
<v Speaker 1>And that gave us basically a view in modern logical

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:41.420 --> 00:05:45.140
<v Speaker 1>notation of Aristotle's syllogisms.

NOTE CONF {"raw":[100,100,100,100]}

00:05:45.140 --> 00:05:48.410
<v Speaker 1>And moreover, we did them slightly better than Aristotle, because

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:48.410 --> 00:05:51.950
<v Speaker 1>we understand them better than he did, although his understanding

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:51.950 --> 00:05:53.630
<v Speaker 1>was remarkable for the time.

NOTE CONF {"raw":[100,100,100,100,100]}

00:05:54.060 --> 00:05:58.380
<v Speaker 1>So are there any questions or comments at all hanging

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:58.380 --> 00:06:00.690
<v Speaker 1>over from the last couple of weeks of what we've

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:00.690 --> 00:06:02.190
<v Speaker 1>been doing before we go on?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:06:06.690 --> 00:06:10.110
<v Speaker 1>Now, if you've all done the tutorials, so hopefully everything

NOTE CONF {"raw":[100,100,99,100,100,100,100,100,100,100]}

00:06:10.110 --> 00:06:11.640
<v Speaker 1>is reasonably happy.

NOTE CONF {"raw":[100,100,100]}

00:06:13.500 --> 00:06:16.770
<v Speaker 1>So what I want to do now is take the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:16.770 --> 00:06:21.030
<v Speaker 1>notion of sequent and enrich it a bit.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:06:21.300 --> 00:06:24.900
<v Speaker 1>So we've dealt with sequence that were specifically designed to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:24.900 --> 00:06:26.790
<v Speaker 1>deal with Aristotle's things.

NOTE CONF {"raw":[100,100,100,100]}

00:06:27.840 --> 00:06:31.080
<v Speaker 1>Now we're going to think about what else we could

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:31.080 --> 00:06:33.420
<v Speaker 1>say using the sequent notation.

NOTE CONF {"raw":[100,100,100,79,100]}

00:06:35.250 --> 00:06:41.550
<v Speaker 1>So I've introduced not and and or as operations on

NOTE CONF {"raw":[100,100,100,100,100,86,100,100,100,100]}

00:06:41.550 --> 00:06:43.350
<v Speaker 1>two propositional things.

NOTE CONF {"raw":[100,100,100]}

00:06:43.590 --> 00:06:45.930
<v Speaker 1>They take two two values and give you back a

NOTE CONF {"raw":[100,100,100,86,100,100,100,100,100,100]}

00:06:45.930 --> 00:06:46.860
<v Speaker 1>truth value.

NOTE CONF {"raw":[95,100]}

00:06:48.270 --> 00:06:51.510
<v Speaker 1>There's a natural thing you can do, which is to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:51.510 --> 00:06:56.010
<v Speaker 1>say that if I have a predicate, then I can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:56.010 --> 00:06:58.950
<v Speaker 1>do a boolean operation on a predicate.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:06:59.160 --> 00:07:03.270
<v Speaker 1>For example, you've just done things that talk about blue

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:03.270 --> 00:07:04.860
<v Speaker 1>amber squares.

NOTE CONF {"raw":[100,100]}

00:07:05.370 --> 00:07:09.840
<v Speaker 1>So I can think about the single predicate is blue

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:09.840 --> 00:07:13.650
<v Speaker 1>and is amber, which is a kind of obvious compound

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:13.650 --> 00:07:15.750
<v Speaker 1>predicate which I can apply to any object.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:07:15.750 --> 00:07:19.950
<v Speaker 1>And it's true if the thing is amber and if

NOTE CONF {"raw":[100,96,100,100,100,100,100,100,100,100]}

00:07:19.950 --> 00:07:20.820
<v Speaker 1>it's blue.

NOTE CONF {"raw":[100,100]}

00:07:21.240 --> 00:07:26.580
<v Speaker 1>So notionally speaking, this looks like many things, useful things.

NOTE CONF {"raw":[100,92,100,100,100,100,100,100,100,100]}

00:07:26.580 --> 00:07:29.460
<v Speaker 1>In mathematics it looks like a bit of notational trickery.

NOTE CONF {"raw":[100,100,100,100,100,99,100,100,100,100]}

00:07:30.810 --> 00:07:33.420
<v Speaker 1>This thing here, these are two predicates A and b.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:33.420 --> 00:07:37.320
<v Speaker 1>And this is the conjunction the predicate a and b.

NOTE CONF {"raw":[100,100,100,89,100,100,100,100,100,100]}

00:07:37.800 --> 00:07:40.170
<v Speaker 1>How do I define the meaning of that?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:07:40.380 --> 00:07:43.980
<v Speaker 1>Well, I simply say that the meaning of a and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:43.980 --> 00:07:48.840
<v Speaker 1>b applied to x is a apply to x and

NOTE CONF {"raw":[100,100,100,100,100,100,93,100,100,100]}

00:07:48.870 --> 00:07:50.340
<v Speaker 1>be applied to x.

NOTE CONF {"raw":[100,100,100,100]}

00:07:51.520 --> 00:07:55.630
<v Speaker 1>So completely unsurprising, which is how all good mathematical definitions

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,86]}

00:07:55.630 --> 00:07:56.380
<v Speaker 1>should be.

NOTE CONF {"raw":[100,100]}

00:07:57.580 --> 00:08:01.150
<v Speaker 1>And I can do the same with or A or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:01.150 --> 00:08:06.940
<v Speaker 1>B is a single compound predicate, is square, or is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:06.940 --> 00:08:07.630
<v Speaker 1>a disc.

NOTE CONF {"raw":[100,60]}

00:08:08.290 --> 00:08:10.690
<v Speaker 1>And if I apply that to an object x, I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:10.690 --> 00:08:14.320
<v Speaker 1>get the or of a of x, p of x

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:14.320 --> 00:08:17.710
<v Speaker 1>is square of x, or is disc of x.

NOTE CONF {"raw":[100,100,100,100,100,100,95,100,100]}

00:08:19.600 --> 00:08:22.990
<v Speaker 1>Mathematicians call this operation lifting.

NOTE CONF {"raw":[100,100,100,100,100]}

00:08:23.260 --> 00:08:27.070
<v Speaker 1>So this is the lifted not operator.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:08:27.070 --> 00:08:28.000
<v Speaker 1>This is the lifted.

NOTE CONF {"raw":[100,100,100,100]}

00:08:28.000 --> 00:08:31.210
<v Speaker 1>And operator and this is the lifted all operator.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:08:32.140 --> 00:08:33.669
<v Speaker 1>Um, why do they call it lifting.

NOTE CONF {"raw":[56,100,100,100,100,100,100]}

00:08:33.669 --> 00:08:36.520
<v Speaker 1>It's some kind of idea that true and false are

NOTE CONF {"raw":[52,100,100,100,100,100,100,100,100,98]}

00:08:36.520 --> 00:08:37.690
<v Speaker 1>the ground values.

NOTE CONF {"raw":[100,100,100]}

00:08:37.690 --> 00:08:41.770
<v Speaker 1>They're the ground floor of the mathematical building where constructing

NOTE CONF {"raw":[89,100,100,100,100,100,100,100,95,100]}

00:08:41.890 --> 00:08:43.900
<v Speaker 1>the next level up is predicates.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:08:43.900 --> 00:08:46.480
<v Speaker 1>And so we lift our operations to work on the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:46.480 --> 00:08:47.500
<v Speaker 1>next level up.

NOTE CONF {"raw":[100,100,100]}

00:08:47.800 --> 00:08:50.230
<v Speaker 1>And you can keep lifting further if you wish.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:08:54.340 --> 00:08:56.440
<v Speaker 1>Any questions about that idea?

NOTE CONF {"raw":[41,100,100,100,100]}

00:08:56.650 --> 00:08:58.900
<v Speaker 1>Is it a natural idea?

NOTE CONF {"raw":[95,100,100,100,100]}

00:08:59.890 --> 00:09:01.570
<v Speaker 1>It's what we do in English anyway.

NOTE CONF {"raw":[93,100,100,100,100,100,100]}

00:09:01.690 --> 00:09:02.020
<v Speaker 1>So.

NOTE CONF {"raw":[98]}

00:09:10.420 --> 00:09:13.690
<v Speaker 1>Okay, we will see what we do with these in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:13.690 --> 00:09:14.470
<v Speaker 1>a moment.

NOTE CONF {"raw":[100,100]}

00:09:15.490 --> 00:09:20.020
<v Speaker 1>Because now I want to think a little bit about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:20.350 --> 00:09:22.630
<v Speaker 1>what have we got in a sequence.

NOTE CONF {"raw":[100,100,100,100,100,100,86]}

00:09:24.070 --> 00:09:29.140
<v Speaker 1>The sequence we've introduced have a predicate on the left

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:29.140 --> 00:09:30.910
<v Speaker 1>and a predicate on the right.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:09:31.450 --> 00:09:34.750
<v Speaker 1>Now when we were doing manipulations, we assume that these

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:34.750 --> 00:09:38.200
<v Speaker 1>things were all what we called atomic predicates, except that

NOTE CONF {"raw":[100,100,100,100,100,81,100,100,100,100]}

00:09:38.200 --> 00:09:40.360
<v Speaker 1>we also allowed negated predicates.

NOTE CONF {"raw":[100,100,100,100,100]}

00:09:40.360 --> 00:09:46.480
<v Speaker 1>So remember we argued that the thing about furry snakes

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,99]}

00:09:46.480 --> 00:09:49.280
<v Speaker 1>was just an instance of Barbara because it had a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:49.280 --> 00:09:52.640
<v Speaker 1>not furry in it instead of a furry, and that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:52.640 --> 00:09:54.980
<v Speaker 1>still fits into the scheme of Barbara.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:09:55.640 --> 00:09:58.850
<v Speaker 1>So if we can put not of a predicate to

NOTE CONF {"raw":[100,100,100,100,100,94,100,100,100,100]}

00:09:58.850 --> 00:10:02.000
<v Speaker 1>the left or right of a sequent, then we can

NOTE CONF {"raw":[100,100,100,100,100,100,87,100,100,100]}

00:10:02.000 --> 00:10:05.120
<v Speaker 1>put the end of a predicate to the left or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:05.120 --> 00:10:08.120
<v Speaker 1>right of a sequent, or the all of the predicate.

NOTE CONF {"raw":[100,100,100,94,100,100,100,100,100,100]}

00:10:09.650 --> 00:10:13.880
<v Speaker 1>So, for example, here is a piece of reasoning.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:10:13.880 --> 00:10:15.770
<v Speaker 1>It's written in a logistic form.

NOTE CONF {"raw":[99,100,100,55,100,100]}

00:10:15.770 --> 00:10:18.770
<v Speaker 1>It's not one of Aristotle's syllogisms because I've got an

NOTE CONF {"raw":[100,100,100,100,56,100,100,100,100,100]}

00:10:18.770 --> 00:10:21.710
<v Speaker 1>and here so we can read this.

NOTE CONF {"raw":[81,100,100,100,100,100,100]}

00:10:22.790 --> 00:10:26.810
<v Speaker 1>Every line is big, for example, and every line is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:26.810 --> 00:10:27.560
<v Speaker 1>fierce.

NOTE CONF {"raw":[100]}

00:10:28.640 --> 00:10:31.910
<v Speaker 1>From that we can conclude that every line is big

NOTE CONF {"raw":[100,100,100,100,100,100,100,65,100,100]}

00:10:31.910 --> 00:10:33.440
<v Speaker 1>and fierce.

NOTE CONF {"raw":[100,100]}

00:10:34.040 --> 00:10:36.080
<v Speaker 1>And for those of you who liked the Venn diagram

NOTE CONF {"raw":[100,100,100,100,100,100,56,100,100,96]}

00:10:36.080 --> 00:10:40.070
<v Speaker 1>stuff, there's a kind of Venn diagram summary of the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:40.070 --> 00:10:40.820
<v Speaker 1>syllogism.

NOTE CONF {"raw":[100]}

00:10:42.620 --> 00:10:44.630
<v Speaker 1>So I take it that you agree with this piece

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:44.630 --> 00:10:45.470
<v Speaker 1>of reasoning.

NOTE CONF {"raw":[100,100]}

00:10:47.840 --> 00:10:50.240
<v Speaker 1>Anybody have any worries about this piece of reasoning?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:10:56.090 --> 00:10:56.720
<v Speaker 1>Does it really?

NOTE CONF {"raw":[100,100,100]}

00:10:56.720 --> 00:10:58.190
<v Speaker 1>I've written this double line here.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:10:58.190 --> 00:11:00.050
<v Speaker 1>Do you remember what the double line means?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:02.330 --> 00:11:02.780
<v Speaker 1>Yeah.

NOTE CONF {"raw":[87]}

00:11:04.340 --> 00:11:06.740
<v Speaker 1>Anybody not remember what the double line means?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:07.700 --> 00:11:08.090
<v Speaker 1>Okay.

NOTE CONF {"raw":[100]}

00:11:08.090 --> 00:11:10.250
<v Speaker 1>Means the rule goes both ways.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:11:10.250 --> 00:11:12.860
<v Speaker 1>So if you give me these two, then I can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:12.860 --> 00:11:14.990
<v Speaker 1>conclude the conclusion.

NOTE CONF {"raw":[100,100,100]}

00:11:14.990 --> 00:11:19.250
<v Speaker 1>Conversely, if you give me the conclusion, I can derive

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:19.250 --> 00:11:20.180
<v Speaker 1>the premises.

NOTE CONF {"raw":[100,100]}

00:11:20.390 --> 00:11:21.890
<v Speaker 1>So does that work.

NOTE CONF {"raw":[100,100,100,100]}

00:11:21.890 --> 00:11:23.090
<v Speaker 1>We should actually check it work.

NOTE CONF {"raw":[100,100,100,100,100,64]}

00:11:23.090 --> 00:11:24.200
<v Speaker 1>So I've written it down.

NOTE CONF {"raw":[72,100,100,100,100]}

00:11:24.200 --> 00:11:26.750
<v Speaker 1>So you should check everything I write down because I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:26.750 --> 00:11:27.830
<v Speaker 1>might make a mistake.

NOTE CONF {"raw":[100,100,100,100]}

00:11:28.220 --> 00:11:31.130
<v Speaker 1>If I know that every line is big and fierce,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:31.460 --> 00:11:33.980
<v Speaker 1>then I certainly I know that every line is big,

NOTE CONF {"raw":[100,58,100,100,100,100,100,100,100,100]}

00:11:33.980 --> 00:11:35.930
<v Speaker 1>and I know that every line is fierce.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:35.930 --> 00:11:38.030
<v Speaker 1>So the rule works both ways round.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:11:42.140 --> 00:11:47.070
<v Speaker 1>Okay, so are you happy for us to continue working

NOTE CONF {"raw":[100,99,91,100,100,100,100,100,100,100]}

00:11:47.070 --> 00:11:50.070
<v Speaker 1>with reasoning with a slightly richer notion of predicate on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:50.070 --> 00:11:50.670
<v Speaker 1>the right.

NOTE CONF {"raw":[100,100]}

00:11:55.410 --> 00:11:58.380
<v Speaker 1>You were basically doing this in the tutorial anyway, so

NOTE CONF {"raw":[100,56,100,100,100,100,100,100,100,100]}

00:11:59.550 --> 00:12:03.270
<v Speaker 1>one of those nice instances where we designed the tutorial

NOTE CONF {"raw":[100,100,100,100,100,100,100,52,100,100]}

00:12:03.300 --> 00:12:05.370
<v Speaker 1>to feed into the next week.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:07.980 --> 00:12:13.800
<v Speaker 1>Um, what I've done here is use a conjunct predicate,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:13.800 --> 00:12:16.500
<v Speaker 1>an and predicate on the right of a sequent.

NOTE CONF {"raw":[64,100,100,100,100,100,100,100,70]}

00:12:17.970 --> 00:12:23.160
<v Speaker 1>I could also think about enriching sequence on the left.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:23.760 --> 00:12:25.710
<v Speaker 1>So here's another rule.

NOTE CONF {"raw":[100,100,100,100]}

00:12:30.600 --> 00:12:35.160
<v Speaker 1>This one is supposed to say something like every lion

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:35.160 --> 00:12:37.920
<v Speaker 1>is fierce, every tiger is fierce.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:38.460 --> 00:12:41.490
<v Speaker 1>Everything that is either a lion or a tiger is

NOTE CONF {"raw":[100,100,100,100,100,100,100,95,100,100]}

00:12:41.490 --> 00:12:42.150
<v Speaker 1>fierce.

NOTE CONF {"raw":[100]}

00:12:43.170 --> 00:12:45.060
<v Speaker 1>Is that a valid piece of reasoning?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:12:50.910 --> 00:12:51.750
<v Speaker 1>Yes, yes.

NOTE CONF {"raw":[100,100]}

00:12:52.170 --> 00:12:52.740
<v Speaker 1>Thumbs up.

NOTE CONF {"raw":[100,100]}

00:12:52.740 --> 00:12:53.430
<v Speaker 1>Lots of thumbs up.

NOTE CONF {"raw":[100,100,100,100]}

00:12:53.430 --> 00:12:54.840
<v Speaker 1>Anybody worried about it?

NOTE CONF {"raw":[100,100,100,100]}

00:12:56.430 --> 00:12:58.800
<v Speaker 1>I think it was as a piece of English.

NOTE CONF {"raw":[100,100,98,77,98,100,100,100,100]}

00:12:58.800 --> 00:12:59.850
<v Speaker 1>It's quite natural.

NOTE CONF {"raw":[100,100,100]}

00:13:00.000 --> 00:13:01.680
<v Speaker 1>Does it work both ways?

NOTE CONF {"raw":[100,100,100,100,100]}

00:13:02.190 --> 00:13:04.980
<v Speaker 1>Well, if I know that everything that is either a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:04.980 --> 00:13:11.070
<v Speaker 1>lion or a tiger is fierce, then I know that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:11.070 --> 00:13:12.120
<v Speaker 1>tigers are fierce.

NOTE CONF {"raw":[97,97,100]}

00:13:12.120 --> 00:13:13.530
<v Speaker 1>And I know that lions are fierce.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:13.530 --> 00:13:15.540
<v Speaker 1>And so it does work both ways.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:15.570 --> 00:13:16.380
<v Speaker 1>Again.

NOTE CONF {"raw":[100]}

00:13:18.510 --> 00:13:21.570
<v Speaker 1>Um, you might be wondering, can I say something?

NOTE CONF {"raw":[95,100,100,100,100,100,100,100,100]}

00:13:21.570 --> 00:13:23.100
<v Speaker 1>About what?

NOTE CONF {"raw":[100,100]}

00:13:23.280 --> 00:13:25.080
<v Speaker 1>Lion and tiger.

NOTE CONF {"raw":[100,100,100]}

00:13:25.260 --> 00:13:28.290
<v Speaker 1>This is where logic differs from English.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:28.290 --> 00:13:31.920
<v Speaker 1>So in English, if I said all lions and tigers

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:31.920 --> 00:13:34.410
<v Speaker 1>are fierce, you would know what I meant, right?

NOTE CONF {"raw":[100,100,67,100,100,100,100,100,98]}

00:13:38.100 --> 00:13:39.240
<v Speaker 1>What would I mean?

NOTE CONF {"raw":[100,100,100,100]}

00:13:43.470 --> 00:13:44.680
<v Speaker 1>So forget the logic.

NOTE CONF {"raw":[100,100,100,100]}

00:13:44.680 --> 00:13:47.260
<v Speaker 1>Just in normal English I say all lions and tigers

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:47.260 --> 00:13:50.110
<v Speaker 1>are fierce lions.

NOTE CONF {"raw":[100,100,100]}

00:13:50.740 --> 00:13:51.280
<v Speaker 2>Tigers.

NOTE CONF {"raw":[100]}

00:13:52.090 --> 00:13:52.750
<v Speaker 1>Right?

NOTE CONF {"raw":[95]}

00:13:52.900 --> 00:13:54.790
<v Speaker 1>So that's one way of putting it.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:54.790 --> 00:13:56.350
<v Speaker 1>Is there another way I could put it?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:13:59.140 --> 00:14:01.840
<v Speaker 2>I'm trying not to say it without logic.

NOTE CONF {"raw":[87,87,44,78,78,89,100,63]}

00:14:03.820 --> 00:14:05.920
<v Speaker 1>Does it not just say this everything that is a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:05.920 --> 00:14:07.300
<v Speaker 1>lion or is a tiger.

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:07.300 --> 00:14:11.410
<v Speaker 1>So there's one of those cases where and and or

NOTE CONF {"raw":[100,100,100,100,100,100,100,98,97,100]}

00:14:11.410 --> 00:14:14.230
<v Speaker 1>in English and Logic are getting a bit mixed up.

NOTE CONF {"raw":[100,100,100,100,84,100,100,100,100,100]}

00:14:14.920 --> 00:14:18.910
<v Speaker 1>Um, what is can we talk about the compound predicate?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:18.940 --> 00:14:20.470
<v Speaker 1>Lion and tiger.

NOTE CONF {"raw":[100,100,100]}

00:14:20.950 --> 00:14:23.140
<v Speaker 1>What's the meaning of the compound predicate?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:14:23.140 --> 00:14:24.640
<v Speaker 1>Lion and tiger.

NOTE CONF {"raw":[100,100,100]}

00:14:26.830 --> 00:14:28.330
<v Speaker 1>Has to be a lion and a tiger.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:14:28.360 --> 00:14:31.690
<v Speaker 1>So arguably the things on the slide in the right

NOTE CONF {"raw":[100,100,100,97,100,100,100,100,100,100]}

00:14:31.690 --> 00:14:33.130
<v Speaker 1>satisfy that predicate.

NOTE CONF {"raw":[100,100,100]}

00:14:34.570 --> 00:14:36.190
<v Speaker 1>Who knows what a liger is?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:14:38.890 --> 00:14:40.960
<v Speaker 1>Who can now guess what a liger is?

NOTE CONF {"raw":[100,96,100,100,100,100,100,100]}

00:14:42.820 --> 00:14:44.770
<v Speaker 1>Okay, there are ligers and Teigen's.

NOTE CONF {"raw":[100,100,100,100,100,96]}

00:14:44.770 --> 00:14:48.460
<v Speaker 1>So Elijah is the offspring of a male lion and

NOTE CONF {"raw":[100,81,100,100,100,100,100,100,100,100]}

00:14:48.460 --> 00:14:49.540
<v Speaker 1>a female tiger.

NOTE CONF {"raw":[100,100,100]}

00:14:49.540 --> 00:14:52.450
<v Speaker 1>A tigress and a Teigen is the other way around.

NOTE CONF {"raw":[100,100,100,100,99,100,100,100,100,83]}

00:14:54.280 --> 00:14:59.170
<v Speaker 1>Um, they're not very happy beasts, but curiously, Teigen's are

NOTE CONF {"raw":[100,95,100,100,100,100,100,100,100,100]}

00:14:59.170 --> 00:15:01.330
<v Speaker 1>bigger than either lions or tigers.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:15:03.580 --> 00:15:06.850
<v Speaker 1>So what have I done with this slide and the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:06.850 --> 00:15:07.990
<v Speaker 1>previous slide?

NOTE CONF {"raw":[100,100]}

00:15:09.130 --> 00:15:12.550
<v Speaker 1>I've introduced some rules that let us do things with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:12.550 --> 00:15:14.920
<v Speaker 1>Boolean combinators on predicates.

NOTE CONF {"raw":[100,100,100,100]}

00:15:16.030 --> 00:15:17.950
<v Speaker 1>So this one we had from before.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:15:17.980 --> 00:15:19.390
<v Speaker 1>This is contra position.

NOTE CONF {"raw":[100,100,95,100]}

00:15:19.900 --> 00:15:22.750
<v Speaker 1>This is a rule for manipulating negation.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:15:23.230 --> 00:15:25.660
<v Speaker 1>If I know that A entails b, I know that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:25.660 --> 00:15:27.820
<v Speaker 1>not B entails not a.

NOTE CONF {"raw":[100,100,100,100,100]}

00:15:28.840 --> 00:15:33.700
<v Speaker 1>What I've introduced just now are rules for dealing with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:33.880 --> 00:15:38.740
<v Speaker 1>or and and in some places.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:15:38.890 --> 00:15:42.050
<v Speaker 1>So A entails C and B entails.

NOTE CONF {"raw":[100,100,100,100,100,100,66]}

00:15:42.050 --> 00:15:44.960
<v Speaker 1>C means that either A or B is sufficient to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:44.960 --> 00:15:46.520
<v Speaker 1>give you C and vice versa.

NOTE CONF {"raw":[100,100,98,100,100,100]}

00:15:46.760 --> 00:15:48.860
<v Speaker 1>If I know C gives you a and c gives

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:48.860 --> 00:15:51.080
<v Speaker 1>you b, I know that c gives you a and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:51.110 --> 00:15:51.560
<v Speaker 1>b.

NOTE CONF {"raw":[100]}

00:15:53.450 --> 00:15:58.490
<v Speaker 1>So notice here that these rules I've introduced, I've got

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:58.490 --> 00:16:01.730
<v Speaker 1>all on the left and and on the right.

NOTE CONF {"raw":[93,100,100,100,100,100,100,100,100]}

00:16:02.120 --> 00:16:04.790
<v Speaker 1>Do you think that's a coincidence that I've started this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:04.790 --> 00:16:05.240
<v Speaker 1>way.

NOTE CONF {"raw":[100]}

00:16:12.020 --> 00:16:13.310
<v Speaker 1>I mean obviously not.

NOTE CONF {"raw":[96,96,100,100]}

00:16:14.270 --> 00:16:17.090
<v Speaker 1>Anybody remember any magic word that I've mentioned a few

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:17.090 --> 00:16:19.250
<v Speaker 1>times that might be coming into play here?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:16:28.040 --> 00:16:29.360
<v Speaker 1>Magic word stuff here.

NOTE CONF {"raw":[100,76,100,100]}

00:16:31.310 --> 00:16:32.540
<v Speaker 1>Not contra position?

NOTE CONF {"raw":[100,100,100]}

00:16:32.540 --> 00:16:33.140
<v Speaker 1>No.

NOTE CONF {"raw":[98]}

00:16:39.230 --> 00:16:39.740
<v Speaker 1>No.

NOTE CONF {"raw":[86]}

00:16:40.670 --> 00:16:43.370
<v Speaker 1>So it's a word that describes the way in which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:43.370 --> 00:16:45.980
<v Speaker 1>knot or land interact.

NOTE CONF {"raw":[83,90,66,100]}

00:16:49.250 --> 00:16:51.620
<v Speaker 1>It's going to come up again, so I'll repeat it.

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:16:51.650 --> 00:16:52.700
<v Speaker 1>Duality.

NOTE CONF {"raw":[100]}

00:16:52.700 --> 00:16:56.630
<v Speaker 1>So I haven't explained precisely what duality means, but we've

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:56.630 --> 00:16:58.970
<v Speaker 1>seen a couple of examples of it and we're going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:58.970 --> 00:17:00.080
<v Speaker 1>to see many more.

NOTE CONF {"raw":[100,100,100,100]}

00:17:00.080 --> 00:17:05.449
<v Speaker 1>So it's not a coincidence that these sequence work with

NOTE CONF {"raw":[100,100,100,100,100,100,100,87,100,100]}

00:17:05.449 --> 00:17:07.850
<v Speaker 1>all on the left and and on the right.

NOTE CONF {"raw":[96,100,100,100,100,100,100,100,100]}

00:17:09.980 --> 00:17:12.680
<v Speaker 1>Because in a sequence, the left hand side is a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:12.680 --> 00:17:13.850
<v Speaker 1>kind of positive thing.

NOTE CONF {"raw":[100,100,100,100]}

00:17:13.850 --> 00:17:15.350
<v Speaker 1>These are the things we know.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:17:15.800 --> 00:17:17.630
<v Speaker 1>And the right hand side.

NOTE CONF {"raw":[100,100,100,100,100]}

00:17:19.430 --> 00:17:20.569
<v Speaker 1>Well no actually.

NOTE CONF {"raw":[100,94,100]}

00:17:20.990 --> 00:17:21.290
<v Speaker 1>Sorry.

NOTE CONF {"raw":[100]}

00:17:21.290 --> 00:17:22.010
<v Speaker 1>Wrong way round.

NOTE CONF {"raw":[100,100,72]}

00:17:22.010 --> 00:17:23.959
<v Speaker 1>Right hand side is a positive thing.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:17:24.110 --> 00:17:28.610
<v Speaker 1>And the left hand side is the left hand side

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:28.610 --> 00:17:31.160
<v Speaker 1>of a conditional basically, which is a sort of negative

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:31.160 --> 00:17:31.850
<v Speaker 1>place.

NOTE CONF {"raw":[100]}

00:17:32.780 --> 00:17:34.820
<v Speaker 1>And we'll see much more about that in a bit

NOTE CONF {"raw":[77,100,100,100,100,100,100,100,100,100]}

00:17:34.820 --> 00:17:35.480
<v Speaker 1>later.

NOTE CONF {"raw":[100]}

00:17:37.130 --> 00:17:40.680
<v Speaker 1>This raises the question Of.

NOTE CONF {"raw":[100,47,100,100,96]}

00:17:41.640 --> 00:17:46.350
<v Speaker 1>Can I do anything with and and or on the

NOTE CONF {"raw":[100,100,100,100,100,100,97,100,100,100]}

00:17:46.350 --> 00:17:47.220
<v Speaker 1>left or right?

NOTE CONF {"raw":[100,100,100]}

00:17:47.220 --> 00:17:50.190
<v Speaker 1>So can I write a sequence that has an and

NOTE CONF {"raw":[100,100,100,93,100,67,100,100,100,100]}

00:17:50.190 --> 00:17:50.820
<v Speaker 1>on the left.

NOTE CONF {"raw":[100,100,100]}

00:17:50.820 --> 00:17:52.890
<v Speaker 1>And can I write a sequent that has an all

NOTE CONF {"raw":[100,100,100,100,100,85,100,100,100,96]}

00:17:52.890 --> 00:17:53.730
<v Speaker 1>on the right?

NOTE CONF {"raw":[100,100,78]}

00:17:56.730 --> 00:18:03.450
<v Speaker 1>In order to think about that, I'm going to introduce

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:03.450 --> 00:18:07.530
<v Speaker 1>some notation that you've already seen in Haskell, but we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:07.530 --> 00:18:09.060
<v Speaker 1>haven't seen it in logic.

NOTE CONF {"raw":[100,100,100,100,100]}

00:18:09.210 --> 00:18:12.570
<v Speaker 1>So just before I go on, any questions about the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:12.570 --> 00:18:15.690
<v Speaker 1>slide so far, the rules that I've been talking about.

NOTE CONF {"raw":[85,100,100,100,100,100,100,100,100,100]}

00:18:19.410 --> 00:18:20.820
<v Speaker 1>Quite repetitive slides.

NOTE CONF {"raw":[100,100,100]}

00:18:20.820 --> 00:18:21.960
<v Speaker 1>So hopefully not.

NOTE CONF {"raw":[100,100,100]}

00:18:24.270 --> 00:18:26.370
<v Speaker 1>So you did this in the tutorial.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:18:26.370 --> 00:18:28.410
<v Speaker 1>If you did the optional part, if you didn't do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:28.410 --> 00:18:31.740
<v Speaker 1>the optional part, then it's time to start thinking about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:31.740 --> 00:18:32.580
<v Speaker 1>what it meant.

NOTE CONF {"raw":[100,100,100]}

00:18:34.230 --> 00:18:39.810
<v Speaker 1>If I write down something like this a comma b

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:39.810 --> 00:18:42.030
<v Speaker 1>comma c entails d.

NOTE CONF {"raw":[100,100,100,100]}

00:18:43.230 --> 00:18:45.330
<v Speaker 1>What do you think a natural thing for that to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:45.330 --> 00:18:46.080
<v Speaker 1>mean is.

NOTE CONF {"raw":[100,100]}

00:18:48.420 --> 00:18:52.800
<v Speaker 1>Um, it's always the somebody at the back must have

NOTE CONF {"raw":[100,95,100,99,100,100,100,100,100,100]}

00:18:52.800 --> 00:18:53.490
<v Speaker 1>an idea.

NOTE CONF {"raw":[100,100]}

00:19:01.140 --> 00:19:02.520
<v Speaker 1>Okay, so that's an interesting one.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:02.520 --> 00:19:04.290
<v Speaker 1>So it's just in there is that it means that

NOTE CONF {"raw":[100,95,100,100,100,100,100,100,100,100]}

00:19:04.290 --> 00:19:08.490
<v Speaker 1>A gives d, b gives d and c gives d

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:09.120 --> 00:19:10.080
<v Speaker 1>each individually.

NOTE CONF {"raw":[100,100]}

00:19:10.080 --> 00:19:11.010
<v Speaker 1>And the alternative.

NOTE CONF {"raw":[100,100,100]}

00:19:11.010 --> 00:19:11.370
<v Speaker 1>Yeah.

NOTE CONF {"raw":[80]}

00:19:14.010 --> 00:19:17.370
<v Speaker 1>So another idea is that what I really mean here

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:17.370 --> 00:19:19.290
<v Speaker 1>is if you give me all of A, B and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:19.290 --> 00:19:20.910
<v Speaker 1>C then I can get D.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:22.800 --> 00:19:24.270
<v Speaker 1>Now this is notation.

NOTE CONF {"raw":[100,100,100,100]}

00:19:24.270 --> 00:19:27.300
<v Speaker 1>So we could define it in whatever way we want.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:27.750 --> 00:19:35.580
<v Speaker 1>But in fact what we're actually doing here is interpreting

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:35.580 --> 00:19:41.260
<v Speaker 1>comma as And so one way that this could make

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:41.260 --> 00:19:43.420
<v Speaker 1>sense, and the way that turns out to make it

NOTE CONF {"raw":[100,54,100,100,100,100,100,100,100,100]}

00:19:43.420 --> 00:19:46.660
<v Speaker 1>make quite good sense is to say from the assumptions

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:46.690 --> 00:19:50.470
<v Speaker 1>A, B and C, I can get D when we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:50.470 --> 00:19:54.820
<v Speaker 1>do a mathematical proof or a logical piece of reasoning.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:54.820 --> 00:19:57.520
<v Speaker 1>Usually we start with a bunch of assumptions.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:19:57.520 --> 00:20:00.010
<v Speaker 1>If you're writing down a formal theorem, then these are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:00.010 --> 00:20:01.690
<v Speaker 1>the preconditions of the theorem.

NOTE CONF {"raw":[100,100,100,100,100]}

00:20:02.050 --> 00:20:05.590
<v Speaker 1>If you're doing a piece of informal reasoning, then sometimes

NOTE CONF {"raw":[100,98,100,100,100,100,100,100,100,100]}

00:20:05.590 --> 00:20:07.480
<v Speaker 1>you have to find out what the assumptions are as

NOTE CONF {"raw":[100,100,100,100,100,100,100,87,100,100]}

00:20:07.480 --> 00:20:08.380
<v Speaker 1>you go along.

NOTE CONF {"raw":[100,100,100]}

00:20:08.380 --> 00:20:10.480
<v Speaker 1>But when you finish, you've got some things that you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:10.480 --> 00:20:12.790
<v Speaker 1>had to assume in order to get your result.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:20:14.050 --> 00:20:17.440
<v Speaker 1>So it's kind of reasonable to say that the basic

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:17.440 --> 00:20:20.620
<v Speaker 1>form of reasoning is give me a bunch of assumptions

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:20.620 --> 00:20:23.860
<v Speaker 1>on the left and give me what I can prove

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:23.860 --> 00:20:25.150
<v Speaker 1>from it on the right.

NOTE CONF {"raw":[100,100,100,100,100]}

00:20:28.360 --> 00:20:31.240
<v Speaker 1>Um, have you seen this comma used as an and

NOTE CONF {"raw":[98,100,100,100,100,92,98,100,100,89]}

00:20:31.240 --> 00:20:32.380
<v Speaker 1>anywhere else?

NOTE CONF {"raw":[100,100]}

00:20:41.950 --> 00:20:44.080
<v Speaker 1>People are whispering the answer.

NOTE CONF {"raw":[100,100,100,100,100]}

00:20:44.350 --> 00:20:45.850
<v Speaker 1>Somebody shout the answer.

NOTE CONF {"raw":[98,65,100,100]}

00:20:48.580 --> 00:20:50.560
<v Speaker 1>So I should have bought water, shouldn't I?

NOTE CONF {"raw":[65,100,100,100,95,100,100,100]}

00:20:52.030 --> 00:20:53.920
<v Speaker 1>Haskell list comprehension.

NOTE CONF {"raw":[98,100,100]}

00:20:56.380 --> 00:21:00.910
<v Speaker 1>We have in Haskell the set of X drawn from

NOTE CONF {"raw":[100,100,100,100,98,100,100,100,100,100]}

00:21:00.910 --> 00:21:01.360
<v Speaker 1>things.

NOTE CONF {"raw":[100]}

00:21:01.360 --> 00:21:04.150
<v Speaker 1>Comma X is blue, x is amber.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:21:05.260 --> 00:21:08.140
<v Speaker 1>So that's an example of comma being used for.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:21:08.140 --> 00:21:11.170
<v Speaker 1>And that's what we're going to do here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:21:13.810 --> 00:21:16.480
<v Speaker 1>Um what can we do with that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:21:16.480 --> 00:21:18.880
<v Speaker 1>Does this let us do anything useful.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:21:18.880 --> 00:21:22.600
<v Speaker 1>Why would we write a comma b, comma c instead

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:22.600 --> 00:21:25.750
<v Speaker 1>of writing a and b and c?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:21:28.270 --> 00:21:31.090
<v Speaker 1>Well, if we think about what we could try to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:31.090 --> 00:21:33.250
<v Speaker 1>do, what we would like to do is produce rules

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:33.250 --> 00:21:35.900
<v Speaker 1>that let us reason about statements like that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:21:37.340 --> 00:21:40.010
<v Speaker 1>And if you try to do that, you'll find that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:40.010 --> 00:21:43.010
<v Speaker 1>it doesn't work as nicely as it did when we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:43.010 --> 00:21:45.500
<v Speaker 1>had and on the right of the sequent.

NOTE CONF {"raw":[100,100,100,100,100,100,100,89]}

00:21:47.600 --> 00:21:49.700
<v Speaker 1>So here are two rules.

NOTE CONF {"raw":[100,100,100,100,100]}

00:21:51.530 --> 00:21:54.650
<v Speaker 1>Which of them is true and which of them is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:55.100 --> 00:21:56.030
<v Speaker 1>false?

NOTE CONF {"raw":[100]}

00:21:57.890 --> 00:22:02.450
<v Speaker 1>If A and B gives me D, then sorry.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,51]}

00:22:02.450 --> 00:22:05.000
<v Speaker 1>If a comma B gives me d, then a and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:05.000 --> 00:22:05.900
<v Speaker 1>b gives me d.

NOTE CONF {"raw":[100,100,100,100]}

00:22:06.110 --> 00:22:08.990
<v Speaker 1>That's true by definition, because I've said that I mean

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:08.990 --> 00:22:10.220
<v Speaker 1>and by comma.

NOTE CONF {"raw":[100,100,100]}

00:22:11.420 --> 00:22:15.500
<v Speaker 1>But this thing that you might think should be true.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:17.750 --> 00:22:21.620
<v Speaker 1>Is a one way rule, not a two way rule.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:21.680 --> 00:22:25.310
<v Speaker 1>So think about what this says A gives me D

NOTE CONF {"raw":[100,100,100,100,100,100,90,100,100,100]}

00:22:25.790 --> 00:22:27.290
<v Speaker 1>and B gives me d.

NOTE CONF {"raw":[100,100,100,100,100]}

00:22:27.320 --> 00:22:30.950
<v Speaker 1>From that I conclude that a and b gives me

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:30.950 --> 00:22:31.310
<v Speaker 1>d.

NOTE CONF {"raw":[100]}

00:22:32.210 --> 00:22:33.020
<v Speaker 1>Is that right?

NOTE CONF {"raw":[100,100,100]}

00:22:33.020 --> 00:22:33.860
<v Speaker 1>So that's.

NOTE CONF {"raw":[100,100]}

00:22:33.920 --> 00:22:34.250
<v Speaker 1>Yeah.

NOTE CONF {"raw":[87]}

00:22:34.250 --> 00:22:35.900
<v Speaker 1>Anybody worried about that?

NOTE CONF {"raw":[100,100,100,100]}

00:22:36.860 --> 00:22:38.570
<v Speaker 1>Does it work backwards?

NOTE CONF {"raw":[100,100,100,100]}

00:22:42.170 --> 00:22:44.750
<v Speaker 1>It feels like gladiatorial combat.

NOTE CONF {"raw":[50,100,100,100,98]}

00:22:48.800 --> 00:22:49.730
<v Speaker 1>Why doesn't it.

NOTE CONF {"raw":[100,100,100]}

00:22:49.730 --> 00:22:52.820
<v Speaker 1>So somebody who hasn't already said that it doesn't.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:22:52.820 --> 00:22:55.100
<v Speaker 1>Why does the backwards rule not work?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:23:00.470 --> 00:23:04.160
<v Speaker 2>Because it can be in a, um um.

NOTE CONF {"raw":[47,87,100,100,45,100,80,64]}

00:23:05.930 --> 00:23:06.860
<v Speaker 1>Yeah, this.

NOTE CONF {"raw":[100,100]}

00:23:06.860 --> 00:23:09.410
<v Speaker 1>So the conclusion here says that if I know both

NOTE CONF {"raw":[100,100,98,100,100,100,100,100,100,100]}

00:23:09.410 --> 00:23:12.590
<v Speaker 1>A and B, then I can get D, but it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:12.590 --> 00:23:15.920
<v Speaker 1>may well be that I actually need both A and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:15.950 --> 00:23:19.580
<v Speaker 1>B, and neither of them is enough by themselves.

NOTE CONF {"raw":[100,100,100,100,100,100,97,100,100]}

00:23:20.030 --> 00:23:23.540
<v Speaker 1>So running this rule backwards would say that if I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:23.540 --> 00:23:25.880
<v Speaker 1>knew that given A and B together, I can get

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:25.880 --> 00:23:28.700
<v Speaker 1>D, then I can separately get that A gives me

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:28.700 --> 00:23:31.520
<v Speaker 1>D and B gives me D, and that's simply not

NOTE CONF {"raw":[100,100,100,100,100,100,100,97,100,100]}

00:23:31.520 --> 00:23:32.090
<v Speaker 1>true.

NOTE CONF {"raw":[100]}

00:23:33.930 --> 00:23:37.800
<v Speaker 1>So your exercise is to come up with a little

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:37.800 --> 00:23:39.210
<v Speaker 1>example for that one.

NOTE CONF {"raw":[100,100,100,100]}

00:23:39.780 --> 00:23:43.860
<v Speaker 1>Using any of our favourite universes or topics to demonstrate

NOTE CONF {"raw":[100,100,100,100,94,100,100,100,100,100]}

00:23:43.980 --> 00:23:45.570
<v Speaker 1>that it doesn't make sense.

NOTE CONF {"raw":[100,100,100,100,100]}

00:23:47.640 --> 00:23:53.850
<v Speaker 1>Um, nonetheless, these rules are both useful in their ways.

NOTE CONF {"raw":[80,100,100,100,100,100,100,100,100,100]}

00:23:54.510 --> 00:23:59.430
<v Speaker 1>But what's the point of taking an and and splitting

NOTE CONF {"raw":[100,100,100,100,100,100,92,75,100,100]}

00:23:59.430 --> 00:24:01.800
<v Speaker 1>it into commas?

NOTE CONF {"raw":[100,100,100]}

00:24:03.390 --> 00:24:07.680
<v Speaker 1>What I'm trying to do here is work towards a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,92]}

00:24:07.680 --> 00:24:11.700
<v Speaker 1>system where I can take a big, complicated formula, a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:11.700 --> 00:24:15.270
<v Speaker 1>big, complicated sequence on the bottom with a predicate on

NOTE CONF {"raw":[99,100,96,100,100,100,100,100,100,100]}

00:24:15.270 --> 00:24:17.640
<v Speaker 1>the left with lots of ands and ors and nots,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,72]}

00:24:17.640 --> 00:24:19.800
<v Speaker 1>and a predicate on the right with lots of ands

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:19.800 --> 00:24:21.240
<v Speaker 1>and ors and nots.

NOTE CONF {"raw":[100,100,100,98]}

00:24:21.540 --> 00:24:24.150
<v Speaker 1>And then we want to break it down so that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:24.150 --> 00:24:28.410
<v Speaker 1>we can do a reasoned argument showing that it's true

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,98,100]}

00:24:28.410 --> 00:24:30.450
<v Speaker 1>from simple assumptions.

NOTE CONF {"raw":[100,100,100]}

00:24:32.460 --> 00:24:32.730
<v Speaker 1>Um.

NOTE CONF {"raw":[99]}

00:24:33.330 --> 00:24:36.150
<v Speaker 1>It's a little bit complex when we actually do a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:36.150 --> 00:24:38.430
<v Speaker 1>proof, which will be tomorrow with a bit of luck.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:38.430 --> 00:24:39.420
<v Speaker 1>Not today.

NOTE CONF {"raw":[100,100]}

00:24:40.620 --> 00:24:42.630
<v Speaker 1>You'll see that it can be a bit of a

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,100,100]}

00:24:42.630 --> 00:24:44.760
<v Speaker 1>mess to write down, which is why it's good to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:44.760 --> 00:24:46.080
<v Speaker 1>have computers doing it.

NOTE CONF {"raw":[100,100,100,100]}

00:24:48.060 --> 00:24:51.060
<v Speaker 1>But even setting up the notation for it takes a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:51.060 --> 00:24:53.310
<v Speaker 1>little more work than we have been doing.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:24:55.530 --> 00:24:56.190
<v Speaker 1>Okay.

NOTE CONF {"raw":[100]}

00:24:56.340 --> 00:24:59.970
<v Speaker 1>So are you all currently more or less happy with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:59.970 --> 00:25:01.890
<v Speaker 1>the idea that I can say I have a bunch

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:01.890 --> 00:25:05.460
<v Speaker 1>of assumptions, and they give me a conclusion as a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:05.460 --> 00:25:05.880
<v Speaker 1>sequence.

NOTE CONF {"raw":[44]}

00:25:06.060 --> 00:25:06.090
<v Speaker 1>I.

NOTE CONF {"raw":[61]}

00:25:09.660 --> 00:25:10.590
<v Speaker 1>Assume so.

NOTE CONF {"raw":[100,100]}

00:25:12.930 --> 00:25:14.100
<v Speaker 1>What does that mean?

NOTE CONF {"raw":[100,100,100,100]}

00:25:28.710 --> 00:25:31.060
<v Speaker 1>What does it mean to say from.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:25:32.290 --> 00:25:34.060
<v Speaker 1>No assumptions at all.

NOTE CONF {"raw":[100,100,100,100]}

00:25:35.470 --> 00:25:41.260
<v Speaker 1>I can get d anything, anything entails d.

NOTE CONF {"raw":[100,100,100,100,62,100,100,100]}

00:25:41.290 --> 00:25:41.740
<v Speaker 1>Yep.

NOTE CONF {"raw":[73]}

00:25:41.860 --> 00:25:44.800
<v Speaker 1>So if nothing entails D, then certainly anything else entails

NOTE CONF {"raw":[77,100,100,100,100,100,100,100,100,100]}

00:25:44.800 --> 00:25:45.160
<v Speaker 1>D.

NOTE CONF {"raw":[100]}

00:25:49.330 --> 00:25:52.240
<v Speaker 1>Um, is there a shorter way of saying what that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:52.240 --> 00:25:53.110
<v Speaker 1>says about D?

NOTE CONF {"raw":[100,100,100]}

00:25:55.240 --> 00:25:56.470
<v Speaker 1>D is just true.

NOTE CONF {"raw":[100,100,100,100]}

00:25:56.980 --> 00:25:58.600
<v Speaker 1>We don't need any assumptions.

NOTE CONF {"raw":[100,100,100,100,100]}

00:25:58.600 --> 00:26:00.430
<v Speaker 1>It's a fact of life.

NOTE CONF {"raw":[98,100,100,100,100]}

00:26:02.470 --> 00:26:05.740
<v Speaker 1>How can we argue that formally?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:26:07.210 --> 00:26:08.860
<v Speaker 1>Well, let's just expand the notation.

NOTE CONF {"raw":[100,95,100,100,100,100]}

00:26:08.860 --> 00:26:09.940
<v Speaker 1>What do I mean.

NOTE CONF {"raw":[100,100,100,100]}

00:26:09.940 --> 00:26:13.570
<v Speaker 1>So by blank entails D I mean the empty set

NOTE CONF {"raw":[100,100,97,100,100,100,100,100,100,100]}

00:26:13.570 --> 00:26:15.370
<v Speaker 1>of assumptions entails d.

NOTE CONF {"raw":[100,100,100,100]}

00:26:15.940 --> 00:26:18.970
<v Speaker 1>Now when I write a bunch of assumptions on the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:18.970 --> 00:26:21.940
<v Speaker 1>left, on the left, we just agreed that what I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:21.940 --> 00:26:27.310
<v Speaker 1>meant was the end of the set of assumptions.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:26:27.430 --> 00:26:29.680
<v Speaker 1>And now we come back to something I think we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:29.680 --> 00:26:32.560
<v Speaker 1>discussed in the first lecture, or maybe the second lecture.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:33.160 --> 00:26:37.030
<v Speaker 1>What is the end of the empty set of assumptions?

NOTE CONF {"raw":[100,100,100,74,100,100,100,100,100,100]}

00:26:38.710 --> 00:26:39.910
<v Speaker 1>It's true.

NOTE CONF {"raw":[95,100]}

00:26:40.660 --> 00:26:41.950
<v Speaker 1>Why is it true?

NOTE CONF {"raw":[100,100,100,100]}

00:26:41.950 --> 00:26:46.060
<v Speaker 1>Because when you take two propositions and add them together,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:46.060 --> 00:26:48.520
<v Speaker 1>you're making the set of true things smaller.

NOTE CONF {"raw":[97,100,100,100,100,100,100,100]}

00:26:48.820 --> 00:26:52.630
<v Speaker 1>So each time I put another and in, I reduce

NOTE CONF {"raw":[100,100,100,100,100,100,48,100,100,96]}

00:26:52.630 --> 00:26:54.400
<v Speaker 1>the number of things that are true.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:26:54.700 --> 00:26:57.790
<v Speaker 1>So when I have nothing at all in my bunch

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:57.790 --> 00:27:00.850
<v Speaker 1>of ands, I'd better start with everything that is true.

NOTE CONF {"raw":[100,55,97,100,100,100,100,100,100,100]}

00:27:02.530 --> 00:27:04.930
<v Speaker 1>So again, this is one of these things that you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:04.930 --> 00:27:06.340
<v Speaker 1>need to be remembering.

NOTE CONF {"raw":[100,100,100,100]}

00:27:06.670 --> 00:27:09.250
<v Speaker 1>The end of the empty set is true.

NOTE CONF {"raw":[100,87,100,100,100,100,100,100]}

00:27:09.280 --> 00:27:13.120
<v Speaker 1>So this comes down to saying true entails d.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:27:13.240 --> 00:27:16.840
<v Speaker 1>In other words, d is simply true by itself.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:27:18.550 --> 00:27:22.270
<v Speaker 1>So that's what that means.

NOTE CONF {"raw":[100,100,100,100,100]}

00:27:25.060 --> 00:27:27.490
<v Speaker 1>So this looks like we're just playing games with the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,98]}

00:27:27.500 --> 00:27:31.100
<v Speaker 1>notation, but we're not really playing games because we're.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:27:31.760 --> 00:27:34.760
<v Speaker 1>Deducing stuff that has to follow if we interpret the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:34.760 --> 00:27:37.880
<v Speaker 1>notation in the way that we've defined it so far.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:39.260 --> 00:27:43.160
<v Speaker 1>This is also a common feature in logic and mathematics.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:43.160 --> 00:27:45.530
<v Speaker 1>You define a notation in a way that makes sense

NOTE CONF {"raw":[100,100,86,100,100,100,100,100,100,100]}

00:27:45.530 --> 00:27:48.140
<v Speaker 1>in the case you were thinking of, and then that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:48.140 --> 00:27:51.620
<v Speaker 1>forces you to interpret in interpret it in some rather

NOTE CONF {"raw":[100,100,100,69,69,100,100,100,100,96]}

00:27:51.620 --> 00:27:54.320
<v Speaker 1>specialist cases that perhaps you weren't thinking of.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:27:54.740 --> 00:27:57.800
<v Speaker 1>We certainly weren't thinking about empty sets of n of

NOTE CONF {"raw":[100,100,100,100,100,100,100,94,58,100]}

00:27:57.800 --> 00:28:03.680
<v Speaker 1>premises when we define the notation, or at least I

NOTE CONF {"raw":[100,100,100,85,100,100,52,100,100,100]}

00:28:03.680 --> 00:28:04.100
<v Speaker 1>wasn't.

NOTE CONF {"raw":[100]}

00:28:06.680 --> 00:28:11.930
<v Speaker 1>Um, so that's an argument that it makes sense to

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:28:11.930 --> 00:28:15.320
<v Speaker 1>write sets of things on the left of a sequent.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,79]}

00:28:19.220 --> 00:28:23.240
<v Speaker 1>Um, if I can write sets on the left of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:23.240 --> 00:28:25.910
<v Speaker 1>a sequence, then surely I can write sets on the

NOTE CONF {"raw":[100,86,100,100,100,100,100,100,100,100]}

00:28:25.910 --> 00:28:27.050
<v Speaker 1>right of a sequent.

NOTE CONF {"raw":[100,100,100,77]}

00:28:27.620 --> 00:28:29.720
<v Speaker 1>But I have to say what I mean by it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:31.130 --> 00:28:33.740
<v Speaker 1>Bearing in mind the magic word, what do you think

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:33.740 --> 00:28:34.430
<v Speaker 1>I might.

NOTE CONF {"raw":[100,100]}

00:28:35.300 --> 00:28:38.750
<v Speaker 1>Sensibly mean by comma on the right of a sequent?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:41.360 --> 00:28:43.970
<v Speaker 1>Or how many people were going to shout out or

NOTE CONF {"raw":[100,100,100,100,100,100,100,98,100,100]}

00:28:43.970 --> 00:28:45.410
<v Speaker 1>if they'd had a bit more time?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:28:47.690 --> 00:28:54.170
<v Speaker 1>Okay, so again, by the end of the course, hopefully

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:54.170 --> 00:28:56.540
<v Speaker 1>you will have a deep understanding of duality.

NOTE CONF {"raw":[100,100,100,100,97,100,100,100]}

00:28:56.540 --> 00:28:59.330
<v Speaker 1>But in the meantime remember that.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:28:59.330 --> 00:29:02.210
<v Speaker 1>And on the left behaves like all on the right.

NOTE CONF {"raw":[100,100,100,100,100,100,94,100,100,100]}

00:29:03.080 --> 00:29:05.150
<v Speaker 1>And this is a fact of the way we're defining

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:05.150 --> 00:29:05.750
<v Speaker 1>things.

NOTE CONF {"raw":[100]}

00:29:06.020 --> 00:29:11.000
<v Speaker 1>So if I write a entails d comma e, then

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:11.960 --> 00:29:16.250
<v Speaker 1>I claim that it should mean a entails either d

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,91]}

00:29:16.490 --> 00:29:20.450
<v Speaker 1>e, but I don't actually have a choice about it

NOTE CONF {"raw":[66,100,100,100,100,100,100,100,100,100]}

00:29:20.450 --> 00:29:23.900
<v Speaker 1>because I have rules that let me derive that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:29:25.190 --> 00:29:29.540
<v Speaker 1>So here's a trick that shows you that I don't

NOTE CONF {"raw":[100,90,100,100,100,100,100,100,100,100]}

00:29:29.540 --> 00:29:30.290
<v Speaker 1>have a choice.

NOTE CONF {"raw":[100,100,100]}

00:29:30.290 --> 00:29:34.610
<v Speaker 1>It has to mean, or I can do control position

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,86,100]}

00:29:34.610 --> 00:29:35.330
<v Speaker 1>on this.

NOTE CONF {"raw":[100,100]}

00:29:37.190 --> 00:29:40.160
<v Speaker 1>So if I want this to behave sensibly, this is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:40.160 --> 00:29:41.600
<v Speaker 1>a single proposition.

NOTE CONF {"raw":[100,100,100]}

00:29:42.800 --> 00:29:44.240
<v Speaker 1>So these are propositions.

NOTE CONF {"raw":[100,100,100,100]}

00:29:44.240 --> 00:29:45.800
<v Speaker 1>So I want to be able to take them to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:45.800 --> 00:29:49.850
<v Speaker 1>the left and swap them with their a move each

NOTE CONF {"raw":[100,100,100,100,100,100,43,100,100,100]}

00:29:49.850 --> 00:29:51.710
<v Speaker 1>proposition to the left negate it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:51.710 --> 00:29:54.200
<v Speaker 1>Move that proposition to the right negate it.

NOTE CONF {"raw":[100,100,100,100,100,100,92,92]}

00:29:55.940 --> 00:29:59.750
<v Speaker 1>So if this means something, it should mean the same

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:59.750 --> 00:30:00.500
<v Speaker 1>as this.

NOTE CONF {"raw":[100,100]}

00:30:02.150 --> 00:30:05.720
<v Speaker 1>This means the same as that because that's how we've

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:05.720 --> 00:30:08.150
<v Speaker 1>just defined comma on the left.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:30:10.130 --> 00:30:15.110
<v Speaker 1>That means not of the or because duality again.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:30:15.980 --> 00:30:18.200
<v Speaker 1>This is the end of the not.

NOTE CONF {"raw":[100,100,100,100,100,100,45]}

00:30:18.200 --> 00:30:20.540
<v Speaker 1>And this is the not of the ORS.

NOTE CONF {"raw":[100,100,100,100,100,100,100,97]}

00:30:20.780 --> 00:30:25.440
<v Speaker 1>So many of you use that in your tutorial exercise

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:25.440 --> 00:30:28.560
<v Speaker 1>where you are writing down a piece of hassle code.

NOTE CONF {"raw":[100,100,61,100,100,100,100,100,100,100]}

00:30:28.560 --> 00:30:32.730
<v Speaker 1>For some, something is something you wrote.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:30:38.490 --> 00:30:40.170
<v Speaker 1>It was something of the form.

NOTE CONF {"raw":[100,100,100,100,93,100]}

00:30:56.520 --> 00:30:57.000
<v Speaker 2>And you were.

NOTE CONF {"raw":[100,100,79]}

00:30:57.000 --> 00:30:58.980
<v Speaker 1>Something that looked like that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:30:59.940 --> 00:31:00.270
<v Speaker 1>Um.

NOTE CONF {"raw":[100]}

00:31:02.790 --> 00:31:05.220
<v Speaker 1>How many of you remember writing something like that?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:31:07.710 --> 00:31:10.620
<v Speaker 1>I know I saw least five examples out of six

NOTE CONF {"raw":[100,100,100,100,95,100,100,100,100,100]}

00:31:10.620 --> 00:31:12.390
<v Speaker 1>in my tutorials, so I think it must be many

NOTE CONF {"raw":[100,100,68,100,100,100,100,100,100,100]}

00:31:12.390 --> 00:31:13.050
<v Speaker 1>more of you.

NOTE CONF {"raw":[100,100,100]}

00:31:15.090 --> 00:31:19.350
<v Speaker 1>Um, curiously, you didn't have to do that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:19.380 --> 00:31:22.650
<v Speaker 1>That was a slightly tricky question, because.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:31:24.870 --> 00:31:26.580
<v Speaker 1>I asked you to.

NOTE CONF {"raw":[100,100,100,100]}

00:31:30.780 --> 00:31:35.820
<v Speaker 1>Define this thing in terms of Haskell and and or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,96,98]}

00:31:35.820 --> 00:31:38.250
<v Speaker 1>so that you would write all A or B as

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:31:38.250 --> 00:31:40.530
<v Speaker 1>an and of a list.

NOTE CONF {"raw":[100,100,100,100,96]}

00:31:41.460 --> 00:31:46.140
<v Speaker 1>And then I asked you to define that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:47.700 --> 00:31:52.590
<v Speaker 1>Um, you could just have negated the answer of that

NOTE CONF {"raw":[100,100,100,100,77,100,100,100,100,100]}

00:31:52.590 --> 00:31:54.840
<v Speaker 1>because this is just the negation of that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:54.960 --> 00:31:58.500
<v Speaker 1>But a lot of people, which is indeed what I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:58.500 --> 00:32:01.500
<v Speaker 1>really hoped you would do, decided to write it out

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:01.500 --> 00:32:05.010
<v Speaker 1>using AWS and not if you did the other thing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:05.010 --> 00:32:06.000
<v Speaker 1>then well done.

NOTE CONF {"raw":[100,100,100]}

00:32:06.000 --> 00:32:07.290
<v Speaker 1>Think about that too.

NOTE CONF {"raw":[100,100,100,100]}

00:32:08.220 --> 00:32:11.400
<v Speaker 1>So this law here is an example of something that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:11.400 --> 00:32:13.530
<v Speaker 1>you may know from propositional logic.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:32:13.890 --> 00:32:17.850
<v Speaker 1>Who has seen De Morgan's laws in propositional logic.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:32:18.870 --> 00:32:19.350
<v Speaker 1>Right.

NOTE CONF {"raw":[100]}

00:32:19.350 --> 00:32:21.390
<v Speaker 1>So about 20%.

NOTE CONF {"raw":[100,100,100]}

00:32:22.270 --> 00:32:24.970
<v Speaker 1>We will see them again at great length.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:32:26.800 --> 00:32:31.120
<v Speaker 1>So that was a piece of valid propositional reasoning.

NOTE CONF {"raw":[100,52,52,100,100,100,100,100,100]}

00:32:31.960 --> 00:32:35.920
<v Speaker 1>And then I can flip that over to the other

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:35.920 --> 00:32:38.590
<v Speaker 1>side and flip the over to this side using contra

NOTE CONF {"raw":[100,100,100,96,100,100,100,100,100,93]}

00:32:38.590 --> 00:32:39.370
<v Speaker 1>position.

NOTE CONF {"raw":[100]}

00:32:39.610 --> 00:32:43.330
<v Speaker 1>And so actually I have no choice but to say

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:43.360 --> 00:32:47.530
<v Speaker 1>a entails d comma E is supposed to mean a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:47.530 --> 00:32:49.990
<v Speaker 1>entails d or e.

NOTE CONF {"raw":[100,100,100,100]}

00:32:52.570 --> 00:32:58.480
<v Speaker 1>Which is a slightly odd thing to say, because normally

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:58.480 --> 00:33:01.060
<v Speaker 1>when we do reasoning, we have a kind of single

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:01.240 --> 00:33:06.550
<v Speaker 1>proposition that we want to conclude at the end, at

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:06.550 --> 00:33:10.240
<v Speaker 1>least if we're trying to do simple reasoning.

NOTE CONF {"raw":[100,100,73,100,100,100,100,100]}

00:33:10.510 --> 00:33:13.510
<v Speaker 1>But if you think about the kind of reasoning you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:13.510 --> 00:33:17.740
<v Speaker 1>do in mathematics, quite often, you will end up proving

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:17.740 --> 00:33:20.590
<v Speaker 1>that either something is true of your number or something

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:20.590 --> 00:33:21.910
<v Speaker 1>else is true of a number.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:33:23.380 --> 00:33:27.220
<v Speaker 1>Or if you are doing legal reasoning or tax reasoning,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:27.220 --> 00:33:30.730
<v Speaker 1>which as I've said, is a very interesting domain for

NOTE CONF {"raw":[100,100,98,100,100,100,100,100,100,100]}

00:33:30.730 --> 00:33:33.490
<v Speaker 1>logic, you often end up saying, either I can get

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:33.490 --> 00:33:36.070
<v Speaker 1>this tax perk or I can get this tax perk,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:36.070 --> 00:33:37.960
<v Speaker 1>or possibly both, but maybe not.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:33:41.200 --> 00:33:45.100
<v Speaker 1>Um, so any questions about this?

NOTE CONF {"raw":[100,100,97,100,100,100]}

00:33:45.430 --> 00:33:48.040
<v Speaker 1>Do you believe my argument so far that I have

NOTE CONF {"raw":[100,100,100,100,93,100,100,100,100,100]}

00:33:48.040 --> 00:33:49.750
<v Speaker 1>no choice about what it means?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:33:51.250 --> 00:33:53.560
<v Speaker 1>It's always good if you have no choice because it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:53.560 --> 00:33:54.910
<v Speaker 1>means you're doing things right.

NOTE CONF {"raw":[100,100,100,100,100]}

00:33:58.030 --> 00:34:02.080
<v Speaker 1>Um, so now we have a rule that lets us

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:02.080 --> 00:34:06.670
<v Speaker 1>look at and and on the left or on or

NOTE CONF {"raw":[100,100,52,100,100,100,100,89,36,100]}

00:34:06.670 --> 00:34:09.639
<v Speaker 1>on the right and break it apart into separate propositions,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:09.639 --> 00:34:11.409
<v Speaker 1>which we write down as commas.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:34:13.659 --> 00:34:16.960
<v Speaker 1>Now, again, we have the question what does it mean

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:34:16.960 --> 00:34:18.129
<v Speaker 1>to write that?

NOTE CONF {"raw":[100,100,100]}

00:34:18.310 --> 00:34:22.429
<v Speaker 1>So if I write from D, I get.

NOTE CONF {"raw":[100,100,100,98,100,97,100,100]}

00:34:24.620 --> 00:34:25.879
<v Speaker 1>No propositions.

NOTE CONF {"raw":[100,100]}

00:34:27.649 --> 00:34:29.240
<v Speaker 1>There's only one thing it can mean.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:29.240 --> 00:34:31.129
<v Speaker 1>What's the only thing it can mean?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:32.690 --> 00:34:33.800
<v Speaker 1>D is false.

NOTE CONF {"raw":[96,100,100]}

00:34:34.550 --> 00:34:37.220
<v Speaker 1>So if I had it the other way one nothing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,40,100]}

00:34:37.220 --> 00:34:40.520
<v Speaker 1>entails d, it meant d is true.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:40.820 --> 00:34:42.889
<v Speaker 1>If I flip it to the other side.

NOTE CONF {"raw":[100,69,96,100,100,100,100,100]}

00:34:42.889 --> 00:34:44.179
<v Speaker 1>The magic word duality.

NOTE CONF {"raw":[100,100,100,100]}

00:34:44.179 --> 00:34:45.800
<v Speaker 1>What's the dual of true?

NOTE CONF {"raw":[100,100,100,100,100]}

00:34:45.830 --> 00:34:46.700
<v Speaker 1>It's false.

NOTE CONF {"raw":[100,100]}

00:34:48.139 --> 00:34:51.050
<v Speaker 1>And again I can do the same piece of reasoning.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:51.950 --> 00:34:56.000
<v Speaker 1>D entails nothing, means D entails nothing.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:56.000 --> 00:34:59.210
<v Speaker 1>The empty set, which means d entails the or of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,99,100]}

00:34:59.210 --> 00:35:00.320
<v Speaker 1>the empty set.

NOTE CONF {"raw":[100,100,100]}

00:35:01.100 --> 00:35:02.870
<v Speaker 1>What's the or of the empty set?

NOTE CONF {"raw":[100,100,49,98,100,100,100]}

00:35:02.870 --> 00:35:06.290
<v Speaker 1>Again, when I all things together, I make more things

NOTE CONF {"raw":[100,100,100,57,100,100,100,100,100,100]}

00:35:06.290 --> 00:35:06.680
<v Speaker 1>true.

NOTE CONF {"raw":[100]}

00:35:06.680 --> 00:35:09.860
<v Speaker 1>So when I start with no propositions, the all of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,82,100]}

00:35:09.860 --> 00:35:11.600
<v Speaker 1>no propositions is false.

NOTE CONF {"raw":[100,100,100,100]}

00:35:11.600 --> 00:35:12.650
<v Speaker 1>Nothing is true.

NOTE CONF {"raw":[100,100,100]}

00:35:14.930 --> 00:35:17.510
<v Speaker 1>Um, so I've already said that you are seeing a

NOTE CONF {"raw":[83,100,100,100,100,100,100,100,100,100]}

00:35:17.510 --> 00:35:21.530
<v Speaker 1>pattern between the left and right of an of entails,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:23.240 --> 00:35:25.520
<v Speaker 1>and you're going to see quite a lot more of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:25.520 --> 00:35:27.860
<v Speaker 1>it over the next couple of weeks.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:35:30.710 --> 00:35:33.770
<v Speaker 1>Okay, so I've defined quite a lot of notation and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:33.770 --> 00:35:34.670
<v Speaker 1>quite a lot of ideas.

NOTE CONF {"raw":[100,100,100,100,100]}

00:35:34.670 --> 00:35:35.810
<v Speaker 1>Is that question here.

NOTE CONF {"raw":[100,100,100,100]}

00:35:37.730 --> 00:35:38.390
<v Speaker 2>Why do we.

NOTE CONF {"raw":[94,94,94]}

00:35:41.930 --> 00:35:42.080
<v Speaker 3>Have.

NOTE CONF {"raw":[80]}

00:35:43.160 --> 00:35:47.990
<v Speaker 1>Um, because just on the previous slide, I argue that

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,98,100]}

00:35:47.990 --> 00:35:50.810
<v Speaker 1>comma on the right of a sequence has to mean

NOTE CONF {"raw":[100,100,100,100,100,100,94,100,100,100]}

00:35:50.810 --> 00:35:54.140
<v Speaker 1>or in the same way that on the left.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:35:54.140 --> 00:35:56.540
<v Speaker 1>So I said it meant and on the left.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:35:56.540 --> 00:35:59.720
<v Speaker 1>On the right it has to mean or because contra

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,27]}

00:35:59.720 --> 00:36:02.450
<v Speaker 1>position lets me flip things from back to side.

NOTE CONF {"raw":[58,98,100,100,100,100,100,100,100]}

00:36:02.450 --> 00:36:04.850
<v Speaker 1>And when I flip around to the other side, it

NOTE CONF {"raw":[100,100,100,100,42,100,100,100,100,100]}

00:36:04.850 --> 00:36:05.810
<v Speaker 1>becomes an Or.

NOTE CONF {"raw":[100,100,60]}

00:36:09.980 --> 00:36:14.240
<v Speaker 1>And so if I think about so my definition of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:14.240 --> 00:36:18.180
<v Speaker 1>what it means for D to entail a set of

NOTE CONF {"raw":[100,100,100,100,85,100,100,100,100,100]}

00:36:18.180 --> 00:36:21.300
<v Speaker 1>assumptions is that V entails the all of all the

NOTE CONF {"raw":[100,100,100,43,100,100,60,100,100,100]}

00:36:21.300 --> 00:36:24.960
<v Speaker 1>assumptions on the right and the or of no assumptions

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:24.960 --> 00:36:26.430
<v Speaker 1>at all is false.

NOTE CONF {"raw":[100,100,100,100]}

00:36:32.730 --> 00:36:33.270
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:36:33.690 --> 00:36:37.050
<v Speaker 1>Other questions requests for further clarification.

NOTE CONF {"raw":[76,100,100,100,100,100]}

00:36:45.390 --> 00:36:45.750
<v Speaker 1>Okay.

NOTE CONF {"raw":[100]}

00:36:45.750 --> 00:36:51.240
<v Speaker 1>So this was introducing notation and a meaning for notation

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:51.240 --> 00:36:52.560
<v Speaker 1>and some definitions.

NOTE CONF {"raw":[100,100,100]}

00:36:53.940 --> 00:36:56.970
<v Speaker 1>We are now entering the 20th century.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:36:57.000 --> 00:37:02.040
<v Speaker 1>Finally I've talked about sequence bunches of things on the

NOTE CONF {"raw":[100,100,100,100,92,100,100,100,100,100]}

00:37:02.040 --> 00:37:04.260
<v Speaker 1>left and bunches of things on the right.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:37:06.180 --> 00:37:12.330
<v Speaker 1>So I can think about writing some kind of super

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:12.330 --> 00:37:15.120
<v Speaker 1>general sequence where I just have a set of formulas

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:15.120 --> 00:37:18.420
<v Speaker 1>on the left, which I write as a list because

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:18.420 --> 00:37:20.610
<v Speaker 1>it's easier to write things down as a list, but

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:37:20.610 --> 00:37:21.810
<v Speaker 1>it's really a set.

NOTE CONF {"raw":[100,100,100,100]}

00:37:21.960 --> 00:37:23.850
<v Speaker 1>And when you do it in Haskell, you're going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:23.850 --> 00:37:25.800
<v Speaker 1>be using lists because it's convenient.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:37:25.800 --> 00:37:30.660
<v Speaker 1>But really, they're standing for sets and we have a

NOTE CONF {"raw":[100,100,99,100,100,100,100,100,100,100]}

00:37:30.660 --> 00:37:31.680
<v Speaker 1>bunch on the right.

NOTE CONF {"raw":[100,100,100,100]}

00:37:32.190 --> 00:37:35.370
<v Speaker 1>How many of you know your Greek alphabet off by

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:35.370 --> 00:37:35.970
<v Speaker 1>heart?

NOTE CONF {"raw":[100]}

00:37:38.670 --> 00:37:38.970
<v Speaker 1>Right.

NOTE CONF {"raw":[92]}

00:37:39.030 --> 00:37:40.350
<v Speaker 1>That's a lot of you who have a lot of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:40.350 --> 00:37:44.040
<v Speaker 1>learning to do, because mathematicians are addicted to Greek letters,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:44.310 --> 00:37:46.740
<v Speaker 1>and your life will be much easier if you just

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:46.740 --> 00:37:47.790
<v Speaker 1>learn them all.

NOTE CONF {"raw":[100,100,100]}

00:37:48.960 --> 00:37:50.790
<v Speaker 1>And things could be very much worse.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:50.790 --> 00:37:53.340
<v Speaker 1>There are many other much richer alphabets that we could

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:53.340 --> 00:37:53.910
<v Speaker 1>use.

NOTE CONF {"raw":[100]}

00:37:55.860 --> 00:37:59.490
<v Speaker 1>Um, there is one Russian letter that is used in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:59.490 --> 00:38:02.340
<v Speaker 1>mathematics reasonably frequently, but only one.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:38:05.130 --> 00:38:08.520
<v Speaker 1>So this is gamma and this is delta.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:38:10.020 --> 00:38:13.320
<v Speaker 1>Um, I think some of you are engineers.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:38:13.320 --> 00:38:16.270
<v Speaker 1>You'll probably see Gammas and Deltas kicking around the engineering

NOTE CONF {"raw":[100,100,100,100,100,99,100,100,100,100]}

00:38:16.270 --> 00:38:17.230
<v Speaker 1>maths as well.

NOTE CONF {"raw":[100,100,100]}

00:38:19.210 --> 00:38:26.350
<v Speaker 1>There's a notational convention that mathematicians and logicians in particular

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:26.350 --> 00:38:29.500
<v Speaker 1>tend to use, so we tend to use uppercase Greek

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:29.500 --> 00:38:33.790
<v Speaker 1>letters to talk about sets of things and lowercase Greek

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:33.790 --> 00:38:36.250
<v Speaker 1>letters to talk about individual things.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:38:37.120 --> 00:38:42.460
<v Speaker 1>So for those of you who haven't come across, this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:42.460 --> 00:38:43.120
<v Speaker 1>is gamma.

NOTE CONF {"raw":[100,100]}

00:38:45.550 --> 00:38:46.690
<v Speaker 1>This is delta.

NOTE CONF {"raw":[100,100,100]}

00:38:46.870 --> 00:38:49.270
<v Speaker 1>And the lowercase forms are.

NOTE CONF {"raw":[100,100,100,100,100]}

00:38:52.480 --> 00:38:52.870
<v Speaker 2>That.

NOTE CONF {"raw":[100]}

00:38:55.540 --> 00:38:56.620
<v Speaker 1>So here.

NOTE CONF {"raw":[100,100]}

00:38:57.700 --> 00:38:59.860
<v Speaker 1>And this is the this is early in the Greek

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:59.860 --> 00:39:00.340
<v Speaker 1>alphabet.

NOTE CONF {"raw":[100]}

00:39:00.340 --> 00:39:03.370
<v Speaker 1>So we usually use things early in the beat in

NOTE CONF {"raw":[100,100,100,100,100,99,100,100,73,100]}

00:39:03.370 --> 00:39:06.700
<v Speaker 1>the alphabet for sets of formulas.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:39:08.380 --> 00:39:11.590
<v Speaker 1>So this is an example of how we would write

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:11.590 --> 00:39:13.930
<v Speaker 1>one of our modern sequence.

NOTE CONF {"raw":[100,100,100,100,100]}

00:39:15.730 --> 00:39:16.720
<v Speaker 1>Updated sequence.

NOTE CONF {"raw":[100,100]}

00:39:16.720 --> 00:39:18.760
<v Speaker 1>We have a bunch of conclusions on the left, and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:18.760 --> 00:39:21.730
<v Speaker 1>that means that we assume the end of all of

NOTE CONF {"raw":[100,100,100,100,100,100,87,100,100,100]}

00:39:21.730 --> 00:39:22.240
<v Speaker 1>them.

NOTE CONF {"raw":[100]}

00:39:22.900 --> 00:39:26.230
<v Speaker 1>And from that, we can conclude some of the things

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:26.230 --> 00:39:30.370
<v Speaker 1>on the right, so, so slightly unnatural.

NOTE CONF {"raw":[100,100,100,52,100,100,100]}

00:39:30.370 --> 00:39:33.880
<v Speaker 1>It took a little while to generalise to having sets

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,97]}

00:39:33.880 --> 00:39:36.940
<v Speaker 1>of things on the right, but it makes things work

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:36.940 --> 00:39:39.220
<v Speaker 1>because it makes things completely symmetrical.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:39:39.370 --> 00:39:41.800
<v Speaker 1>There is a version of this logic where you restrict

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:41.800 --> 00:39:44.350
<v Speaker 1>yourself to only allowing one thing on the right, but

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:44.350 --> 00:39:45.970
<v Speaker 1>it's nothing like as clean.

NOTE CONF {"raw":[100,100,100,100,100]}

00:39:47.080 --> 00:39:50.950
<v Speaker 1>So this is the kind of sequence that was invented

NOTE CONF {"raw":[100,100,100,100,100,100,86,100,100,100]}

00:39:50.950 --> 00:39:53.050
<v Speaker 1>by Gerhard Jensen.

NOTE CONF {"raw":[100,100,100]}

00:39:54.820 --> 00:39:55.150
<v Speaker 1>Um.

NOTE CONF {"raw":[100]}

00:39:57.700 --> 00:39:59.650
<v Speaker 1>I don't know, what do you think he looks like?

NOTE CONF {"raw":[100,100,100,100,76,100,100,100,100,100]}

00:40:07.000 --> 00:40:07.360
<v Speaker 1>Um.

NOTE CONF {"raw":[100]}

00:40:09.400 --> 00:40:11.920
<v Speaker 1>Very, very clever guy.

NOTE CONF {"raw":[100,100,100,100]}

00:40:12.500 --> 00:40:16.910
<v Speaker 1>responsible for much of the foundations of logic and proof

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:16.910 --> 00:40:19.040
<v Speaker 1>theory in the 20th century.

NOTE CONF {"raw":[100,100,100,100,100]}

00:40:20.780 --> 00:40:25.040
<v Speaker 1>But he had some personal defects as we would see

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:25.040 --> 00:40:25.460
<v Speaker 1>them.

NOTE CONF {"raw":[100]}

00:40:26.090 --> 00:40:28.430
<v Speaker 1>Date of death 1945.

NOTE CONF {"raw":[100,100,100,100]}

00:40:28.460 --> 00:40:31.880
<v Speaker 1>Any guesses about what might have happened in 1945?

NOTE CONF {"raw":[100,100,81,100,100,100,100,100,100]}

00:40:37.820 --> 00:40:39.770
<v Speaker 1>Um, well, he, uh.

NOTE CONF {"raw":[100,89,69,68]}

00:40:40.340 --> 00:40:40.880
<v Speaker 1>He didn't.

NOTE CONF {"raw":[100,100]}

00:40:42.920 --> 00:40:46.220
<v Speaker 1>He was in the Russian zone of Germany, and Jensen

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:46.220 --> 00:40:48.860
<v Speaker 1>was actually a reasonably enthusiastic Nazi.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:40:49.490 --> 00:40:52.100
<v Speaker 1>And being a prisoner of war in a Russian prison

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:52.100 --> 00:40:54.560
<v Speaker 1>camp at the end of the Second World War was

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:54.560 --> 00:40:57.530
<v Speaker 1>not a good place for enthusiastic Nazis, so he did

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:57.530 --> 00:40:58.910
<v Speaker 1>not survive very long.

NOTE CONF {"raw":[100,100,100,100]}

00:41:02.000 --> 00:41:04.520
<v Speaker 1>Um, which just goes to show that logicians are not

NOTE CONF {"raw":[100,90,100,100,100,100,100,100,100,100]}

00:41:04.520 --> 00:41:07.700
<v Speaker 1>necessarily nice people, but maybe you know that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:41:07.700 --> 00:41:11.570
<v Speaker 1>Anyway, so what does this mean?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:41:11.750 --> 00:41:12.980
<v Speaker 1>What does the secret mean?

NOTE CONF {"raw":[100,100,100,100,100]}

00:41:12.980 --> 00:41:13.730
<v Speaker 1>As I said.

NOTE CONF {"raw":[100,100,100]}

00:41:13.910 --> 00:41:21.470
<v Speaker 1>If everything in gamma holds, then something in Delta holds.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:25.700 --> 00:41:27.860
<v Speaker 1>Am I going to continue or am I going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:27.860 --> 00:41:28.580
<v Speaker 1>stop now?

NOTE CONF {"raw":[100,68]}

00:41:28.580 --> 00:41:29.870
<v Speaker 1>I'll continue for a little bit.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:41:30.620 --> 00:41:30.950
<v Speaker 1>Um.

NOTE CONF {"raw":[100]}

00:41:34.160 --> 00:41:38.030
<v Speaker 1>I want to think a little bit more about what

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:38.030 --> 00:41:42.110
<v Speaker 1>this comma means, as we might use it in everyday

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:42.110 --> 00:41:43.340
<v Speaker 1>logical reasoning.

NOTE CONF {"raw":[100,100]}

00:41:43.610 --> 00:41:45.920
<v Speaker 1>Because on the face of it, then why do we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:45.920 --> 00:41:48.830
<v Speaker 1>want to know that something in Delta holds?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:41:48.830 --> 00:41:51.590
<v Speaker 1>Generally, you want to know that something specific holds.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:41:57.020 --> 00:42:00.830
<v Speaker 1>One way to split it apart is to say, well,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:00.830 --> 00:42:01.940
<v Speaker 1>what are we saying?

NOTE CONF {"raw":[100,100,100,100]}

00:42:01.940 --> 00:42:04.130
<v Speaker 1>We're saying if we know the end of the things

NOTE CONF {"raw":[100,100,100,100,100,100,95,100,100,100]}

00:42:04.130 --> 00:42:07.940
<v Speaker 1>on the left, then we can conclude the all of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,76]}

00:42:07.940 --> 00:42:11.460
<v Speaker 1>the things on the right and the common notation lets

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:11.460 --> 00:42:14.400
<v Speaker 1>us split these things into different parts that might be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:14.400 --> 00:42:16.110
<v Speaker 1>of interest to us.

NOTE CONF {"raw":[100,100,100,100]}

00:42:17.940 --> 00:42:24.510
<v Speaker 1>So often the way to think about it is not

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:24.510 --> 00:42:29.910
<v Speaker 1>to think of g a as being simply g and

NOTE CONF {"raw":[100,100,100,99,100,100,100,100,100,100]}

00:42:29.910 --> 00:42:33.840
<v Speaker 1>A, and not to think of some big set gamma

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:34.290 --> 00:42:38.340
<v Speaker 1>and gamma comma A being all the things in gamma

NOTE CONF {"raw":[100,100,100,81,100,100,100,100,100,100]}

00:42:38.340 --> 00:42:39.630
<v Speaker 1>together with a.

NOTE CONF {"raw":[100,100,100]}

00:42:39.900 --> 00:42:44.190
<v Speaker 1>But to think about gamma as the set of assumptions

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:44.190 --> 00:42:45.990
<v Speaker 1>that you're currently working with.

NOTE CONF {"raw":[100,73,100,100,100]}

00:42:46.650 --> 00:42:49.560
<v Speaker 1>And A is one of the things that you're actually

NOTE CONF {"raw":[100,100,81,100,100,100,100,100,100,100]}

00:42:49.560 --> 00:42:51.360
<v Speaker 1>working on at the moment.

NOTE CONF {"raw":[100,100,100,100,100]}

00:42:52.500 --> 00:42:56.220
<v Speaker 1>So typically a step in a proof says I've got

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:56.220 --> 00:42:59.070
<v Speaker 1>a bunch of assumptions, gamma that I've been working with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:59.070 --> 00:43:00.000
<v Speaker 1>all the way along.

NOTE CONF {"raw":[100,100,100,100]}

00:43:00.000 --> 00:43:02.130
<v Speaker 1>And they're not changing as I do the proof.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:02.430 --> 00:43:05.310
<v Speaker 1>And then I've got some assumption A that I'm actually

NOTE CONF {"raw":[100,100,100,100,100,100,98,100,100,100]}

00:43:05.310 --> 00:43:08.250
<v Speaker 1>working with in order to try to get my conclusion

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:08.280 --> 00:43:08.790
<v Speaker 1>be?

NOTE CONF {"raw":[80]}

00:43:11.250 --> 00:43:12.630
<v Speaker 1>What does this mean?

NOTE CONF {"raw":[100,100,100,100]}

00:43:12.630 --> 00:43:13.380
<v Speaker 1>Kind of.

NOTE CONF {"raw":[100,100]}

00:43:13.380 --> 00:43:17.820
<v Speaker 1>It means I'm restricting the reasoning about A and B

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:18.210 --> 00:43:22.170
<v Speaker 1>to a part of the universe that behaves nicely.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:22.410 --> 00:43:25.470
<v Speaker 1>So one way to read this sequence is to say

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:25.470 --> 00:43:28.260
<v Speaker 1>in the bit of the universe where gamma holds.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:28.260 --> 00:43:31.440
<v Speaker 1>So the nice green part of this universe, for example,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:31.770 --> 00:43:35.400
<v Speaker 1>then I know that a comma B is true.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:35.730 --> 00:43:38.700
<v Speaker 1>So it lets me write kind of a more general

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:38.700 --> 00:43:40.800
<v Speaker 1>Venn diagram kind of universe.

NOTE CONF {"raw":[100,100,100,100,100]}

00:43:41.010 --> 00:43:44.130
<v Speaker 1>Split the universe into the good part gamma and the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:44.130 --> 00:43:46.680
<v Speaker 1>good part where gamma doesn't hold.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:43:47.070 --> 00:43:50.730
<v Speaker 1>And then I'm doing my A entails B reasoning only

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:50.730 --> 00:43:52.830
<v Speaker 1>inside the green bit of the universe.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:00.270 --> 00:44:01.620
<v Speaker 1>Why do we want to do this?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:01.620 --> 00:44:06.150
<v Speaker 1>Because in any normal form of reasoning or in any

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:06.180 --> 00:44:10.090
<v Speaker 1>yes, any normal form of reasoning, especially in mathematical or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:10.090 --> 00:44:11.470
<v Speaker 1>logical reasoning.

NOTE CONF {"raw":[100,100]}

00:44:11.860 --> 00:44:15.820
<v Speaker 1>Then usually there's an enormous amount of material that is,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:15.820 --> 00:44:20.500
<v Speaker 1>strictly speaking, part of your assumptions, but you don't want

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:20.500 --> 00:44:22.900
<v Speaker 1>to be thinking about it as your assumptions.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:44:23.920 --> 00:44:28.360
<v Speaker 1>Um, so for example.

NOTE CONF {"raw":[100,100,100,100]}

00:44:33.490 --> 00:44:36.940
<v Speaker 1>Let's take my favourite example of tax law.

NOTE CONF {"raw":[100,100,100,66,100,100,100,100]}

00:44:37.600 --> 00:44:42.760
<v Speaker 1>There are tens of thousands of pages of tax legislation.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:43.270 --> 00:44:46.510
<v Speaker 1>They're all part of the assumptions you have when you're

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:46.510 --> 00:44:48.850
<v Speaker 1>trying to work out how much tax you pay.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:44:49.330 --> 00:44:52.480
<v Speaker 1>But in most cases, they're part of the background, and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:52.480 --> 00:44:55.960
<v Speaker 1>you don't need those specific things at the front of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:55.960 --> 00:44:58.900
<v Speaker 1>your mind, although maybe you might need one of them.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:58.900 --> 00:45:01.180
<v Speaker 1>When you dig into the details to deal with the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:01.180 --> 00:45:03.580
<v Speaker 1>tax perk you're actually trying to get.

NOTE CONF {"raw":[100,45,100,100,100,100,100]}

00:45:03.610 --> 00:45:04.690
<v Speaker 1>Sorry about that.

NOTE CONF {"raw":[100,100,100]}

00:45:10.030 --> 00:45:11.230
<v Speaker 2>That's because I'm not plugged in.

NOTE CONF {"raw":[61,100,100,100,100,100]}

00:45:12.100 --> 00:45:12.490
<v Speaker 1>Um.

NOTE CONF {"raw":[100]}

00:45:15.400 --> 00:45:16.870
<v Speaker 1>This is why I hate outlook.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:45:16.870 --> 00:45:19.810
<v Speaker 1>Because it puts things in my calendar without my consent

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:19.810 --> 00:45:21.340
<v Speaker 1>and then flashes them up at me.

NOTE CONF {"raw":[100,100,100,100,98,61,100]}

00:45:22.630 --> 00:45:25.600
<v Speaker 1>Um, that's why I hate Microsoft in general.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:45:25.600 --> 00:45:32.170
<v Speaker 1>But, um, so a typical piece of reasoning has a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:32.170 --> 00:45:36.280
<v Speaker 1>bunch of assumptions that are carried throughout the proof, more

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:36.280 --> 00:45:40.480
<v Speaker 1>or less unchanged together with the bits you're actually working

NOTE CONF {"raw":[100,100,100,100,100,100,73,100,100,100]}

00:45:40.480 --> 00:45:40.960
<v Speaker 1>on.

NOTE CONF {"raw":[100]}

00:45:41.410 --> 00:45:46.510
<v Speaker 1>And I think we will make that as a statement

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:46.510 --> 00:45:48.250
<v Speaker 1>for the end of today.

NOTE CONF {"raw":[100,100,100,100,100]}

00:45:48.460 --> 00:45:52.720
<v Speaker 1>And then when we start tomorrow, we'll see an example

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:52.720 --> 00:45:55.390
<v Speaker 1>of manipulating under assumptions.

NOTE CONF {"raw":[100,100,100,100]}

00:45:55.390 --> 00:45:59.350
<v Speaker 1>And then we'll go on to see more about the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:59.350 --> 00:46:00.340
<v Speaker 1>sequent calculus.

NOTE CONF {"raw":[64,100]}

00:46:00.340 --> 00:46:02.560
<v Speaker 1>And if I'm lucky, we might even get to finishing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:02.560 --> 00:46:03.250
<v Speaker 1>the proof.

NOTE CONF {"raw":[100,100]}

00:46:03.250 --> 00:46:07.070
<v Speaker 1>So just to warn you, it quite often happens that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:07.070 --> 00:46:09.950
<v Speaker 1>this lecture tends to run over into the next week.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:10.490 --> 00:46:12.590
<v Speaker 1>How many of you are feeling that all this is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:12.590 --> 00:46:14.000
<v Speaker 1>going quite fast?

NOTE CONF {"raw":[100,100,100]}

00:46:17.180 --> 00:46:18.140
<v Speaker 1>How many of you feeling?

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:18.140 --> 00:46:20.030
<v Speaker 1>It's really going a bit too fast.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:46:21.680 --> 00:46:24.110
<v Speaker 1>Okay, who feels it's going too slowly?

NOTE CONF {"raw":[100,100,100,100,100,78,100]}

00:46:26.060 --> 00:46:30.020
<v Speaker 1>Okay, well, many of you will be relatively relieved to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,83]}

00:46:30.020 --> 00:46:32.840
<v Speaker 1>know we're going to slowly wind down for a bit.

NOTE CONF {"raw":[83,100,100,100,100,100,100,100,100,100]}

00:46:32.840 --> 00:46:37.400
<v Speaker 1>So this week is continuing at the pace.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:46:37.400 --> 00:46:39.980
<v Speaker 1>Then week five will relax a bit.

NOTE CONF {"raw":[100,100,100,88,100,100,100]}

00:46:40.010 --> 00:46:43.430
<v Speaker 1>Week six will relax a bit because we need some

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:43.430 --> 00:46:46.520
<v Speaker 1>revision time and we need some examples classes.

NOTE CONF {"raw":[100,100,100,100,100,100,100,76]}

00:46:46.640 --> 00:46:49.400
<v Speaker 1>And we all need a break in week six right?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:50.000 --> 00:46:50.990
<v Speaker 1>See you tomorrow.

NOTE CONF {"raw":[100,100,100]}

00:46:57.530 --> 00:47:00.590
<v Speaker 1>And anybody from my tutorial group, please come and have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:00.590 --> 00:47:01.730
<v Speaker 1>a word with me now.

NOTE CONF {"raw":[100,100,100,100,100]}
