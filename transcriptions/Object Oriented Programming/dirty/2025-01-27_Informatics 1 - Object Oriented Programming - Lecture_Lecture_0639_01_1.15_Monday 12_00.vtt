WEBVTT

00:00:05.560 --> 00:00:06.920
<v Speaker 0>Now that you know who we are.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:00:07.040 --> 00:00:09.360
<v Speaker 0>Please scan the QR code to find out more about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:09.360 --> 00:00:09.960
<v Speaker 0>other sessions.

NOTE CONF {"raw":[90,100]}

00:00:09.960 --> 00:00:12.200
<v Speaker 0>You might have seen our posters in Appleton.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:00:12.680 --> 00:00:14.400
<v Speaker 0>So we're looking forward to seeing you.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:00:14.440 --> 00:00:16.840
<v Speaker 0>Come along, get some free snacks and chat to all

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,79]}

00:00:16.840 --> 00:00:17.560
<v Speaker 0>the students.

NOTE CONF {"raw":[79,100]}

00:00:19.920 --> 00:00:22.360
<v Speaker 1>This semester we're also going to recruit new leaders at

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:22.360 --> 00:00:23.160
<v Speaker 1>the end of the semester.

NOTE CONF {"raw":[100,100,100,100,100]}

00:00:23.240 --> 00:00:26.080
<v Speaker 1>So if you're potentially interested in getting involved helping out

NOTE CONF {"raw":[100,100,100,83,100,100,100,100,100,100]}

00:00:26.080 --> 00:00:28.440
<v Speaker 1>next year, and it's a really great and fun thing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:28.440 --> 00:00:31.560
<v Speaker 1>to do, so go for it and follow our Instagram

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:31.560 --> 00:00:33.480
<v Speaker 1>if you're interested in getting updates.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:00:33.480 --> 00:00:36.000
<v Speaker 1>Because we occasionally, usually we're always in the same room.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:36.040 --> 00:00:38.120
<v Speaker 1>Occasionally we have to change room, but usually we're always

NOTE CONF {"raw":[100,95,100,100,100,100,100,100,66,100]}

00:00:38.120 --> 00:00:38.360
<v Speaker 1>there.

NOTE CONF {"raw":[100]}

00:00:38.680 --> 00:00:39.000
<v Speaker 1>Cool.

NOTE CONF {"raw":[100]}

00:00:39.360 --> 00:00:40.200
<v Speaker 0>Thank you so much.

NOTE CONF {"raw":[100,100,100,100]}

00:00:40.960 --> 00:00:42.280
<v Speaker 2>Thanks very much, guys.

NOTE CONF {"raw":[99,96,100,100]}

00:00:43.040 --> 00:00:45.760
<v Speaker 2>Um, so just to emphasise, you totally should go along

NOTE CONF {"raw":[87,100,100,100,100,100,100,100,100,100]}

00:00:45.760 --> 00:00:46.320
<v Speaker 2>to us.

NOTE CONF {"raw":[100,48]}

00:00:46.320 --> 00:00:48.120
<v Speaker 2>We get asked loads of questions, especially about things like

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:48.120 --> 00:00:50.120
<v Speaker 2>internships and all kinds of things these guys are doing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:50.120 --> 00:00:51.680
<v Speaker 2>anyway, and they do it really brilliantly.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:00:51.680 --> 00:00:53.040
<v Speaker 2>So do go to empowers.

NOTE CONF {"raw":[100,100,100,100,43]}

00:00:53.040 --> 00:00:54.080
<v Speaker 2>You'll get a lot out of it.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:00:54.120 --> 00:00:55.680
<v Speaker 2>It's going to make your lives way easier.

NOTE CONF {"raw":[100,100,100,100,100,93,100,100]}

00:00:55.760 --> 00:00:56.560
<v Speaker 2>So thanks very much.

NOTE CONF {"raw":[100,100,100,100]}

00:00:56.560 --> 00:00:57.640
<v Speaker 2>I think we got one more.

NOTE CONF {"raw":[100,100,91,100,100,100]}

00:00:59.080 --> 00:01:00.530
<v Speaker 2>Did you send me a slide as well?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:01:01.130 --> 00:01:01.530
<v Speaker 2>Oh, God.

NOTE CONF {"raw":[100,100]}

00:01:01.530 --> 00:01:01.890
<v Speaker 2>Sorry.

NOTE CONF {"raw":[100]}

00:01:02.490 --> 00:01:02.810
<v Speaker 2>Yeah.

NOTE CONF {"raw":[66]}

00:01:02.810 --> 00:01:03.610
<v Speaker 2>Thanks for coming.

NOTE CONF {"raw":[100,100,100]}

00:01:05.570 --> 00:01:06.130
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:01:06.290 --> 00:01:07.090
<v Speaker 2>So sorry.

NOTE CONF {"raw":[100,100]}

00:01:07.130 --> 00:01:08.370
<v Speaker 2>What did you send me?

NOTE CONF {"raw":[100,100,100,100,100]}

00:01:09.610 --> 00:01:09.850
<v Speaker 2>Yeah.

NOTE CONF {"raw":[93]}

00:01:09.890 --> 00:01:10.490
<v Speaker 2>Here we go.

NOTE CONF {"raw":[100,100,100]}

00:01:10.530 --> 00:01:11.890
<v Speaker 2>I did download it.

NOTE CONF {"raw":[100,100,100,100]}

00:01:13.930 --> 00:01:16.770
<v Speaker 3>Okay, I just pick this one up.

NOTE CONF {"raw":[100,93,100,95,100,100,85]}

00:01:16.810 --> 00:01:17.090
<v Speaker 2>Oh, no.

NOTE CONF {"raw":[100,100]}

00:01:17.090 --> 00:01:18.570
<v Speaker 2>Yeah, just use this one, actually.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:01:18.890 --> 00:01:19.330
<v Speaker 2>There you go.

NOTE CONF {"raw":[86,100,100]}

00:01:20.450 --> 00:01:21.170
<v Speaker 3>Thank you so much.

NOTE CONF {"raw":[100,100,100,100]}

00:01:52.570 --> 00:01:53.090
<v Speaker 3>Testing.

NOTE CONF {"raw":[100]}

00:01:53.210 --> 00:01:53.930
<v Speaker 3>Oh, there we go.

NOTE CONF {"raw":[100,100,100,100]}

00:01:54.450 --> 00:01:55.050
<v Speaker 3>Perfect.

NOTE CONF {"raw":[100]}

00:01:55.450 --> 00:01:56.650
<v Speaker 3>If I just give you a note for you to

NOTE CONF {"raw":[100,100,100,100,100,100,91,100,100,100]}

00:01:56.650 --> 00:01:57.930
<v Speaker 3>just switch the slide over it, that's fine.

NOTE CONF {"raw":[100,100,100,100,100,71,100,100]}

00:01:58.550 --> 00:01:59.110
<v Speaker 3>Perfect.

NOTE CONF {"raw":[71]}

00:02:00.230 --> 00:02:00.710
<v Speaker 3>Brilliant.

NOTE CONF {"raw":[50]}

00:02:00.870 --> 00:02:01.110
<v Speaker 3>All right.

NOTE CONF {"raw":[80,100]}

00:02:01.150 --> 00:02:01.830
<v Speaker 3>Hello, everyone.

NOTE CONF {"raw":[100,100]}

00:02:02.150 --> 00:02:03.310
<v Speaker 3>Um, yeah.

NOTE CONF {"raw":[97,100]}

00:02:03.310 --> 00:02:05.070
<v Speaker 3>Welcome to your average F1 b lecture.

NOTE CONF {"raw":[100,100,100,100,40,82,100]}

00:02:05.110 --> 00:02:07.070
<v Speaker 3>I'm here to talk to you guys about Hagler, Boro.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:07.350 --> 00:02:07.750
<v Speaker 3>Hagler.

NOTE CONF {"raw":[100]}

00:02:07.750 --> 00:02:09.910
<v Speaker 3>Boro is back for its 11th iteration this year.

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100]}

00:02:09.910 --> 00:02:13.050
<v Speaker 3>So pack for 2025 is coming on the first the

NOTE CONF {"raw":[100,100,51,100,100,100,100,100,100,100]}

00:02:13.050 --> 00:02:13.710
<v Speaker 3>2nd of March.

NOTE CONF {"raw":[100,100,100]}

00:02:13.790 --> 00:02:15.990
<v Speaker 3>If you don't know what hack is it's our annual

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:16.030 --> 00:02:17.270
<v Speaker 3>24 hour hackathon.

NOTE CONF {"raw":[100,100,100]}

00:02:17.390 --> 00:02:20.150
<v Speaker 3>It's run by Comstock in collaboration with other societies.

NOTE CONF {"raw":[100,100,100,76,100,100,100,100,100]}

00:02:20.150 --> 00:02:21.990
<v Speaker 3>And the school really likes it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:02:22.470 --> 00:02:25.590
<v Speaker 3>Um, it's an absolutely amazing opportunity for your CV.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:02:25.630 --> 00:02:27.670
<v Speaker 3>It's an absolutely amazing opportunity for any of you to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:27.670 --> 00:02:29.310
<v Speaker 3>get involved with your very first hackathon.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:02:29.470 --> 00:02:31.550
<v Speaker 3>You do not need mountains of experience.

NOTE CONF {"raw":[100,100,100,100,52,73,100]}

00:02:31.950 --> 00:02:34.790
<v Speaker 3>Um, there's plenty of challenges ranging from easier to harder

NOTE CONF {"raw":[95,100,100,100,100,100,100,100,100,100]}

00:02:34.790 --> 00:02:35.030
<v Speaker 3>ones.

NOTE CONF {"raw":[100]}

00:02:35.030 --> 00:02:36.390
<v Speaker 3>You can sign up with your friends.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:02:37.070 --> 00:02:38.430
<v Speaker 3>Um, there's plenty of prize to be won.

NOTE CONF {"raw":[100,100,100,100,70,100,100,98]}

00:02:38.430 --> 00:02:40.350
<v Speaker 3>We have very big companies sponsoring us.

NOTE CONF {"raw":[100,100,100,100,97,100,100]}

00:02:40.350 --> 00:02:42.430
<v Speaker 3>I can't reveal who they are just yet because those

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,38]}

00:02:42.430 --> 00:02:43.990
<v Speaker 3>are being reviewed by our social media team.

NOTE CONF {"raw":[64,100,51,100,100,100,100,100]}

00:02:44.150 --> 00:02:46.270
<v Speaker 3>But in the past few years, we had big names

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:46.270 --> 00:02:49.510
<v Speaker 3>like Blackrock a few years ago, and maybe like at

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,74]}

00:02:49.510 --> 00:02:51.070
<v Speaker 3>companies like Optima, I'm pretty sure.

NOTE CONF {"raw":[100,100,47,100,100,100]}

00:02:51.150 --> 00:02:53.190
<v Speaker 3>So, you know, that might give you an idea of

NOTE CONF {"raw":[100,100,100,77,100,100,100,100,100,100]}

00:02:53.230 --> 00:02:54.470
<v Speaker 3>who we might be getting this year.

NOTE CONF {"raw":[100,100,100,100,86,100,93]}

00:02:55.030 --> 00:02:56.790
<v Speaker 3>Um, yeah.

NOTE CONF {"raw":[100,98]}

00:02:56.790 --> 00:02:59.200
<v Speaker 3>So basically, all I'm here to tell you guys and

NOTE CONF {"raw":[100,100,63,100,100,100,100,100,100,100]}

00:02:59.200 --> 00:03:00.280
<v Speaker 3>ask you is that you get involved.

NOTE CONF {"raw":[100,100,70,60,100,100,100]}

00:03:00.320 --> 00:03:01.560
<v Speaker 3>Try and apply for it again.

NOTE CONF {"raw":[90,90,100,100,100,100]}

00:03:01.560 --> 00:03:03.040
<v Speaker 3>It's really great for your CV's.

NOTE CONF {"raw":[100,100,100,100,100,46]}

00:03:03.240 --> 00:03:05.640
<v Speaker 3>If you've never done a hackathon before, please try and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:05.640 --> 00:03:07.640
<v Speaker 3>get in on this one because this is the big

NOTE CONF {"raw":[100,95,97,100,100,100,100,100,100,100]}

00:03:07.640 --> 00:03:07.880
<v Speaker 3>one.

NOTE CONF {"raw":[100]}

00:03:07.880 --> 00:03:10.560
<v Speaker 3>This is the one that the School of Informatics probably

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:10.560 --> 00:03:12.760
<v Speaker 3>treats as the biggest one in the university, and it's

NOTE CONF {"raw":[100,98,100,100,100,100,100,100,100,100]}

00:03:12.760 --> 00:03:14.040
<v Speaker 3>the biggest hackathon in Scotland.

NOTE CONF {"raw":[100,100,100,100,100]}

00:03:14.040 --> 00:03:16.320
<v Speaker 3>So save the date 1st or 2nd of March.

NOTE CONF {"raw":[100,100,100,75,100,100,100,100,100]}

00:03:17.080 --> 00:03:19.800
<v Speaker 3>And if we just switch the slide there, there's the

NOTE CONF {"raw":[100,100,100,100,100,100,92,100,92,100]}

00:03:19.800 --> 00:03:20.440
<v Speaker 3>QR codes.

NOTE CONF {"raw":[100,95]}

00:03:20.440 --> 00:03:22.080
<v Speaker 3>So applications are now officially open.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:03:22.080 --> 00:03:23.080
<v Speaker 3>We've opened them today.

NOTE CONF {"raw":[100,100,100,100]}

00:03:23.200 --> 00:03:24.800
<v Speaker 3>We now have a hack our website.

NOTE CONF {"raw":[100,100,100,99,71,42,100]}

00:03:24.800 --> 00:03:26.800
<v Speaker 3>We have an Instagram and a discord.

NOTE CONF {"raw":[100,100,100,100,69,56,100]}

00:03:26.840 --> 00:03:28.800
<v Speaker 3>If you guys just scan any of those QR codes

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:28.800 --> 00:03:31.240
<v Speaker 3>you will be able to um, you'll be able to

NOTE CONF {"raw":[99,99,100,100,100,84,97,100,100,100]}

00:03:31.240 --> 00:03:33.160
<v Speaker 3>apply, you'll be able to be kept in the loop

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:33.160 --> 00:03:34.760
<v Speaker 3>on what we're doing.

NOTE CONF {"raw":[100,100,100,100]}

00:03:34.760 --> 00:03:37.400
<v Speaker 3>And yeah, if I just give you guys some time

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:37.400 --> 00:03:39.280
<v Speaker 3>to scan this QR codes, that'll be great.

NOTE CONF {"raw":[100,100,100,100,100,73,100,100]}

00:03:41.280 --> 00:03:41.960
<v Speaker 2>Thank you so much.

NOTE CONF {"raw":[100,100,100,100]}

00:03:42.200 --> 00:03:42.520
<v Speaker 2>Great.

NOTE CONF {"raw":[100]}

00:03:42.520 --> 00:03:43.480
<v Speaker 2>Thank you very much.

NOTE CONF {"raw":[100,100,100,100]}

00:03:43.480 --> 00:03:46.280
<v Speaker 2>So just to again back that up, I really this

NOTE CONF {"raw":[100,100,97,100,100,100,100,100,100,100]}

00:03:46.280 --> 00:03:47.360
<v Speaker 2>is such a great opportunity.

NOTE CONF {"raw":[100,100,100,100,100]}

00:03:47.400 --> 00:03:49.040
<v Speaker 2>Quite a lot of people have already been asking me

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:49.040 --> 00:03:50.120
<v Speaker 2>about internships and stuff.

NOTE CONF {"raw":[100,100,100,100]}

00:03:50.160 --> 00:03:52.360
<v Speaker 2>Internships are really hard to get after first year, but

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:52.360 --> 00:03:55.360
<v Speaker 2>building up your skills, showing the active being involved in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:55.360 --> 00:03:57.650
<v Speaker 2>bigger projects is exactly the way you get to build

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:57.650 --> 00:03:59.730
<v Speaker 2>up that kind of CV presence that's going to help

NOTE CONF {"raw":[100,100,100,100,97,100,76,100,100,100]}

00:03:59.730 --> 00:04:00.090
<v Speaker 2>you a lot.

NOTE CONF {"raw":[100,100,100]}

00:04:00.090 --> 00:04:02.170
<v Speaker 2>And also hackathons are a lot of fun.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:04:02.370 --> 00:04:04.170
<v Speaker 2>So I'll just give you a couple of seconds.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:04:04.170 --> 00:04:06.890
<v Speaker 2>I will put these on the info on the website.

NOTE CONF {"raw":[100,100,100,100,100,100,51,63,28,100]}

00:04:07.570 --> 00:04:09.610
<v Speaker 2>So if you own the open course page.

NOTE CONF {"raw":[100,100,100,100,100,98,96,100]}

00:04:09.610 --> 00:04:11.130
<v Speaker 2>So if you miss this you will be able to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:11.170 --> 00:04:11.650
<v Speaker 2>go there.

NOTE CONF {"raw":[100,100]}

00:04:12.330 --> 00:04:14.610
<v Speaker 2>But we've got a lot to get through today so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:14.610 --> 00:04:16.609
<v Speaker 2>I'm going to push on with that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:04:16.930 --> 00:04:17.410
<v Speaker 2>All right.

NOTE CONF {"raw":[98,98]}

00:04:17.410 --> 00:04:20.810
<v Speaker 2>So let's go back to Woo clap see how people

NOTE CONF {"raw":[100,100,74,100,100,92,75,100,100,100]}

00:04:20.810 --> 00:04:22.610
<v Speaker 2>are feeling about the assignments.

NOTE CONF {"raw":[100,100,100,78,100]}

00:04:23.970 --> 00:04:25.450
<v Speaker 2>Now I've lost everything.

NOTE CONF {"raw":[100,100,100,100]}

00:04:28.570 --> 00:04:30.530
<v Speaker 2>Okay okay.

NOTE CONF {"raw":[100,100]}

00:04:30.570 --> 00:04:33.330
<v Speaker 2>So assignment one is released today I think the email

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:33.330 --> 00:04:34.490
<v Speaker 2>about that has just gone out.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:04:34.490 --> 00:04:36.050
<v Speaker 2>I think it is now live.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:04:36.530 --> 00:04:40.050
<v Speaker 2>Um you will have hopefully you'll have tried the tests.

NOTE CONF {"raw":[66,100,100,100,100,85,92,100,100,100]}

00:04:40.170 --> 00:04:41.650
<v Speaker 2>You have a bit of time to do this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:04:41.850 --> 00:04:42.530
<v Speaker 2>Take it easy.

NOTE CONF {"raw":[100,100,100]}

00:04:42.570 --> 00:04:43.810
<v Speaker 2>Take take your time over it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:04:43.810 --> 00:04:46.010
<v Speaker 2>I would start quite soon, but I wouldn't necessarily rush

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:46.010 --> 00:04:46.250
<v Speaker 2>through.

NOTE CONF {"raw":[100]}

00:04:46.250 --> 00:04:48.450
<v Speaker 2>As I said, I think last week some of it's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,83]}

00:04:48.450 --> 00:04:50.410
<v Speaker 2>going to be quite hard if you're just beginning with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:50.410 --> 00:04:51.970
<v Speaker 2>just the stuff we're covering now.

NOTE CONF {"raw":[100,78,100,100,100,100]}

00:04:51.970 --> 00:04:53.770
<v Speaker 2>So don't get too ahead of yourself, but some of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:53.770 --> 00:04:55.750
<v Speaker 2>them you'll be able to do so.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:04:55.750 --> 00:04:56.510
<v Speaker 2>Just take a look at it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:04:56.550 --> 00:04:57.630
<v Speaker 2>Don't leave it all to the last minute.

NOTE CONF {"raw":[100,100,100,99,91,52,100,100]}

00:04:57.630 --> 00:04:59.310
<v Speaker 2>I sent an email about all of this earlier.

NOTE CONF {"raw":[100,83,100,100,100,100,100,100,100]}

00:04:59.990 --> 00:05:01.070
<v Speaker 2>Um, okay.

NOTE CONF {"raw":[95,100]}

00:05:01.110 --> 00:05:02.590
<v Speaker 2>So we're going to have a very quick look at

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:02.590 --> 00:05:04.110
<v Speaker 2>feedback from last week.

NOTE CONF {"raw":[100,100,100,100]}

00:05:04.710 --> 00:05:07.150
<v Speaker 2>Um, so how much live coding.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:07.150 --> 00:05:09.350
<v Speaker 2>So most people like the live coding, but there's really,

NOTE CONF {"raw":[96,100,100,100,100,100,100,100,100,100]}

00:05:09.470 --> 00:05:13.310
<v Speaker 2>um, a division pretty much exactly equal split between whether

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,100,100]}

00:05:13.310 --> 00:05:15.070
<v Speaker 2>you want it really focussed on live coding and not

NOTE CONF {"raw":[97,100,100,100,98,100,100,100,100,100]}

00:05:15.070 --> 00:05:17.790
<v Speaker 2>so much on the slides, um, or a bit more

NOTE CONF {"raw":[100,100,100,100,100,97,100,100,100,100]}

00:05:17.790 --> 00:05:18.190
<v Speaker 2>mixed up.

NOTE CONF {"raw":[100,100]}

00:05:18.190 --> 00:05:20.270
<v Speaker 2>So I'll try not to just completely ignore the slides,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,94]}

00:05:20.270 --> 00:05:21.790
<v Speaker 2>but the slides are always there for you to go

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:21.790 --> 00:05:23.430
<v Speaker 2>and look at, whereas the live coding isn't.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:05:23.470 --> 00:05:25.430
<v Speaker 2>You'll find there's not there's hardly any live coding.

NOTE CONF {"raw":[100,100,100,61,100,100,100,100,100]}

00:05:25.550 --> 00:05:26.630
<v Speaker 2>There's not much live coding today.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:26.630 --> 00:05:28.470
<v Speaker 2>It depends on the lecture, but I'll bear that in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:28.470 --> 00:05:28.830
<v Speaker 2>mind.

NOTE CONF {"raw":[100]}

00:05:29.430 --> 00:05:30.870
<v Speaker 2>Most of you are enjoying the course.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:05:30.910 --> 00:05:31.310
<v Speaker 2>Yay!

NOTE CONF {"raw":[86]}

00:05:31.350 --> 00:05:33.270
<v Speaker 2>So only 4% are not enjoying the course.

NOTE CONF {"raw":[100,100,100,72,100,100,100,100]}

00:05:33.270 --> 00:05:34.350
<v Speaker 2>That makes me feel quite happy.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:34.350 --> 00:05:35.190
<v Speaker 2>So most of you are.

NOTE CONF {"raw":[100,100,100,100,98]}

00:05:35.230 --> 00:05:35.950
<v Speaker 2>That's great.

NOTE CONF {"raw":[100,100]}

00:05:36.510 --> 00:05:38.190
<v Speaker 2>Um, most of you have not been to a lab

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:38.190 --> 00:05:40.990
<v Speaker 2>session because you don't feel you need the support right

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:40.990 --> 00:05:41.190
<v Speaker 2>now.

NOTE CONF {"raw":[100]}

00:05:41.190 --> 00:05:42.070
<v Speaker 2>That's absolutely fine.

NOTE CONF {"raw":[100,100,100]}

00:05:42.070 --> 00:05:43.830
<v Speaker 2>They're not intended for you to have to go to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:43.830 --> 00:05:44.030
<v Speaker 2>them.

NOTE CONF {"raw":[100]}

00:05:44.030 --> 00:05:46.630
<v Speaker 2>But do I think these are really underused and people

NOTE CONF {"raw":[100,100,100,100,100,100,100,72,100,100]}

00:05:46.630 --> 00:05:48.950
<v Speaker 2>who actually would get a lot out of it don't

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:48.950 --> 00:05:49.230
<v Speaker 2>go.

NOTE CONF {"raw":[100]}

00:05:49.230 --> 00:05:50.670
<v Speaker 2>So if you want a bit of a 1 to

NOTE CONF {"raw":[100,100,100,100,100,100,100,87,100,100]}

00:05:50.670 --> 00:05:52.750
<v Speaker 2>1 tutoring or, you know, not a whole hour of

NOTE CONF {"raw":[100,100,100,97,97,100,100,100,100,100]}

00:05:52.750 --> 00:05:54.760
<v Speaker 2>1 to 1 tutoring, but but a bit of attention

NOTE CONF {"raw":[100,100,100,100,60,100,100,100,100,98]}

00:05:54.760 --> 00:05:55.880
<v Speaker 2>from someone who knows the course.

NOTE CONF {"raw":[84,100,100,100,69,95]}

00:05:56.080 --> 00:05:56.680
<v Speaker 2>Do go.

NOTE CONF {"raw":[100,100]}

00:05:58.280 --> 00:06:00.240
<v Speaker 2>Only a small number of people thought it wasn't as

NOTE CONF {"raw":[79,74,100,100,100,100,100,100,100,100]}

00:06:00.240 --> 00:06:01.720
<v Speaker 2>helpful as as they'd like.

NOTE CONF {"raw":[100,100,100,100,100]}

00:06:01.720 --> 00:06:03.120
<v Speaker 2>If you do, if you do go along and you

NOTE CONF {"raw":[100,100,100,100,100,100,100,97,100,100]}

00:06:03.120 --> 00:06:04.440
<v Speaker 2>find it isn't as helpful as you'd like.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:06:04.480 --> 00:06:05.240
<v Speaker 2>Please get in touch with me.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:06:05.240 --> 00:06:06.680
<v Speaker 2>I'd like to know more about that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:06:08.520 --> 00:06:10.640
<v Speaker 2>Most people are more or less all completely understand what

NOTE CONF {"raw":[100,100,56,100,100,100,68,100,100,100]}

00:06:10.640 --> 00:06:12.080
<v Speaker 2>they need to do, which is really good.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:06:12.440 --> 00:06:14.840
<v Speaker 2>So far the level of the course is good.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:06:15.960 --> 00:06:17.160
<v Speaker 2>Yes, I'm really happy with that.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:06:17.240 --> 00:06:18.080
<v Speaker 2>Challenging is okay.

NOTE CONF {"raw":[100,98,100]}

00:06:18.120 --> 00:06:19.920
<v Speaker 2>I'd expect maybe a bit more people to find it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:19.920 --> 00:06:21.040
<v Speaker 2>challenging, but it's early days.

NOTE CONF {"raw":[100,100,100,100,100]}

00:06:21.040 --> 00:06:22.160
<v Speaker 2>But that's all fine.

NOTE CONF {"raw":[100,100,100,100]}

00:06:22.880 --> 00:06:24.680
<v Speaker 2>And there's a real mix between how much people have

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:06:24.680 --> 00:06:25.600
<v Speaker 2>been doing the labs.

NOTE CONF {"raw":[100,100,98,100]}

00:06:26.480 --> 00:06:28.920
<v Speaker 2>I don't expect this to be most people, because if

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:28.920 --> 00:06:31.040
<v Speaker 2>you have got a lot of object oriented and Java

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:31.040 --> 00:06:33.040
<v Speaker 2>experience, you probably don't need to be doing the labs.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:33.040 --> 00:06:35.240
<v Speaker 2>But if you're trying to learn this, the labs are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:35.240 --> 00:06:36.560
<v Speaker 2>where you get that practice in.

NOTE CONF {"raw":[100,100,100,100,98,100]}

00:06:37.080 --> 00:06:38.680
<v Speaker 2>Um, okay.

NOTE CONF {"raw":[52,100]}

00:06:38.960 --> 00:06:41.120
<v Speaker 2>Most people, quite a lot of people have signed up

NOTE CONF {"raw":[100,100,100,100,100,95,100,46,100,100]}

00:06:41.120 --> 00:06:43.480
<v Speaker 2>to Piazza, but most people haven't actually been using it.

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:06:43.600 --> 00:06:48.080
<v Speaker 2>It's just I would definitely get onto onto onto Piazza,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:48.080 --> 00:06:50.400
<v Speaker 2>especially now the assignments are live just to see what

NOTE CONF {"raw":[100,100,100,100,94,88,100,100,100,100]}

00:06:50.400 --> 00:06:50.840
<v Speaker 2>the chat is.

NOTE CONF {"raw":[100,98,98]}

00:06:50.840 --> 00:06:53.120
<v Speaker 2>People are really asking questions that actually is quite useful

NOTE CONF {"raw":[100,100,76,100,100,100,100,100,100,100]}

00:06:53.170 --> 00:06:53.530
<v Speaker 2>for you.

NOTE CONF {"raw":[100,100]}

00:06:53.570 --> 00:06:55.370
<v Speaker 2>You'll see what people are talking about.

NOTE CONF {"raw":[50,100,100,100,100,100,100]}

00:06:55.370 --> 00:06:57.730
<v Speaker 2>It's really useful to be involved in the buzz of

NOTE CONF {"raw":[87,100,100,100,100,100,100,100,100,100]}

00:06:57.730 --> 00:06:59.530
<v Speaker 2>the class and and to pick up things that you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:59.530 --> 00:07:00.930
<v Speaker 2>maybe wouldn't have done on your own.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:07:01.050 --> 00:07:01.250
<v Speaker 2>Okay.

NOTE CONF {"raw":[98]}

00:07:01.290 --> 00:07:02.450
<v Speaker 2>There's a lot of academic families.

NOTE CONF {"raw":[100,100,100,52,100,100]}

00:07:02.450 --> 00:07:04.330
<v Speaker 2>I don't have time to go through that now, but

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:04.330 --> 00:07:06.370
<v Speaker 2>I think something's coming out really strongly from that is

NOTE CONF {"raw":[100,100,82,100,100,100,100,100,100,100]}

00:07:06.370 --> 00:07:08.170
<v Speaker 2>that it hasn't been as active as people would like.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:08.210 --> 00:07:10.370
<v Speaker 2>A lot of people haven't really heard from their parents

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:10.370 --> 00:07:10.770
<v Speaker 2>that much.

NOTE CONF {"raw":[100,100]}

00:07:10.770 --> 00:07:12.650
<v Speaker 2>This is the first year we've been running it, so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:12.650 --> 00:07:14.210
<v Speaker 2>we haven't had a lot of support for the academic

NOTE CONF {"raw":[100,100,100,100,100,100,100,77,100,100]}

00:07:14.210 --> 00:07:16.090
<v Speaker 2>parents, and that means they have not a lot of

NOTE CONF {"raw":[100,100,100,100,100,100,98,100,100,100]}

00:07:16.090 --> 00:07:18.930
<v Speaker 2>them haven't been engaging that much with the with with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:18.930 --> 00:07:19.530
<v Speaker 2>you guys.

NOTE CONF {"raw":[100,100]}

00:07:19.730 --> 00:07:22.290
<v Speaker 2>So we're going to try I was away the whole

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:22.290 --> 00:07:24.570
<v Speaker 2>of last semester, which didn't help, but we're going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:24.570 --> 00:07:25.370
<v Speaker 2>try and ramp that up.

NOTE CONF {"raw":[100,100,90,100,100]}

00:07:25.530 --> 00:07:27.090
<v Speaker 2>And your feedback is really, really helpful.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:07:27.090 --> 00:07:27.890
<v Speaker 2>So thanks for that.

NOTE CONF {"raw":[100,100,100,100]}

00:07:28.090 --> 00:07:30.050
<v Speaker 2>Some of you have been really enjoying it, but I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:30.050 --> 00:07:32.050
<v Speaker 2>know that for a lot of you, it hasn't really

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:32.050 --> 00:07:34.290
<v Speaker 2>taken off because your parents haven't been that engaged.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:07:35.170 --> 00:07:35.690
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:07:36.250 --> 00:07:38.010
<v Speaker 2>So woo I'm now going to go back.

NOTE CONF {"raw":[98,34,100,100,100,100,100,100]}

00:07:38.050 --> 00:07:40.690
<v Speaker 2>These are the questions, the actual sensible questions that we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:40.690 --> 00:07:41.490
<v Speaker 2>had last time.

NOTE CONF {"raw":[100,100,100]}

00:07:41.650 --> 00:07:44.370
<v Speaker 2>More practice writing loops and functions.

NOTE CONF {"raw":[100,91,100,100,100,100]}

00:07:44.890 --> 00:07:45.970
<v Speaker 2>This is in the labs.

NOTE CONF {"raw":[100,100,100,100,100]}

00:07:46.010 --> 00:07:47.090
<v Speaker 2>Do the labs.

NOTE CONF {"raw":[100,100,100]}

00:07:47.090 --> 00:07:48.970
<v Speaker 2>But also it'll be in the tutorials and you'll be

NOTE CONF {"raw":[100,100,91,100,100,100,100,100,100,100]}

00:07:48.970 --> 00:07:50.130
<v Speaker 2>getting it in the assignments as well.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:07:50.130 --> 00:07:51.570
<v Speaker 2>So do the labs do the tutorials.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:07:51.570 --> 00:07:52.870
<v Speaker 2>This is where you'll get the practice.

NOTE CONF {"raw":[100,100,100,100,100,100,99]}

00:07:53.950 --> 00:07:56.110
<v Speaker 2>Okay so this is a comment about memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:07:56.870 --> 00:07:58.270
<v Speaker 2>Um, about well okay.

NOTE CONF {"raw":[91,100,49,96]}

00:07:58.310 --> 00:07:59.670
<v Speaker 2>Actually I don't want to go through this in too

NOTE CONF {"raw":[94,98,100,100,100,100,100,100,100,100]}

00:07:59.670 --> 00:08:02.150
<v Speaker 2>much detail because we'll be talking about memory later on.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:02.510 --> 00:08:05.670
<v Speaker 2>Um, couldn't you use else if statements along with break

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,98]}

00:08:05.670 --> 00:08:07.030
<v Speaker 2>statements to make it more readable?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:08:07.030 --> 00:08:08.870
<v Speaker 2>So there's so there's different ways you can do this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:08.870 --> 00:08:10.310
<v Speaker 2>We looked at one way of doing it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:08:10.750 --> 00:08:13.030
<v Speaker 2>Um, but yes, you can use break statements in that

NOTE CONF {"raw":[75,100,100,100,100,100,100,100,100,100]}

00:08:13.030 --> 00:08:13.350
<v Speaker 2>as well.

NOTE CONF {"raw":[100,100]}

00:08:13.470 --> 00:08:17.670
<v Speaker 2>Why are I considered Doctor of philosophy or PhDs, whether

NOTE CONF {"raw":[100,100,100,100,100,100,100,43,54,100]}

00:08:17.670 --> 00:08:22.910
<v Speaker 2>it's in neuroscience or English literature or anything, is a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:22.910 --> 00:08:23.630
<v Speaker 2>doctor of philosophy.

NOTE CONF {"raw":[100,100,100]}

00:08:23.670 --> 00:08:25.950
<v Speaker 2>That's just a really ancient thing, because the whole idea

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:25.950 --> 00:08:28.950
<v Speaker 2>is it's about love of knowledge, which now specifically refers

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:28.950 --> 00:08:30.110
<v Speaker 2>to an individual subject.

NOTE CONF {"raw":[100,100,100,100]}

00:08:30.110 --> 00:08:33.390
<v Speaker 2>But originally when the 14th century or whenever they started

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:33.390 --> 00:08:35.229
<v Speaker 2>it, um, it was more general.

NOTE CONF {"raw":[100,97,100,100,100,100]}

00:08:35.390 --> 00:08:37.430
<v Speaker 2>Okay, can we use plus plus I instead of I

NOTE CONF {"raw":[100,100,100,100,100,100,89,100,100,100]}

00:08:37.469 --> 00:08:37.950
<v Speaker 2>plus plus.

NOTE CONF {"raw":[100,100]}

00:08:37.950 --> 00:08:39.870
<v Speaker 2>So I'm just going to show you this is this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:39.870 --> 00:08:40.390
<v Speaker 2>is true.

NOTE CONF {"raw":[100,100]}

00:08:40.430 --> 00:08:40.990
<v Speaker 2>You can.

NOTE CONF {"raw":[100,100]}

00:08:41.150 --> 00:08:43.070
<v Speaker 2>So I didn't show you this because I didn't want

NOTE CONF {"raw":[44,100,100,100,100,100,100,100,100,100]}

00:08:43.070 --> 00:08:45.470
<v Speaker 2>to bring in too many, um, new things.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:08:45.470 --> 00:08:46.870
<v Speaker 2>But let's have a quick look at that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:08:47.510 --> 00:08:51.600
<v Speaker 2>Um, so here we said, um, If we do?

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100]}

00:08:51.600 --> 00:08:51.800
<v Speaker 2>None.

NOTE CONF {"raw":[85]}

00:08:51.840 --> 00:08:52.160
<v Speaker 2>Plus.

NOTE CONF {"raw":[100]}

00:08:52.160 --> 00:08:53.720
<v Speaker 2>Plus, this doesn't work, right?

NOTE CONF {"raw":[100,100,100,100,99]}

00:08:53.760 --> 00:08:54.360
<v Speaker 2>Because.

NOTE CONF {"raw":[100]}

00:08:54.360 --> 00:08:57.280
<v Speaker 2>Do you remember why this is?

NOTE CONF {"raw":[90,100,100,100,100,100]}

00:08:57.280 --> 00:08:58.960
<v Speaker 2>Because this is post incremental.

NOTE CONF {"raw":[100,100,100,96,100]}

00:08:58.960 --> 00:09:01.240
<v Speaker 2>So it does this thing return num.

NOTE CONF {"raw":[100,95,100,100,100,100,81]}

00:09:01.240 --> 00:09:02.960
<v Speaker 2>And after that it adds one.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:09:03.080 --> 00:09:05.400
<v Speaker 2>So we got around this by doing this doing this

NOTE CONF {"raw":[100,100,100,97,100,100,100,100,100,100]}

00:09:05.400 --> 00:09:06.200
<v Speaker 2>like that.

NOTE CONF {"raw":[100,100]}

00:09:06.760 --> 00:09:09.120
<v Speaker 2>So we first of all we increment by one and

NOTE CONF {"raw":[100,98,100,100,100,100,100,100,100,100]}

00:09:09.120 --> 00:09:10.560
<v Speaker 2>then we return the value.

NOTE CONF {"raw":[100,100,100,100,100]}

00:09:10.600 --> 00:09:12.640
<v Speaker 2>Oh and we also haven't assigned it here.

NOTE CONF {"raw":[92,100,100,100,100,100,100,100]}

00:09:15.760 --> 00:09:16.200
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:09:16.400 --> 00:09:19.720
<v Speaker 2>But somebody pointed out somebody who maybe knows a bit

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:19.720 --> 00:09:22.200
<v Speaker 2>of Java that you can do pre increment here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:09:22.200 --> 00:09:25.240
<v Speaker 2>Plus plus this is the same as num plus plus

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:25.240 --> 00:09:28.000
<v Speaker 2>plus plus num num plus plus are the same except

NOTE CONF {"raw":[100,100,100,100,100,100,97,100,100,100]}

00:09:28.000 --> 00:09:30.000
<v Speaker 2>for the point at which the increment happens.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:09:30.120 --> 00:09:33.600
<v Speaker 2>So this means first of all increment num and then

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:33.640 --> 00:09:35.040
<v Speaker 2>do whatever the instruction says.

NOTE CONF {"raw":[100,100,100,100,100]}

00:09:35.040 --> 00:09:37.680
<v Speaker 2>Whereas num plus plus means do whatever the instruction says

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:37.680 --> 00:09:38.480
<v Speaker 2>and then increment.

NOTE CONF {"raw":[100,100,100]}

00:09:38.480 --> 00:09:40.480
<v Speaker 2>So if we do it like this, we will see

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:40.480 --> 00:09:43.200
<v Speaker 2>that it does return one because it's first adding it

NOTE CONF {"raw":[100,100,100,100,100,100,95,100,100,100]}

00:09:43.200 --> 00:09:44.480
<v Speaker 2>before it returns it.

NOTE CONF {"raw":[100,100,100,100]}

00:09:44.760 --> 00:09:46.440
<v Speaker 2>So yes you can.

NOTE CONF {"raw":[100,100,100,100]}

00:09:46.720 --> 00:09:49.120
<v Speaker 2>Why do you have four times I plus J in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:49.120 --> 00:09:49.560
<v Speaker 2>the deck.

NOTE CONF {"raw":[100,100]}

00:09:49.560 --> 00:09:50.940
<v Speaker 2>So I'm not going to go through this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:09:50.940 --> 00:09:53.300
<v Speaker 2>But this is is because you need the deck to

NOTE CONF {"raw":[100,100,97,67,100,100,100,100,100,100]}

00:09:53.300 --> 00:09:54.140
<v Speaker 2>be 52.

NOTE CONF {"raw":[100,100]}

00:09:54.380 --> 00:09:56.820
<v Speaker 2>And also if you're interested in this, just get out

NOTE CONF {"raw":[68,82,100,100,100,100,100,100,100,100]}

00:09:56.820 --> 00:09:57.620
<v Speaker 2>a piece of paper.

NOTE CONF {"raw":[100,100,100,100]}

00:09:57.740 --> 00:09:59.380
<v Speaker 2>Go back to the code on cards.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:09:59.500 --> 00:10:01.700
<v Speaker 2>Look at the for loop with the eyes and the

NOTE CONF {"raw":[100,100,100,100,100,100,100,63,98,100]}

00:10:01.700 --> 00:10:04.820
<v Speaker 2>JS and work out how that is, how that is

NOTE CONF {"raw":[63,100,100,100,100,100,100,100,100,100]}

00:10:04.820 --> 00:10:08.820
<v Speaker 2>iterating through to add something in every space for 52

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:08.860 --> 00:10:09.740
<v Speaker 2>spaces in the deck.

NOTE CONF {"raw":[100,100,100,100]}

00:10:09.740 --> 00:10:11.660
<v Speaker 2>If you didn't have that full time, it wouldn't work.

NOTE CONF {"raw":[100,100,100,100,100,89,100,100,100,100]}

00:10:11.900 --> 00:10:13.700
<v Speaker 2>I don't really have time to explain that, but you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:13.700 --> 00:10:14.700
<v Speaker 2>can figure that out yourself.

NOTE CONF {"raw":[100,100,100,100,100]}

00:10:14.700 --> 00:10:16.980
<v Speaker 2>That's a really interesting little problem.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:10:17.220 --> 00:10:18.860
<v Speaker 2>Is there a chance of getting an index out of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:18.860 --> 00:10:19.860
<v Speaker 2>bounds error on the cards?

NOTE CONF {"raw":[100,100,100,100,100]}

00:10:19.860 --> 00:10:21.900
<v Speaker 2>Example if Math.random returns one.

NOTE CONF {"raw":[100,100,100,100,100]}

00:10:22.020 --> 00:10:22.700
<v Speaker 2>No there isn't.

NOTE CONF {"raw":[100,100,100]}

00:10:22.700 --> 00:10:26.060
<v Speaker 2>Because Math.random does not return one, it returns something less

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:26.060 --> 00:10:28.940
<v Speaker 2>than 1.0, so it's never going to return one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:10:28.940 --> 00:10:30.300
<v Speaker 2>It's always going to be less than one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:10:31.980 --> 00:10:32.980
<v Speaker 2>What if the array doesn't?

NOTE CONF {"raw":[100,100,100,100,100]}

00:10:33.020 --> 00:10:35.260
<v Speaker 2>We define doesn't have a fixed length, but it changes

NOTE CONF {"raw":[94,77,100,100,100,100,100,100,100,100]}

00:10:35.260 --> 00:10:36.780
<v Speaker 2>by how many times the user gives an input.

NOTE CONF {"raw":[100,100,100,100,97,100,100,100,100]}

00:10:36.780 --> 00:10:39.060
<v Speaker 2>You can't do that with arrays in Java.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:10:39.060 --> 00:10:40.700
<v Speaker 2>If you want to do that, you have to use

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:40.700 --> 00:10:43.020
<v Speaker 2>different structures that we'll talk about later.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:10:43.260 --> 00:10:44.540
<v Speaker 2>Do we have tutorials today?

NOTE CONF {"raw":[100,100,100,100,100]}

00:10:44.820 --> 00:10:45.620
<v Speaker 2>No tutorials.

NOTE CONF {"raw":[100,100]}

00:10:45.620 --> 00:10:46.340
<v Speaker 2>That was on Thursday.

NOTE CONF {"raw":[100,100,100,100]}

00:10:46.380 --> 00:10:47.060
<v Speaker 2>The answer's no.

NOTE CONF {"raw":[100,58,79]}

00:10:47.140 --> 00:10:48.060
<v Speaker 2>Also none today.

NOTE CONF {"raw":[100,100,100]}

00:10:48.060 --> 00:10:50.230
<v Speaker 2>We don't have tutorials on Monday and Tuesday, but this

NOTE CONF {"raw":[100,100,100,100,100,100,92,100,100,100]}

00:10:50.230 --> 00:10:52.590
<v Speaker 2>is the week that tutorials start, so you will have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:52.590 --> 00:10:53.710
<v Speaker 2>your tutorial this week.

NOTE CONF {"raw":[100,100,100,100]}

00:10:54.670 --> 00:10:56.590
<v Speaker 2>This is the same question these two.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:10:57.350 --> 00:10:59.510
<v Speaker 2>How do you use an enhanced for loop to iterate

NOTE CONF {"raw":[100,100,100,100,100,100,98,100,100,100]}

00:10:59.510 --> 00:11:00.470
<v Speaker 2>through 2D array.

NOTE CONF {"raw":[100,100,100]}

00:11:00.470 --> 00:11:02.230
<v Speaker 2>So 2D arrays you've got two things going on.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:11:02.230 --> 00:11:03.790
<v Speaker 2>So you have to have nested for loops.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:03.790 --> 00:11:04.870
<v Speaker 2>We will look at that later.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:11:04.870 --> 00:11:06.350
<v Speaker 2>I don't want you to worry about that, but if

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:06.350 --> 00:11:08.230
<v Speaker 2>you're interested in it you can do it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:08.470 --> 00:11:10.390
<v Speaker 2>Is it still possible to get the Informatics 2D?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,81]}

00:11:10.430 --> 00:11:11.870
<v Speaker 2>No, it is not still possible.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:11:11.870 --> 00:11:12.670
<v Speaker 2>I'm afraid not.

NOTE CONF {"raw":[100,100,100]}

00:11:12.990 --> 00:11:15.190
<v Speaker 2>So there's the Informatics hoodie with the dark, which was

NOTE CONF {"raw":[100,100,95,89,28,100,100,68,100,100]}

00:11:15.190 --> 00:11:15.510
<v Speaker 2>this one.

NOTE CONF {"raw":[100,100]}

00:11:15.510 --> 00:11:17.150
<v Speaker 2>I don't really know what the duck is all about,

NOTE CONF {"raw":[100,100,100,100,100,100,73,100,100,100]}

00:11:17.150 --> 00:11:19.670
<v Speaker 2>but that was the one that the students designed and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:19.670 --> 00:11:21.190
<v Speaker 2>it was heavily subsidised by the school.

NOTE CONF {"raw":[100,100,100,49,100,100,100]}

00:11:21.190 --> 00:11:22.510
<v Speaker 2>Those are all sold out.

NOTE CONF {"raw":[100,100,100,100,100]}

00:11:22.510 --> 00:11:24.190
<v Speaker 2>I'm afraid you have to act quickly when you get

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:24.190 --> 00:11:25.190
<v Speaker 2>the email about the hoodies.

NOTE CONF {"raw":[81,100,100,100,100]}

00:11:25.310 --> 00:11:28.070
<v Speaker 2>You can get informatics hoodies in the university shop, which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:28.070 --> 00:11:31.350
<v Speaker 2>is just right by the forum, but they're not subsidised,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,52]}

00:11:31.350 --> 00:11:32.990
<v Speaker 2>they're full price and they don't have the duck on.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:33.430 --> 00:11:34.470
<v Speaker 2>So sorry about that.

NOTE CONF {"raw":[100,100,100,100]}

00:11:34.470 --> 00:11:35.270
<v Speaker 2>They go quickly.

NOTE CONF {"raw":[100,100,100]}

00:11:35.270 --> 00:11:38.990
<v Speaker 2>Everybody loves the hoodies okay, so that's last week.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:11:40.510 --> 00:11:43.510
<v Speaker 2>So this week part of the lecture we got Willow

NOTE CONF {"raw":[100,100,100,87,100,100,100,85,100,100]}

00:11:43.750 --> 00:11:45.950
<v Speaker 2>who's a Jack Russell Chihuahua mix.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:11:46.630 --> 00:11:48.560
<v Speaker 2>Um she was the runt of the litter, but she's

NOTE CONF {"raw":[37,100,100,100,100,100,100,100,100,74]}

00:11:48.560 --> 00:11:51.040
<v Speaker 2>the cutest and best behaved and very greedy, so probably

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:51.040 --> 00:11:52.000
<v Speaker 2>won't be around for very long.

NOTE CONF {"raw":[100,100,95,100,100,100]}

00:11:52.040 --> 00:11:53.040
<v Speaker 2>That's super cute.

NOTE CONF {"raw":[100,100,100]}

00:11:53.560 --> 00:11:54.280
<v Speaker 2>And then.

NOTE CONF {"raw":[100,100]}

00:11:54.680 --> 00:11:58.840
<v Speaker 2>Oh, okay, we do have another pet somewhere.

NOTE CONF {"raw":[91,100,100,100,100,100,100,100]}

00:11:59.040 --> 00:12:00.880
<v Speaker 2>Oh, we don't have another pet.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:00.920 --> 00:12:04.480
<v Speaker 2>Sorry, I had some birds, but for some, somehow they're

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:04.480 --> 00:12:05.640
<v Speaker 2>not in here.

NOTE CONF {"raw":[100,100,100]}

00:12:05.640 --> 00:12:07.480
<v Speaker 2>I don't know what's going on there, but never mind.

NOTE CONF {"raw":[100,100,100,100,73,100,100,100,97,97]}

00:12:07.480 --> 00:12:09.520
<v Speaker 2>We'll have them next week instead.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:10.040 --> 00:12:10.280
<v Speaker 2>Okay.

NOTE CONF {"raw":[94]}

00:12:10.360 --> 00:12:11.120
<v Speaker 2>Teaching awards.

NOTE CONF {"raw":[100,100]}

00:12:11.120 --> 00:12:11.760
<v Speaker 2>Teaching awards.

NOTE CONF {"raw":[100,100]}

00:12:11.760 --> 00:12:12.360
<v Speaker 2>Open.

NOTE CONF {"raw":[100]}

00:12:13.680 --> 00:12:15.520
<v Speaker 2>Do nominate people for teaching awards.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:15.520 --> 00:12:16.000
<v Speaker 2>If you ever.

NOTE CONF {"raw":[100,100,100]}

00:12:16.000 --> 00:12:18.040
<v Speaker 2>If you think anyone's doing a good job, please nominate

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:18.040 --> 00:12:18.240
<v Speaker 2>them.

NOTE CONF {"raw":[100]}

00:12:18.240 --> 00:12:20.840
<v Speaker 2>I had a colleague who messaged me yesterday saying I've

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:20.840 --> 00:12:22.120
<v Speaker 2>got another nomination.

NOTE CONF {"raw":[100,100,100]}

00:12:22.120 --> 00:12:24.400
<v Speaker 2>This is his second and he's so excited about it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:24.440 --> 00:12:25.560
<v Speaker 2>It really makes a difference.

NOTE CONF {"raw":[100,100,100,100,100]}

00:12:25.560 --> 00:12:28.480
<v Speaker 2>You guys, for example, have been telling me how great

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:28.480 --> 00:12:29.160
<v Speaker 2>Julian is.

NOTE CONF {"raw":[100,100]}

00:12:29.520 --> 00:12:31.800
<v Speaker 2>Okay, has anyone nominated Julian for a teaching award?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:12:31.800 --> 00:12:33.080
<v Speaker 2>If you think he did a good job, if he

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:33.080 --> 00:12:35.920
<v Speaker 2>was fun, if he made learning good or whatever, just

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:35.920 --> 00:12:36.400
<v Speaker 2>nominate him.

NOTE CONF {"raw":[100,100]}

00:12:36.400 --> 00:12:37.360
<v Speaker 2>It only takes a second.

NOTE CONF {"raw":[100,100,100,100,100]}

00:12:37.360 --> 00:12:39.880
<v Speaker 2>You have to write something about why you're nominating the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:39.880 --> 00:12:41.360
<v Speaker 2>person, but it's only really brief.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:41.560 --> 00:12:43.360
<v Speaker 2>So this makes a huge difference.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:43.360 --> 00:12:46.600
<v Speaker 2>And also last year Informatics didn't get that many nominations

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:46.700 --> 00:12:48.020
<v Speaker 2>and I spoke to lots of students.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:12:48.020 --> 00:12:49.460
<v Speaker 2>I was like, oh, do you think, you know, people

NOTE CONF {"raw":[100,100,100,100,100,100,100,99,99,100]}

00:12:49.460 --> 00:12:50.260
<v Speaker 2>aren't like in teaching?

NOTE CONF {"raw":[100,55,55,100]}

00:12:50.260 --> 00:12:51.860
<v Speaker 2>They're like, no, no, there are loads of great teachers.

NOTE CONF {"raw":[85,100,100,100,100,100,100,100,100,100]}

00:12:51.860 --> 00:12:53.420
<v Speaker 2>I just didn't get around to nominating them.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:12:53.580 --> 00:12:55.620
<v Speaker 2>So, you know, I'm not saying nominate for the sake

NOTE CONF {"raw":[100,98,98,100,100,100,100,100,100,100]}

00:12:55.620 --> 00:12:55.820
<v Speaker 2>of it.

NOTE CONF {"raw":[100,100]}

00:12:55.820 --> 00:12:56.860
<v Speaker 2>So informatics looks good.

NOTE CONF {"raw":[100,100,100,100]}

00:12:56.860 --> 00:12:59.060
<v Speaker 2>I'm just saying if you think someone's done a good,

NOTE CONF {"raw":[100,100,100,100,100,100,100,98,96,100]}

00:12:59.060 --> 00:13:01.780
<v Speaker 2>good, good job, do nominate them because it makes everyone

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:01.780 --> 00:13:03.540
<v Speaker 2>very happy and it makes the school very happy.

NOTE CONF {"raw":[100,100,100,100,100,76,79,100,100]}

00:13:05.700 --> 00:13:06.020
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:13:06.060 --> 00:13:08.700
<v Speaker 2>Assignment one I think you've got the email about that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:08.820 --> 00:13:11.300
<v Speaker 2>Um, this is just saying don't leave it to last

NOTE CONF {"raw":[86,100,100,100,100,100,100,100,100,100]}

00:13:11.300 --> 00:13:11.740
<v Speaker 2>minute.

NOTE CONF {"raw":[100]}

00:13:11.860 --> 00:13:13.940
<v Speaker 2>27th of February is a deadline, so you've got plenty

NOTE CONF {"raw":[100,100,100,100,82,100,100,85,100,100]}

00:13:13.940 --> 00:13:14.500
<v Speaker 2>of time.

NOTE CONF {"raw":[100,100]}

00:13:14.980 --> 00:13:17.380
<v Speaker 2>But pace yourselves and read the emails about it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:13:18.660 --> 00:13:18.900
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:13:18.940 --> 00:13:19.460
<v Speaker 2>Office hours.

NOTE CONF {"raw":[100,100]}

00:13:19.460 --> 00:13:20.420
<v Speaker 2>Which two was the winner?

NOTE CONF {"raw":[74,58,99,100,100]}

00:13:20.420 --> 00:13:21.820
<v Speaker 2>So I'm going to have rich tea.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:21.820 --> 00:13:24.860
<v Speaker 2>And that's going to start at 4:00 in 606 as

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,99,100]}

00:13:24.860 --> 00:13:25.340
<v Speaker 2>usual.

NOTE CONF {"raw":[100]}

00:13:25.620 --> 00:13:26.940
<v Speaker 2>Um, so do it was great.

NOTE CONF {"raw":[77,100,100,92,100,100]}

00:13:26.940 --> 00:13:28.740
<v Speaker 2>Last week loads of people came to say hello.

NOTE CONF {"raw":[100,100,100,100,100,100,87,100,100]}

00:13:28.740 --> 00:13:31.500
<v Speaker 2>So do come along and say hello or come along

NOTE CONF {"raw":[100,100,100,100,100,100,100,79,100,100]}

00:13:31.500 --> 00:13:32.740
<v Speaker 2>with any questions or whatever.

NOTE CONF {"raw":[100,100,100,100,100]}

00:13:32.740 --> 00:13:35.220
<v Speaker 2>I'll be there with my rich tea and I'll bring

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,60,100]}

00:13:35.220 --> 00:13:36.580
<v Speaker 2>much more than I did last time.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:37.540 --> 00:13:38.140
<v Speaker 2>All right.

NOTE CONF {"raw":[100,100]}

00:13:39.620 --> 00:13:41.740
<v Speaker 2>So I want to go back to what we were

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:41.740 --> 00:13:42.940
<v Speaker 2>talking about last time.

NOTE CONF {"raw":[100,100,100,100]}

00:13:43.020 --> 00:13:46.350
<v Speaker 2>So we were talking about Uh, passing by value and

NOTE CONF {"raw":[100,100,100,100,100,52,100,100,100,100]}

00:13:46.350 --> 00:13:46.910
<v Speaker 2>what that means.

NOTE CONF {"raw":[100,100,100]}

00:13:46.910 --> 00:13:49.270
<v Speaker 2>So if we look in here, we are back in

NOTE CONF {"raw":[94,100,100,100,100,100,100,100,100,100]}

00:13:49.910 --> 00:13:50.670
<v Speaker 2>IntelliJ.

NOTE CONF {"raw":[96]}

00:13:51.190 --> 00:13:55.310
<v Speaker 2>So remember with this one we if we just called

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:55.350 --> 00:13:59.310
<v Speaker 2>add one, but we didn't actually do anything with it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:59.550 --> 00:14:00.750
<v Speaker 2>This didn't do anything right.

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:00.750 --> 00:14:02.270
<v Speaker 2>Because we're passing the number back here.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:14:02.270 --> 00:14:03.670
<v Speaker 2>It's just a local variable.

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:03.670 --> 00:14:05.310
<v Speaker 2>It changes the variable locally.

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:05.470 --> 00:14:07.830
<v Speaker 2>But then we jump out of that function and that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:07.830 --> 00:14:09.510
<v Speaker 2>local variable is forgotten.

NOTE CONF {"raw":[100,100,100,100]}

00:14:09.590 --> 00:14:11.270
<v Speaker 2>If we want to do anything, we have to pass

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:11.270 --> 00:14:11.510
<v Speaker 2>it back.

NOTE CONF {"raw":[100,100]}

00:14:11.510 --> 00:14:12.710
<v Speaker 2>We're passing by value.

NOTE CONF {"raw":[100,100,100,100]}

00:14:13.590 --> 00:14:15.390
<v Speaker 2>Uh so this should be x.

NOTE CONF {"raw":[91,100,100,100,100,98]}

00:14:15.470 --> 00:14:18.350
<v Speaker 2>So here if we actually part, we take what comes

NOTE CONF {"raw":[100,100,100,100,100,91,100,100,100,100]}

00:14:18.350 --> 00:14:20.950
<v Speaker 2>out of this and we assign it to something, then

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:21.150 --> 00:14:22.390
<v Speaker 2>that's how we retain it.

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:22.830 --> 00:14:23.270
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:14:24.510 --> 00:14:27.990
<v Speaker 2>But having said that things don't work quite like that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:27.990 --> 00:14:28.830
<v Speaker 2>with arrays right.

NOTE CONF {"raw":[100,100,99]}

00:14:28.870 --> 00:14:32.710
<v Speaker 2>So arrays oh so raises slightly different.

NOTE CONF {"raw":[100,100,95,100,46,100,100]}

00:14:32.830 --> 00:14:36.550
<v Speaker 2>So I'm going to go to um let me see

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:36.590 --> 00:14:37.430
<v Speaker 2>add one array.

NOTE CONF {"raw":[88,97,100]}

00:14:39.830 --> 00:14:40.030
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:14:40.070 --> 00:14:40.950
<v Speaker 2>So here what we're doing.

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:40.950 --> 00:14:43.590
<v Speaker 2>We're just printing out an array not doing anything about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:43.590 --> 00:14:43.870
<v Speaker 2>it.

NOTE CONF {"raw":[100]}

00:14:43.870 --> 00:14:45.360
<v Speaker 2>Said this array is zero one.

NOTE CONF {"raw":[80,100,90,94,100,100]}

00:14:45.360 --> 00:14:46.880
<v Speaker 2>You can see it's just printing the array.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:14:47.000 --> 00:14:48.840
<v Speaker 2>Now we've got something called we're going to do add

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,96,100]}

00:14:48.840 --> 00:14:49.240
<v Speaker 2>one.

NOTE CONF {"raw":[100]}

00:14:49.240 --> 00:14:50.680
<v Speaker 2>And this is add one for an array.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:14:50.680 --> 00:14:52.600
<v Speaker 2>So it takes an integer of arrays.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:14:52.600 --> 00:14:55.960
<v Speaker 2>And just to the first number it adds one.

NOTE CONF {"raw":[100,100,81,100,100,100,100,100,100]}

00:14:56.040 --> 00:14:59.280
<v Speaker 2>So we would expect the outcome of this method to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:59.320 --> 00:15:00.160
<v Speaker 2>be one one.

NOTE CONF {"raw":[100,100,100]}

00:15:00.320 --> 00:15:03.000
<v Speaker 2>However this is returning.

NOTE CONF {"raw":[100,100,100,100]}

00:15:03.000 --> 00:15:05.200
<v Speaker 2>This is not returning anything and we're not assigning it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:05.200 --> 00:15:05.680
<v Speaker 2>to anything.

NOTE CONF {"raw":[100,100]}

00:15:05.680 --> 00:15:06.800
<v Speaker 2>So what's going to happen.

NOTE CONF {"raw":[100,100,100,100,100]}

00:15:08.960 --> 00:15:11.680
<v Speaker 2>So the return the answer here is one one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:15:11.920 --> 00:15:14.920
<v Speaker 2>So this has made a change even though this is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:14.920 --> 00:15:17.760
<v Speaker 2>just happening this this is not returning anything.

NOTE CONF {"raw":[100,100,70,100,100,100,100,100]}

00:15:18.040 --> 00:15:18.200
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:15:18.200 --> 00:15:19.240
<v Speaker 2>So what is going on here.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:15:19.240 --> 00:15:21.000
<v Speaker 2>And this is to do with the way things work

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:21.000 --> 00:15:22.600
<v Speaker 2>in memory okay.

NOTE CONF {"raw":[100,100,80]}

00:15:22.640 --> 00:15:24.640
<v Speaker 2>So as we know, the array itself and its length

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:24.640 --> 00:15:25.240
<v Speaker 2>cannot be changed.

NOTE CONF {"raw":[100,100,100]}

00:15:25.240 --> 00:15:28.760
<v Speaker 2>But the elements can be changed and it's changing.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:15:28.760 --> 00:15:30.400
<v Speaker 2>The value of an element of an array is a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:30.400 --> 00:15:31.760
<v Speaker 2>side effect of the function.

NOTE CONF {"raw":[100,100,100,100,100]}

00:15:31.920 --> 00:15:34.520
<v Speaker 2>This is something you have to be careful with because

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:34.560 --> 00:15:37.160
<v Speaker 2>often you change things accidentally.

NOTE CONF {"raw":[100,100,100,100,100]}

00:15:37.240 --> 00:15:39.000
<v Speaker 2>So you have to be very conscious about this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:15:39.080 --> 00:15:40.960
<v Speaker 2>So this is the code that we've been looking at.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:41.040 --> 00:15:44.180
<v Speaker 2>So here we're calling this code, we're passing to add

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:44.180 --> 00:15:45.100
<v Speaker 2>one to our array.

NOTE CONF {"raw":[97,95,87,100]}

00:15:45.100 --> 00:15:48.020
<v Speaker 2>And and it's adding one as we've seen.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:15:48.860 --> 00:15:50.380
<v Speaker 2>So why does this make a difference.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:15:50.460 --> 00:15:55.220
<v Speaker 2>This is because the calling code is pointing to a

NOTE CONF {"raw":[100,100,100,100,97,100,100,100,100,100]}

00:15:56.020 --> 00:15:56.660
<v Speaker 2>in memory.

NOTE CONF {"raw":[100,100]}

00:15:56.660 --> 00:15:58.900
<v Speaker 2>So it's pointing to something we've created in memory which

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:58.900 --> 00:15:59.580
<v Speaker 2>is an array.

NOTE CONF {"raw":[100,100,100]}

00:15:59.820 --> 00:16:01.620
<v Speaker 2>And this array has the values in memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:16:01.620 --> 00:16:03.460
<v Speaker 2>We looked at a little bit about how we created

NOTE CONF {"raw":[94,100,98,100,100,100,100,100,100,100]}

00:16:03.460 --> 00:16:04.340
<v Speaker 2>arrays in memory.

NOTE CONF {"raw":[100,100,100]}

00:16:04.780 --> 00:16:07.220
<v Speaker 2>And then we send this to the method.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:16:08.260 --> 00:16:12.300
<v Speaker 2>And this is also talking about this same as pointing

NOTE CONF {"raw":[100,100,100,100,100,100,84,100,100,100]}

00:16:12.340 --> 00:16:13.740
<v Speaker 2>to the same bit of memory.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:16:13.860 --> 00:16:17.140
<v Speaker 2>So when we change things locally it's actually going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:17.180 --> 00:16:19.220
<v Speaker 2>memory and changing things in memory.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:16:19.380 --> 00:16:19.580
<v Speaker 2>Right.

NOTE CONF {"raw":[70]}

00:16:19.580 --> 00:16:21.260
<v Speaker 2>Which does not happen when it's a variable.

NOTE CONF {"raw":[100,100,100,100,100,99,100,100]}

00:16:21.260 --> 00:16:22.580
<v Speaker 2>It happens when it's an array.

NOTE CONF {"raw":[87,100,100,100,100,100]}

00:16:22.780 --> 00:16:24.860
<v Speaker 2>So if we look back at what's going on here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:30.300 --> 00:16:31.220
<v Speaker 2>What's not doing that.

NOTE CONF {"raw":[69,100,100,99]}

00:16:35.500 --> 00:16:35.780
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:16:35.820 --> 00:16:38.340
<v Speaker 2>So A and A and B and C and whatever.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:40.660 --> 00:16:41.740
<v Speaker 2>Yeah I guess so.

NOTE CONF {"raw":[100,99,99,100]}

00:16:41.780 --> 00:16:44.630
<v Speaker 2>So so it's these are not living in memory in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:44.630 --> 00:16:45.030
<v Speaker 2>the same way.

NOTE CONF {"raw":[100,100,100]}

00:16:45.030 --> 00:16:45.870
<v Speaker 2>These are variables.

NOTE CONF {"raw":[100,100,100]}

00:16:45.870 --> 00:16:49.070
<v Speaker 2>Whereas the array has got this spot in memory where

NOTE CONF {"raw":[100,100,100,100,100,98,89,89,100,100]}

00:16:49.070 --> 00:16:50.710
<v Speaker 2>we're changing the values of that array.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:16:50.710 --> 00:16:52.030
<v Speaker 2>So it's pointing to this array.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:16:53.030 --> 00:16:55.110
<v Speaker 2>And a memory is something we'll talk about a bit

NOTE CONF {"raw":[96,90,100,98,100,100,100,100,100,100]}

00:16:55.110 --> 00:16:57.510
<v Speaker 2>more later on okay.

NOTE CONF {"raw":[100,100,100,100]}

00:16:58.790 --> 00:17:02.990
<v Speaker 2>So I'm not going to look at we'll look at

NOTE CONF {"raw":[100,100,100,100,100,100,90,100,100,100]}

00:17:02.990 --> 00:17:03.950
<v Speaker 2>this very briefly.

NOTE CONF {"raw":[100,100,100]}

00:17:04.069 --> 00:17:07.350
<v Speaker 2>This is kind of a so this is going back

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:07.350 --> 00:17:09.110
<v Speaker 2>to returning things.

NOTE CONF {"raw":[100,100,100]}

00:17:09.230 --> 00:17:12.150
<v Speaker 2>So here we're cubing a number I've got some questions

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:12.150 --> 00:17:12.390
<v Speaker 2>for this.

NOTE CONF {"raw":[100,100]}

00:17:12.390 --> 00:17:14.870
<v Speaker 2>But I don't think we need to really go into

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:14.870 --> 00:17:15.230
<v Speaker 2>that.

NOTE CONF {"raw":[100]}

00:17:15.230 --> 00:17:16.470
<v Speaker 2>So what is going to go here.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:17:16.470 --> 00:17:19.069
<v Speaker 2>We're just we need to have the return statement because

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:19.069 --> 00:17:20.430
<v Speaker 2>we're not because it's not void.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:17:20.630 --> 00:17:24.270
<v Speaker 2>And we can put all the, um, actual action of

NOTE CONF {"raw":[100,100,100,100,100,100,81,100,100,100]}

00:17:24.350 --> 00:17:26.709
<v Speaker 2>the, of the code, which is this multiplication into the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:26.709 --> 00:17:28.710
<v Speaker 2>return statement because it's really straightforward.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:17:30.910 --> 00:17:31.550
<v Speaker 2>Um, okay.

NOTE CONF {"raw":[79,100]}

00:17:31.590 --> 00:17:32.430
<v Speaker 2>So have a look at this.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:17:32.470 --> 00:17:33.470
<v Speaker 2>What's going on here.

NOTE CONF {"raw":[100,100,100,100]}

00:17:33.670 --> 00:17:34.750
<v Speaker 2>So we've got this main method.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:17:34.750 --> 00:17:36.430
<v Speaker 2>We've got two integers A and b.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:17:36.470 --> 00:17:38.150
<v Speaker 2>We're printing out a and b.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:17:38.910 --> 00:17:40.870
<v Speaker 2>And then we're going up to this code that's swapping

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:40.870 --> 00:17:41.680
<v Speaker 2>them around.

NOTE CONF {"raw":[100,100]}

00:17:41.760 --> 00:17:43.240
<v Speaker 2>Printing out these swapped ones.

NOTE CONF {"raw":[100,100,100,100,95]}

00:17:43.320 --> 00:17:45.320
<v Speaker 2>And then we're coming back to the main method.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:17:45.320 --> 00:17:46.880
<v Speaker 2>And we're printing out A and B.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:17:47.040 --> 00:17:48.960
<v Speaker 2>So I'm going to put this up on woo clap.

NOTE CONF {"raw":[100,100,100,100,100,100,100,84,52,100]}

00:17:52.160 --> 00:17:52.920
<v Speaker 2>Oh no sorry.

NOTE CONF {"raw":[88,100,100]}

00:17:52.920 --> 00:17:53.880
<v Speaker 2>That's this one.

NOTE CONF {"raw":[100,100,100]}

00:17:58.280 --> 00:17:58.720
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:17:58.760 --> 00:18:01.320
<v Speaker 2>So which of these answers is it going to print

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:01.320 --> 00:18:01.720
<v Speaker 2>out.

NOTE CONF {"raw":[100]}

00:18:03.320 --> 00:18:05.280
<v Speaker 2>I'll just give you a few seconds for that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:18:13.320 --> 00:18:13.640
<v Speaker 2>People.

NOTE CONF {"raw":[76]}

00:18:13.680 --> 00:18:14.560
<v Speaker 2>Oh sorry.

NOTE CONF {"raw":[100,100]}

00:18:14.600 --> 00:18:17.120
<v Speaker 2>Actually you're on the different wook lab okay I won't

NOTE CONF {"raw":[100,97,100,99,100,29,56,100,100,100]}

00:18:17.120 --> 00:18:17.560
<v Speaker 2>do that through.

NOTE CONF {"raw":[100,100,100]}

00:18:17.600 --> 00:18:17.760
<v Speaker 2>Woohoo!

NOTE CONF {"raw":[88]}

00:18:17.760 --> 00:18:18.000
<v Speaker 2>Clap.

NOTE CONF {"raw":[100]}

00:18:18.000 --> 00:18:20.840
<v Speaker 2>Because that's a bit complicated, but the answer is, oh,

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:18:20.880 --> 00:18:21.720
<v Speaker 2>somebody's on there.

NOTE CONF {"raw":[79,100,96]}

00:18:21.960 --> 00:18:23.160
<v Speaker 2>Okay, so what's it going to print out?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:18:23.160 --> 00:18:26.560
<v Speaker 2>It's going to print out 255225 because it prints out

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:26.560 --> 00:18:27.000
<v Speaker 2>what's here.

NOTE CONF {"raw":[100,100]}

00:18:27.120 --> 00:18:28.320
<v Speaker 2>It swaps them around.

NOTE CONF {"raw":[100,100,100,100]}

00:18:28.320 --> 00:18:31.040
<v Speaker 2>But then it hasn't actually changed anything in memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:18:31.040 --> 00:18:32.640
<v Speaker 2>And it's not passing anything back.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:18:32.800 --> 00:18:34.320
<v Speaker 2>So A and B just reverts.

NOTE CONF {"raw":[100,100,100,100,100,93]}

00:18:34.320 --> 00:18:36.720
<v Speaker 2>Within this context A and B are just the same

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:36.720 --> 00:18:37.480
<v Speaker 2>as they have been.

NOTE CONF {"raw":[100,100,100,100]}

00:18:37.640 --> 00:18:43.380
<v Speaker 2>Whereas here we've got an array and we're printing out

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:43.380 --> 00:18:45.100
<v Speaker 2>the first and second elements of the array.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:18:45.100 --> 00:18:47.620
<v Speaker 2>And then we're swapping the array up here, printing that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:47.620 --> 00:18:50.460
<v Speaker 2>out and then printing out again what's going to happen.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:50.580 --> 00:18:52.420
<v Speaker 2>So here we're going to get two five.

NOTE CONF {"raw":[100,100,100,100,100,100,67,100]}

00:18:52.900 --> 00:18:53.580
<v Speaker 2>And then we swap.

NOTE CONF {"raw":[100,100,100,100]}

00:18:53.580 --> 00:18:55.340
<v Speaker 2>We're going to get five two just the same.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:18:55.460 --> 00:18:58.100
<v Speaker 2>But here because of the way this is changing something

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:58.100 --> 00:19:00.980
<v Speaker 2>in memory, when we go back to the main function

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:00.980 --> 00:19:02.380
<v Speaker 2>that swap is going to persist.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:02.380 --> 00:19:04.420
<v Speaker 2>Whereas with the variables it didn't persist.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:19:06.140 --> 00:19:06.380
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:19:06.380 --> 00:19:08.540
<v Speaker 2>So we're going to look a little bit very briefly

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:08.540 --> 00:19:11.460
<v Speaker 2>at the whole idea of breaking of what functions how

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:11.460 --> 00:19:13.420
<v Speaker 2>you use functions to make code more readable.

NOTE CONF {"raw":[88,100,100,100,100,100,100,100]}

00:19:13.620 --> 00:19:13.780
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:19:13.820 --> 00:19:15.940
<v Speaker 2>So we're looking at nearest neighbour to a central point.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:15.940 --> 00:19:18.220
<v Speaker 2>This doesn't really matter very much the details of this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:18.340 --> 00:19:19.420
<v Speaker 2>But this is the code right.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:19.460 --> 00:19:21.540
<v Speaker 2>This is the code for finding the centre point.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,80]}

00:19:21.540 --> 00:19:23.100
<v Speaker 2>So if you have a look at this okay.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,86]}

00:19:23.100 --> 00:19:24.860
<v Speaker 2>Can you pick up pretty easily what's going on in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:24.860 --> 00:19:28.700
<v Speaker 2>this code that you can't pick up pretty easily.

NOTE CONF {"raw":[100,100,90,100,100,100,100,100,100]}

00:19:28.940 --> 00:19:30.300
<v Speaker 2>This is really hard to read right.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:19:30.340 --> 00:19:33.140
<v Speaker 2>So even if you understand how you work out nearest

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:33.140 --> 00:19:35.380
<v Speaker 2>neighbours, even if your Java is really good, this is

NOTE CONF {"raw":[100,100,100,100,79,83,100,100,100,100]}

00:19:35.380 --> 00:19:37.380
<v Speaker 2>going to take you a long time to figure out

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:37.380 --> 00:19:40.030
<v Speaker 2>exactly what's going on here, Because there's no structure to

NOTE CONF {"raw":[100,100,100,100,100,100,100,94,100,100]}

00:19:40.030 --> 00:19:40.270
<v Speaker 2>it.

NOTE CONF {"raw":[100]}

00:19:40.750 --> 00:19:42.870
<v Speaker 2>There's no functions, there's no arguments.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:43.030 --> 00:19:44.550
<v Speaker 2>So if we want to make this really nice and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:44.550 --> 00:19:46.830
<v Speaker 2>organised, we have to think what is the logic of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:46.830 --> 00:19:47.590
<v Speaker 2>what we're trying to do?

NOTE CONF {"raw":[100,100,100,100,100]}

00:19:47.670 --> 00:19:50.310
<v Speaker 2>So good coding is always about following the logic.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:19:50.670 --> 00:19:51.070
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:19:51.310 --> 00:19:54.030
<v Speaker 2>So first of all you need to parse arguments.

NOTE CONF {"raw":[100,100,100,100,100,100,100,76,100]}

00:19:54.030 --> 00:19:55.230
<v Speaker 2>You're passing all these arguments in.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:55.270 --> 00:19:56.190
<v Speaker 2>You've got to parse them.

NOTE CONF {"raw":[100,100,100,100,100]}

00:19:56.190 --> 00:19:57.710
<v Speaker 2>Then you're going to find the centre.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:19:57.830 --> 00:19:59.190
<v Speaker 2>Then you're going to print the centre.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:19:59.350 --> 00:20:01.150
<v Speaker 2>Then you're going to get the neighbours all around the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:01.150 --> 00:20:01.710
<v Speaker 2>centre.

NOTE CONF {"raw":[100]}

00:20:01.910 --> 00:20:04.710
<v Speaker 2>You're going to calculate the distances between the neighbours in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,63]}

00:20:04.710 --> 00:20:05.310
<v Speaker 2>the centre.

NOTE CONF {"raw":[100,100]}

00:20:05.470 --> 00:20:08.910
<v Speaker 2>Print those distances, calculate the minimum of all those distances,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:08.910 --> 00:20:09.910
<v Speaker 2>print minimum okay.

NOTE CONF {"raw":[100,100,100]}

00:20:09.990 --> 00:20:11.430
<v Speaker 2>So these are the steps you're going to do.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:20:11.430 --> 00:20:12.430
<v Speaker 2>That is the logic.

NOTE CONF {"raw":[100,100,100,100]}

00:20:12.550 --> 00:20:14.510
<v Speaker 2>So you have to think about what's going into this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:14.510 --> 00:20:16.790
<v Speaker 2>So here we're passing in the arguments that we start

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:16.790 --> 00:20:16.990
<v Speaker 2>with.

NOTE CONF {"raw":[100]}

00:20:17.030 --> 00:20:19.310
<v Speaker 2>We're parsing them and that's returning our points.

NOTE CONF {"raw":[100,95,100,100,100,100,100,100]}

00:20:19.590 --> 00:20:22.630
<v Speaker 2>Get centre takes those points and returns a centre.

NOTE CONF {"raw":[98,100,100,100,100,100,100,99,100]}

00:20:22.750 --> 00:20:25.590
<v Speaker 2>Print centre takes the centre and doesn't return anything.

NOTE CONF {"raw":[100,100,100,87,100,100,100,100,100]}

00:20:25.950 --> 00:20:27.030
<v Speaker 2>And so on and so forth.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:20:27.030 --> 00:20:29.510
<v Speaker 2>At each point, we're using what we've got before to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:29.550 --> 00:20:31.870
<v Speaker 2>pass things into a function and to do something else.

NOTE CONF {"raw":[92,100,100,100,100,100,100,100,100,100]}

00:20:32.310 --> 00:20:35.030
<v Speaker 2>Okay, so instead of this crazy code that you saw,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:35.150 --> 00:20:36.910
<v Speaker 2>let's have a look at how we might do that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:36.990 --> 00:20:38.680
<v Speaker 2>So let's look at nearest neighbour.

NOTE CONF {"raw":[100,100,100,100,100,90]}

00:20:39.680 --> 00:20:39.920
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:20:39.960 --> 00:20:42.280
<v Speaker 2>So we're going to have a main method.

NOTE CONF {"raw":[100,100,100,100,100,76,100,100]}

00:20:42.600 --> 00:20:46.520
<v Speaker 2>And we are going to start with what are we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:46.520 --> 00:20:47.200
<v Speaker 2>going to start with.

NOTE CONF {"raw":[100,100,100,100]}

00:20:47.200 --> 00:20:48.800
<v Speaker 2>Oh I haven't got here anyway.

NOTE CONF {"raw":[74,100,100,100,100,100]}

00:20:48.800 --> 00:20:49.800
<v Speaker 2>So let's have a look at this.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:20:49.840 --> 00:20:51.560
<v Speaker 2>We're going to want to parse the arguments right.

NOTE CONF {"raw":[100,100,100,100,100,92,100,100,100]}

00:20:51.560 --> 00:20:53.480
<v Speaker 2>So we're going to oops.

NOTE CONF {"raw":[100,100,100,100,68]}

00:20:56.720 --> 00:20:58.760
<v Speaker 2>Parse arguments.

NOTE CONF {"raw":[79,100]}

00:20:59.480 --> 00:21:02.000
<v Speaker 2>And this is going to take in the args oops.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,99]}

00:21:03.320 --> 00:21:08.440
<v Speaker 2>And it's parse arguments is going to return something.

NOTE CONF {"raw":[100,47,100,84,100,100,100,100,100]}

00:21:08.440 --> 00:21:10.680
<v Speaker 2>It's going to return the points.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:21:12.240 --> 00:21:14.360
<v Speaker 2>And what kind of thing of the point is going

NOTE CONF {"raw":[100,100,100,100,100,55,100,96,96,100]}

00:21:14.360 --> 00:21:15.560
<v Speaker 2>to be a double array.

NOTE CONF {"raw":[100,100,100,100,100]}

00:21:17.200 --> 00:21:17.560
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:21:17.600 --> 00:21:19.800
<v Speaker 2>So it's not happy with parse arguments because I'm calling

NOTE CONF {"raw":[100,92,100,100,100,100,100,100,100,100]}

00:21:19.800 --> 00:21:20.840
<v Speaker 2>a method that doesn't exist.

NOTE CONF {"raw":[100,100,100,100,100]}

00:21:20.840 --> 00:21:22.320
<v Speaker 2>But you can see what's going on here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:21:22.440 --> 00:21:24.160
<v Speaker 2>So then I'm going to take the points I'm going

NOTE CONF {"raw":[100,100,100,100,100,100,100,83,100,100]}

00:21:24.160 --> 00:21:25.000
<v Speaker 2>to get the centre.

NOTE CONF {"raw":[100,100,100,100]}

00:21:25.400 --> 00:21:33.640
<v Speaker 2>So get centre takes points and it's going to assign

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:33.640 --> 00:21:36.280
<v Speaker 2>those to something called centre which is going to be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:38.500 --> 00:21:39.060
<v Speaker 2>A double.

NOTE CONF {"raw":[100,100]}

00:21:41.420 --> 00:21:45.660
<v Speaker 2>And then we're going to have print centre which takes

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:45.660 --> 00:21:47.700
<v Speaker 2>the centre doesn't return anything okay.

NOTE CONF {"raw":[100,100,100,100,100,98]}

00:21:47.700 --> 00:21:49.100
<v Speaker 2>And then we're going to have all the other things.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:49.100 --> 00:21:50.500
<v Speaker 2>But this is where we start off.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:21:50.500 --> 00:21:52.620
<v Speaker 2>So that you can see this is immediately quite clear

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:52.620 --> 00:21:53.500
<v Speaker 2>what's going on here.

NOTE CONF {"raw":[100,100,100,100]}

00:21:53.660 --> 00:21:55.540
<v Speaker 2>Now we have to put in these methods.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:21:55.740 --> 00:21:57.940
<v Speaker 2>So let's do public static.

NOTE CONF {"raw":[100,100,100,100,100]}

00:21:58.580 --> 00:22:03.460
<v Speaker 2>Um we're going to do parse arguments here which takes

NOTE CONF {"raw":[78,100,100,100,100,65,100,100,100,100]}

00:22:03.460 --> 00:22:04.420
<v Speaker 2>in args.

NOTE CONF {"raw":[67,100]}

00:22:05.140 --> 00:22:07.260
<v Speaker 2>Um so we have to think what is the return

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:07.260 --> 00:22:08.580
<v Speaker 2>value we're going to put in here.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:22:11.580 --> 00:22:12.180
<v Speaker 2>Double array.

NOTE CONF {"raw":[100,100]}

00:22:12.220 --> 00:22:12.540
<v Speaker 2>Yeah.

NOTE CONF {"raw":[100]}

00:22:12.780 --> 00:22:15.540
<v Speaker 2>So we've already said it's it's something that returns double

NOTE CONF {"raw":[100,100,100,100,82,100,100,100,100,100]}

00:22:15.540 --> 00:22:15.900
<v Speaker 2>rated.

NOTE CONF {"raw":[91]}

00:22:15.900 --> 00:22:16.860
<v Speaker 2>This has got to match.

NOTE CONF {"raw":[100,100,100,100,100]}

00:22:17.340 --> 00:22:19.420
<v Speaker 2>And then we've got to tell it what kind of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:19.460 --> 00:22:20.300
<v Speaker 2>thing ARGs are.

NOTE CONF {"raw":[100,100,100]}

00:22:20.620 --> 00:22:23.860
<v Speaker 2>And then we're going to have whatever we're doing.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:22:23.860 --> 00:22:25.740
<v Speaker 2>We're going to have a return going to return something

NOTE CONF {"raw":[100,100,100,100,86,100,100,100,100,100]}

00:22:25.740 --> 00:22:27.100
<v Speaker 2>that's a double array.

NOTE CONF {"raw":[100,100,100,100]}

00:22:27.100 --> 00:22:28.540
<v Speaker 2>And we're going to have some code in here.

NOTE CONF {"raw":[100,93,93,93,100,100,100,100,100]}

00:22:28.660 --> 00:22:30.660
<v Speaker 2>So this is how we structure it right.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:22:30.700 --> 00:22:32.060
<v Speaker 2>We have all these different methods.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:22:32.060 --> 00:22:34.020
<v Speaker 2>You go to main, you can clearly see the logic.

NOTE CONF {"raw":[100,100,100,98,100,100,100,100,100,100]}

00:22:34.020 --> 00:22:35.910
<v Speaker 2>And then if you want to see what's happening in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:35.910 --> 00:22:36.990
<v Speaker 2>each of those methods.

NOTE CONF {"raw":[100,100,100,100]}

00:22:36.990 --> 00:22:39.150
<v Speaker 2>You go inside them in detail.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:22:40.510 --> 00:22:42.230
<v Speaker 2>Okay, so this is what it looks like when we've

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:42.230 --> 00:22:44.190
<v Speaker 2>got, um, everything in there.

NOTE CONF {"raw":[100,95,100,100,100]}

00:22:45.030 --> 00:22:47.390
<v Speaker 2>Um, so in here, we've got all the codes.

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,94]}

00:22:47.390 --> 00:22:49.150
<v Speaker 2>I'm not going to go through all the code because

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:49.150 --> 00:22:50.910
<v Speaker 2>it's not really relevant to the point we're making.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:22:50.910 --> 00:22:52.430
<v Speaker 2>But if you want to have practice at code, you

NOTE CONF {"raw":[100,100,100,100,100,100,100,80,72,100]}

00:22:52.430 --> 00:22:54.430
<v Speaker 2>can have a look at how it's coding all these

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:54.430 --> 00:22:55.190
<v Speaker 2>different paths.

NOTE CONF {"raw":[100,100]}

00:22:55.230 --> 00:22:57.750
<v Speaker 2>Arguments get sent to get neighbours and all of those

NOTE CONF {"raw":[100,100,100,100,100,75,100,100,100,100]}

00:22:57.750 --> 00:22:58.230
<v Speaker 2>things.

NOTE CONF {"raw":[100]}

00:22:58.510 --> 00:22:59.350
<v Speaker 2>It's all in there.

NOTE CONF {"raw":[100,100,100,100]}

00:22:59.350 --> 00:23:01.030
<v Speaker 2>So why do you want to do this?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:23:01.030 --> 00:23:03.030
<v Speaker 2>Do you want to break programs down into well named

NOTE CONF {"raw":[71,100,100,100,100,99,100,100,98,98]}

00:23:03.030 --> 00:23:03.470
<v Speaker 2>functions?

NOTE CONF {"raw":[100]}

00:23:03.470 --> 00:23:05.430
<v Speaker 2>All the functions I had had names that gave you

NOTE CONF {"raw":[100,100,100,100,100,100,100,98,100,100]}

00:23:05.430 --> 00:23:06.230
<v Speaker 2>an idea of what it was.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:23:06.230 --> 00:23:09.870
<v Speaker 2>They did make something really complex into something much clearer.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:09.990 --> 00:23:11.750
<v Speaker 2>It hides implementation details.

NOTE CONF {"raw":[100,100,100,100]}

00:23:11.750 --> 00:23:13.950
<v Speaker 2>So I might want to know how you're getting centred.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,71]}

00:23:13.950 --> 00:23:15.670
<v Speaker 2>I can go and look at it, but likely I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,74,100]}

00:23:15.670 --> 00:23:17.230
<v Speaker 2>don't really care how you do that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:23:17.230 --> 00:23:19.590
<v Speaker 2>I just need that to happen so I don't need

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:19.590 --> 00:23:20.430
<v Speaker 2>to see the difference.

NOTE CONF {"raw":[100,100,100,100]}

00:23:20.430 --> 00:23:22.230
<v Speaker 2>I think we did the dry we mentioned this last

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:22.230 --> 00:23:22.750
<v Speaker 2>time, didn't we?

NOTE CONF {"raw":[100,100,100]}

00:23:22.790 --> 00:23:23.590
<v Speaker 2>Don't repeat yourself.

NOTE CONF {"raw":[100,100,100]}

00:23:23.710 --> 00:23:24.390
<v Speaker 2>Readability.

NOTE CONF {"raw":[100]}

00:23:24.430 --> 00:23:25.310
<v Speaker 2>Maintainability.

NOTE CONF {"raw":[100]}

00:23:25.350 --> 00:23:26.190
<v Speaker 2>Super important.

NOTE CONF {"raw":[100,100]}

00:23:26.230 --> 00:23:27.230
<v Speaker 2>10 to 12 lines.

NOTE CONF {"raw":[100,100,100,100]}

00:23:29.750 --> 00:23:34.150
<v Speaker 2>Um, so it encourages good program practices by emphasising the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,99,100]}

00:23:34.170 --> 00:23:35.530
<v Speaker 2>discrete reusable methods.

NOTE CONF {"raw":[71,96,94]}

00:23:35.730 --> 00:23:38.210
<v Speaker 2>It self documents the code to some extent because you

NOTE CONF {"raw":[65,60,96,100,100,100,100,100,100,100]}

00:23:38.210 --> 00:23:39.530
<v Speaker 2>can understand what it's about.

NOTE CONF {"raw":[100,100,100,100,100]}

00:23:39.650 --> 00:23:42.370
<v Speaker 2>Use descriptive names so you can understand it and it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:42.370 --> 00:23:45.090
<v Speaker 2>reduces code duplication, which is a really bad thing as

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:45.090 --> 00:23:47.010
<v Speaker 2>we've said before, because it leads to errors and it's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:47.010 --> 00:23:51.050
<v Speaker 2>really hard to change recursive functions.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:23:51.970 --> 00:23:52.370
<v Speaker 2>Yeah.

NOTE CONF {"raw":[98]}

00:23:52.370 --> 00:23:54.970
<v Speaker 2>So the basic concepts are the same as in Haskell.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:55.810 --> 00:23:57.690
<v Speaker 2>Um, okay.

NOTE CONF {"raw":[67,100]}

00:23:57.730 --> 00:23:59.730
<v Speaker 2>So that's just picking up on some of the stuff

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:59.730 --> 00:24:01.810
<v Speaker 2>about functions that we didn't quite cover last time.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:24:01.810 --> 00:24:06.690
<v Speaker 2>So let's now move on to classes and objects.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:24:06.690 --> 00:24:09.290
<v Speaker 2>So we are, as I think has already come up

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:09.290 --> 00:24:10.170
<v Speaker 2>in the questions.

NOTE CONF {"raw":[100,100,100]}

00:24:10.290 --> 00:24:11.890
<v Speaker 2>This is an object oriented course.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:24:11.890 --> 00:24:13.930
<v Speaker 2>We haven't really talked about objects very much at all.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:13.930 --> 00:24:15.850
<v Speaker 2>That's because we need to get in the basic functional

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:15.850 --> 00:24:17.410
<v Speaker 2>stuff first okay.

NOTE CONF {"raw":[100,100,71]}

00:24:17.450 --> 00:24:18.770
<v Speaker 2>So why object orientation?

NOTE CONF {"raw":[100,100,100,100]}

00:24:18.770 --> 00:24:21.930
<v Speaker 2>Why is this such a common paradigm in coding is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:21.930 --> 00:24:24.130
<v Speaker 2>because changing code is really hard and expensive.

NOTE CONF {"raw":[100,73,72,100,100,100,100,100]}

00:24:24.250 --> 00:24:26.170
<v Speaker 2>But the world is really dynamic.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:24:26.290 --> 00:24:29.250
<v Speaker 2>So changing your code all the time, you know, on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:29.250 --> 00:24:31.930
<v Speaker 2>your phone how often you get app updates and so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:31.930 --> 00:24:32.170
<v Speaker 2>forth.

NOTE CONF {"raw":[100]}

00:24:32.170 --> 00:24:34.700
<v Speaker 2>You're constantly changing, updating, improving.

NOTE CONF {"raw":[100,100,100,100,100]}

00:24:35.300 --> 00:24:36.460
<v Speaker 2>Because you have to.

NOTE CONF {"raw":[100,100,100,100]}

00:24:36.660 --> 00:24:38.700
<v Speaker 2>Because the world's changed or because you want to.

NOTE CONF {"raw":[100,100,78,75,100,100,100,100,100]}

00:24:38.740 --> 00:24:40.020
<v Speaker 2>Because you've thought of new features.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:24:40.100 --> 00:24:40.740
<v Speaker 2>This happens.

NOTE CONF {"raw":[100,100]}

00:24:40.740 --> 00:24:42.980
<v Speaker 2>This is mostly what coding is about, starting from scratch

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:42.980 --> 00:24:43.780
<v Speaker 2>and creating something new.

NOTE CONF {"raw":[100,100,100,100]}

00:24:43.780 --> 00:24:45.380
<v Speaker 2>It doesn't happen all that much.

NOTE CONF {"raw":[41,100,100,100,100,100]}

00:24:45.420 --> 00:24:47.220
<v Speaker 2>I mean, it happens quite a lot, but mostly it's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:47.220 --> 00:24:49.780
<v Speaker 2>about improving and extending what you already have.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:24:50.700 --> 00:24:52.700
<v Speaker 2>Okay, so you want to minimise the amount of code

NOTE CONF {"raw":[96,100,100,100,100,100,100,100,100,100]}

00:24:52.700 --> 00:24:54.060
<v Speaker 2>that you have to change, and you want to make

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:54.060 --> 00:24:56.340
<v Speaker 2>it really easy to work out which bit of code

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:56.340 --> 00:24:57.140
<v Speaker 2>you have to change.

NOTE CONF {"raw":[100,100,100,100]}

00:24:57.700 --> 00:25:00.260
<v Speaker 2>And the kind of the fundamental rule is that code

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:00.260 --> 00:25:02.780
<v Speaker 2>that, that, that you need to change.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:25:05.300 --> 00:25:06.940
<v Speaker 2>The things you want to change at once should live

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:06.980 --> 00:25:07.580
<v Speaker 2>together, right?

NOTE CONF {"raw":[100,94]}

00:25:07.620 --> 00:25:10.620
<v Speaker 2>If the logic makes it makes a this is this

NOTE CONF {"raw":[100,100,100,100,95,100,63,100,100,100]}

00:25:10.620 --> 00:25:11.820
<v Speaker 2>is something that's happening.

NOTE CONF {"raw":[100,100,100,100]}

00:25:11.820 --> 00:25:13.540
<v Speaker 2>So if you want to change this, it all happens

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:13.540 --> 00:25:14.140
<v Speaker 2>in this place.

NOTE CONF {"raw":[100,100,100]}

00:25:14.220 --> 00:25:17.020
<v Speaker 2>It should be a place where they live together instead

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:17.020 --> 00:25:18.620
<v Speaker 2>of code all over the place where you have to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:18.620 --> 00:25:19.940
<v Speaker 2>go all into different things.

NOTE CONF {"raw":[100,100,96,100,100]}

00:25:20.020 --> 00:25:22.220
<v Speaker 2>Because one thing has changed and that's affecting lots of

NOTE CONF {"raw":[100,100,88,70,94,100,100,100,100,100]}

00:25:22.220 --> 00:25:22.940
<v Speaker 2>different things.

NOTE CONF {"raw":[100,100]}

00:25:23.460 --> 00:25:24.940
<v Speaker 2>You want it to affect one thing that you can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:24.940 --> 00:25:27.460
<v Speaker 2>change, and then that spirals out to all the other

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:27.460 --> 00:25:28.460
<v Speaker 2>things that are affected.

NOTE CONF {"raw":[100,95,100,100]}

00:25:28.900 --> 00:25:33.750
<v Speaker 2>We've talked about hiding information so that so that the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:33.750 --> 00:25:34.670
<v Speaker 2>code doesn't depend on it.

NOTE CONF {"raw":[100,100,100,100,100]}

00:25:34.670 --> 00:25:36.270
<v Speaker 2>I actually maybe I want to change how I do

NOTE CONF {"raw":[96,100,100,100,100,100,100,100,100,100]}

00:25:36.270 --> 00:25:36.430
<v Speaker 2>this.

NOTE CONF {"raw":[100]}

00:25:36.430 --> 00:25:36.950
<v Speaker 2>I can do that.

NOTE CONF {"raw":[100,100,100,100]}

00:25:36.950 --> 00:25:39.030
<v Speaker 2>It doesn't change anybody using that code.

NOTE CONF {"raw":[72,100,100,100,100,100,100]}

00:25:39.270 --> 00:25:42.030
<v Speaker 2>For example the parse arguments, maybe I've got an actually

NOTE CONF {"raw":[100,100,100,87,100,100,100,100,96,100]}

00:25:42.030 --> 00:25:43.150
<v Speaker 2>much more efficient way of doing this.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:25:43.150 --> 00:25:44.150
<v Speaker 2>I'll just change that.

NOTE CONF {"raw":[100,100,100,100]}

00:25:44.150 --> 00:25:46.350
<v Speaker 2>Nobody's using that method needs to care about that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:25:46.350 --> 00:25:48.270
<v Speaker 2>It's still doing the same thing for their point of

NOTE CONF {"raw":[100,100,100,100,100,100,60,100,100,100]}

00:25:48.270 --> 00:25:48.590
<v Speaker 2>view.

NOTE CONF {"raw":[100]}

00:25:49.950 --> 00:25:53.710
<v Speaker 2>So modularity and abstraction via functions you're using functions to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:53.710 --> 00:25:56.470
<v Speaker 2>get this modularity okay.

NOTE CONF {"raw":[100,100,100,100]}

00:25:56.510 --> 00:25:58.270
<v Speaker 2>So the interface between the user of the code and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:58.270 --> 00:25:59.950
<v Speaker 2>the implementation is the API.

NOTE CONF {"raw":[100,100,100,100,100]}

00:26:00.230 --> 00:26:03.150
<v Speaker 2>So this is the implementation is what's under the hood

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:03.150 --> 00:26:04.390
<v Speaker 2>what Java is actually doing.

NOTE CONF {"raw":[100,58,58,100,100]}

00:26:04.710 --> 00:26:08.310
<v Speaker 2>The the user is, is the person what they want

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:08.310 --> 00:26:08.710
<v Speaker 2>it to do.

NOTE CONF {"raw":[100,100,100]}

00:26:08.710 --> 00:26:10.910
<v Speaker 2>And the API is how we're telling it that that's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:10.910 --> 00:26:11.790
<v Speaker 2>supposed to happen.

NOTE CONF {"raw":[100,100,100]}

00:26:11.910 --> 00:26:17.110
<v Speaker 2>So for example, um, these slides weren't actually done that

NOTE CONF {"raw":[100,100,100,99,100,100,94,100,100,100]}

00:26:17.110 --> 00:26:18.790
<v Speaker 2>long ago, but this is a bit retro.

NOTE CONF {"raw":[100,100,100,62,61,100,100,100]}

00:26:19.270 --> 00:26:20.670
<v Speaker 2>Um, but we have a client.

NOTE CONF {"raw":[95,100,100,100,100,100]}

00:26:21.350 --> 00:26:23.110
<v Speaker 2>This is, this is the example of a tele.

NOTE CONF {"raw":[93,90,100,100,76,100,100,56,81]}

00:26:23.110 --> 00:26:25.030
<v Speaker 2>The API would be the remote control, right.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:26:25.070 --> 00:26:26.870
<v Speaker 2>That's how the user interacts with the machine.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:26:26.870 --> 00:26:28.590
<v Speaker 2>You don't need to care about what's going on under

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:28.590 --> 00:26:28.990
<v Speaker 2>the hood.

NOTE CONF {"raw":[100,100]}

00:26:29.030 --> 00:26:31.410
<v Speaker 2>You don't need to care about, you know, the cathode

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:31.410 --> 00:26:32.810
<v Speaker 2>ray tube or however it's happening.

NOTE CONF {"raw":[100,100,100,100,95,100]}

00:26:32.890 --> 00:26:34.570
<v Speaker 2>You just need to know the buttons you need to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:34.570 --> 00:26:36.050
<v Speaker 2>press to get it to what you want to do.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:36.970 --> 00:26:39.530
<v Speaker 2>An API probably is a concept most of you are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,98,98]}

00:26:39.530 --> 00:26:40.330
<v Speaker 2>really familiar with.

NOTE CONF {"raw":[100,100,100]}

00:26:41.690 --> 00:26:44.010
<v Speaker 2>Okay, so data representation.

NOTE CONF {"raw":[100,100,100,100]}

00:26:47.250 --> 00:26:49.050
<v Speaker 2>So a data type is a set of values and

NOTE CONF {"raw":[100,99,100,100,100,100,100,100,100,100]}

00:26:49.090 --> 00:26:50.410
<v Speaker 2>operations on those values.

NOTE CONF {"raw":[100,100,100,100]}

00:26:50.410 --> 00:26:52.530
<v Speaker 2>And as we've said in Java it's a type language.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:52.610 --> 00:26:53.690
<v Speaker 2>Types are really important.

NOTE CONF {"raw":[100,100,100,100]}

00:26:53.690 --> 00:26:55.850
<v Speaker 2>You can't do anything in Java until you've told it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:55.890 --> 00:26:58.770
<v Speaker 2>What the type of thing you're what type everything you're

NOTE CONF {"raw":[100,100,100,100,100,84,100,100,100,100]}

00:26:58.770 --> 00:26:59.490
<v Speaker 2>talking about is.

NOTE CONF {"raw":[100,100,100]}

00:26:59.890 --> 00:27:02.010
<v Speaker 2>So we have primitive types and we've seen these before.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:02.130 --> 00:27:03.490
<v Speaker 2>Integers double boolean.

NOTE CONF {"raw":[100,100,100]}

00:27:03.490 --> 00:27:05.370
<v Speaker 2>Those are all the really basic ones we started off.

NOTE CONF {"raw":[100,100,93,100,100,100,100,100,100,100]}

00:27:06.210 --> 00:27:07.610
<v Speaker 2>Also you have user defined.

NOTE CONF {"raw":[100,100,100,100,100]}

00:27:07.610 --> 00:27:09.290
<v Speaker 2>So a lot of them I mean mostly when you're

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:09.290 --> 00:27:11.650
<v Speaker 2>programming you're going to be creating your own types.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:27:12.530 --> 00:27:16.370
<v Speaker 2>And these you can call anything but you can call

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:16.370 --> 00:27:16.810
<v Speaker 2>them anything.

NOTE CONF {"raw":[100,100]}

00:27:16.810 --> 00:27:18.930
<v Speaker 2>But you always should call them something that's logical and

NOTE CONF {"raw":[100,100,100,100,100,100,100,96,100,100]}

00:27:18.930 --> 00:27:21.210
<v Speaker 2>clear so that people coming to it fresh will understand

NOTE CONF {"raw":[100,100,100,100,95,95,100,96,100,100]}

00:27:21.210 --> 00:27:22.890
<v Speaker 2>what it is those things are supposed to be doing.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:23.370 --> 00:27:26.610
<v Speaker 2>So the quick way to tell the difference, if you're

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:26.610 --> 00:27:28.010
<v Speaker 2>looking at something, you want to know which one it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:28.010 --> 00:27:28.170
<v Speaker 2>is.

NOTE CONF {"raw":[100]}

00:27:28.170 --> 00:27:30.100
<v Speaker 2>Although it's pretty obvious because you know you know what

NOTE CONF {"raw":[100,86,100,100,100,100,100,100,100,100]}

00:27:30.100 --> 00:27:30.700
<v Speaker 2>the primitives are.

NOTE CONF {"raw":[100,100,100]}

00:27:30.700 --> 00:27:34.340
<v Speaker 2>But primitives always start with lowercase letters, whereas user defined

NOTE CONF {"raw":[100,100,100,100,100,100,100,92,100,100]}

00:27:34.340 --> 00:27:37.580
<v Speaker 2>always start with uppercase letters, and when you have new

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:37.580 --> 00:27:39.180
<v Speaker 2>words in it, you shove all the words together and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:39.180 --> 00:27:40.980
<v Speaker 2>each one starts with a capital letter.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:27:43.140 --> 00:27:45.300
<v Speaker 2>And you can have them be arbitrary long, but the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:45.300 --> 00:27:47.100
<v Speaker 2>longer they get, the more difficult they are to read.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:47.220 --> 00:27:52.140
<v Speaker 2>There is occasional exceptions, for example strings.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:27:52.140 --> 00:27:54.620
<v Speaker 2>So you may have noticed that when I do ints

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:54.620 --> 00:27:57.460
<v Speaker 2>it's always lowercase, but when you put strings in is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:57.460 --> 00:27:58.340
<v Speaker 2>always an uppercase.

NOTE CONF {"raw":[100,100,100]}

00:27:58.420 --> 00:28:00.460
<v Speaker 2>This is because string is not a primitive.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:28:00.940 --> 00:28:04.460
<v Speaker 2>However, string is so common that it kind of behaves

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:04.460 --> 00:28:05.180
<v Speaker 2>like a primitive.

NOTE CONF {"raw":[100,100,100]}

00:28:05.180 --> 00:28:06.540
<v Speaker 2>It has a lot of built in stuff in the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:06.540 --> 00:28:08.140
<v Speaker 2>standard library, so you can do a lot of things

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:08.140 --> 00:28:10.140
<v Speaker 2>with strings that are already built in.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:28:10.140 --> 00:28:13.060
<v Speaker 2>So effectively you can treat it like a primitive, but

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:13.060 --> 00:28:15.540
<v Speaker 2>it starts with a capital okay.

NOTE CONF {"raw":[100,100,100,100,100,86]}

00:28:15.580 --> 00:28:17.380
<v Speaker 2>You don't need to know how the data type is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:17.380 --> 00:28:18.980
<v Speaker 2>implemented in order to use it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:28:19.500 --> 00:28:21.700
<v Speaker 2>So we don't need to know like printer.

NOTE CONF {"raw":[100,100,100,100,100,100,100,81]}

00:28:21.700 --> 00:28:22.860
<v Speaker 2>Q how does a printer Q work?

NOTE CONF {"raw":[94,100,100,99,70,81,100]}

00:28:22.860 --> 00:28:24.340
<v Speaker 2>I don't care, I just care that there's a print

NOTE CONF {"raw":[100,100,100,100,97,100,100,100,100,96]}

00:28:24.340 --> 00:28:25.820
<v Speaker 2>Q and it's going to help me print stuff.

NOTE CONF {"raw":[94,100,100,100,100,100,100,100,100]}

00:28:27.460 --> 00:28:29.350
<v Speaker 2>So you should read the documentation.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:28:29.590 --> 00:28:31.350
<v Speaker 2>Actually, I should show you all the Java documentation.

NOTE CONF {"raw":[100,100,100,62,100,100,100,100,100]}

00:28:31.350 --> 00:28:32.830
<v Speaker 2>I haven't got that up today, but I'll show you

NOTE CONF {"raw":[100,100,100,100,100,100,100,98,100,100]}

00:28:32.830 --> 00:28:33.390
<v Speaker 2>that on Thursday.

NOTE CONF {"raw":[100,100,100]}

00:28:33.390 --> 00:28:33.750
<v Speaker 2>Maybe.

NOTE CONF {"raw":[94]}

00:28:33.950 --> 00:28:36.830
<v Speaker 2>But there's good documentation about everything built in in Java.

NOTE CONF {"raw":[100,100,100,100,100,100,100,96,98,100]}

00:28:36.830 --> 00:28:39.150
<v Speaker 2>It will tell you what it takes in and what

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:39.150 --> 00:28:40.550
<v Speaker 2>it returns and what it does.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:28:41.030 --> 00:28:43.230
<v Speaker 2>And when you are, we'll get on to this later.

NOTE CONF {"raw":[100,100,100,100,100,100,80,83,100,100]}

00:28:43.230 --> 00:28:45.190
<v Speaker 2>When you're writing your own stuff, you need to provide

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:45.190 --> 00:28:47.310
<v Speaker 2>documentation so people understand what they're for.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:28:48.750 --> 00:28:52.910
<v Speaker 2>So there's this difference between abstraction and encapsulation, which are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:53.190 --> 00:28:55.230
<v Speaker 2>actually generally used fairly interchangeably.

NOTE CONF {"raw":[100,100,100,100,100]}

00:28:55.230 --> 00:28:58.950
<v Speaker 2>But a slightly, subtly different abstraction means you don't need

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:58.950 --> 00:29:01.990
<v Speaker 2>to know about implementation, and encapsulation means you can't depend

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:01.990 --> 00:29:02.910
<v Speaker 2>on implementation.

NOTE CONF {"raw":[100,100]}

00:29:02.990 --> 00:29:05.670
<v Speaker 2>So in encapsulation, things can actually be changing under the

NOTE CONF {"raw":[100,96,100,100,100,100,100,100,100,100]}

00:29:05.670 --> 00:29:06.030
<v Speaker 2>hood.

NOTE CONF {"raw":[100]}

00:29:06.510 --> 00:29:10.190
<v Speaker 2>But the documentation should always be telling you what it's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:10.190 --> 00:29:10.590
<v Speaker 2>doing.

NOTE CONF {"raw":[100]}

00:29:11.350 --> 00:29:13.350
<v Speaker 2>And this varies between languages.

NOTE CONF {"raw":[100,100,100,100,100]}

00:29:14.470 --> 00:29:17.150
<v Speaker 2>Okay, so as I was saying it's mostly pretty procedure.

NOTE CONF {"raw":[100,100,100,100,100,100,90,100,100,60]}

00:29:17.150 --> 00:29:18.230
<v Speaker 2>What we've been doing so far.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:18.230 --> 00:29:20.510
<v Speaker 2>That's because we're building up the underlying stuff.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:29:22.030 --> 00:29:25.750
<v Speaker 2>So we've looked at primitive types control flow and how

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:25.750 --> 00:29:26.630
<v Speaker 2>to put things into array.

NOTE CONF {"raw":[100,100,100,100,89]}

00:29:26.630 --> 00:29:28.290
<v Speaker 2>None of that is object orientation.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:28.410 --> 00:29:30.530
<v Speaker 2>That's just the tools that you're going to need when

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:30.530 --> 00:29:32.250
<v Speaker 2>you're doing some object orientation.

NOTE CONF {"raw":[100,100,100,100,100]}

00:29:33.690 --> 00:29:33.930
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:29:33.970 --> 00:29:37.810
<v Speaker 2>So but the philosophy of object orientation, which as, as

NOTE CONF {"raw":[94,98,100,100,92,100,100,100,100,100]}

00:29:37.810 --> 00:29:40.570
<v Speaker 2>we've been saying software changes a lot.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:29:40.610 --> 00:29:45.610
<v Speaker 2>So structuring based on oh so structuring based on what

NOTE CONF {"raw":[100,100,100,100,99,100,100,100,100,98]}

00:29:45.610 --> 00:29:48.130
<v Speaker 2>your software should do is really expensive, right.

NOTE CONF {"raw":[100,100,100,100,100,100,100,91]}

00:29:48.170 --> 00:29:49.450
<v Speaker 2>Because that is going to change.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:49.650 --> 00:29:52.810
<v Speaker 2>However, the world, the domain in which you live or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:52.810 --> 00:29:55.250
<v Speaker 2>what you're structuring this or what you're setting it, it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,90,100]}

00:29:55.250 --> 00:29:56.170
<v Speaker 2>doesn't change as much.

NOTE CONF {"raw":[100,100,100,100]}

00:29:56.210 --> 00:29:56.370
<v Speaker 2>Right?

NOTE CONF {"raw":[94]}

00:29:56.410 --> 00:29:58.450
<v Speaker 2>So the kind of objects that can exist in your

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:58.450 --> 00:30:00.970
<v Speaker 2>world are much less likely to change in the kinds

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:00.970 --> 00:30:02.170
<v Speaker 2>of things you want them to do.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:30:02.650 --> 00:30:04.250
<v Speaker 2>So if you if you think of it all in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:04.250 --> 00:30:06.370
<v Speaker 2>terms of objects and how they interact with each other,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:06.450 --> 00:30:08.490
<v Speaker 2>that's a much more stable design.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:30:08.490 --> 00:30:10.330
<v Speaker 2>And you can change how they do things within the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:10.330 --> 00:30:12.770
<v Speaker 2>objects without changing that overall structure.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:30:12.890 --> 00:30:14.890
<v Speaker 2>Whereas if you're structuring it all around what it's actually

NOTE CONF {"raw":[100,100,100,100,99,100,100,100,100,100]}

00:30:14.890 --> 00:30:17.010
<v Speaker 2>going to do, then when you when what you want

NOTE CONF {"raw":[100,100,100,100,100,81,100,100,100,100]}

00:30:17.010 --> 00:30:19.930
<v Speaker 2>it to do changes that, that means much more fundamental

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:19.930 --> 00:30:20.450
<v Speaker 2>changes.

NOTE CONF {"raw":[100]}

00:30:20.530 --> 00:30:22.330
<v Speaker 2>So this is a much more stable way of coding,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:22.330 --> 00:30:24.530
<v Speaker 2>which means it's easy to to exist in a very

NOTE CONF {"raw":[100,100,100,98,86,100,100,100,100,100]}

00:30:24.530 --> 00:30:29.260
<v Speaker 2>dynamic world without doing with doing the minimum amount of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:29.260 --> 00:30:29.940
<v Speaker 2>maintenance.

NOTE CONF {"raw":[100]}

00:30:31.580 --> 00:30:35.140
<v Speaker 2>Okay, so I think we came into this right at

NOTE CONF {"raw":[100,100,100,100,100,100,98,100,100,100]}

00:30:35.140 --> 00:30:35.660
<v Speaker 2>the beginning.

NOTE CONF {"raw":[100,100]}

00:30:35.820 --> 00:30:38.660
<v Speaker 2>Things in the world, i.e. objects, they know things and

NOTE CONF {"raw":[100,100,100,100,43,100,100,100,100,100]}

00:30:38.660 --> 00:30:41.980
<v Speaker 2>they do things knowing things as instant variables, that's the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,43,100]}

00:30:41.980 --> 00:30:42.940
<v Speaker 2>values that they have.

NOTE CONF {"raw":[100,100,100,100]}

00:30:43.140 --> 00:30:44.340
<v Speaker 2>Doing things as methods.

NOTE CONF {"raw":[100,100,94,100]}

00:30:44.380 --> 00:30:44.540
<v Speaker 2>Right.

NOTE CONF {"raw":[94]}

00:30:44.580 --> 00:30:46.660
<v Speaker 2>What are the kinds of methods that they can do?

NOTE CONF {"raw":[100,100,100,56,100,100,100,100,100,100]}

00:30:46.780 --> 00:30:49.140
<v Speaker 2>So objects have states, which is what they know the

NOTE CONF {"raw":[100,100,100,78,100,100,100,100,100,95]}

00:30:49.140 --> 00:30:50.100
<v Speaker 2>instance variable.

NOTE CONF {"raw":[100,100]}

00:30:50.100 --> 00:30:52.300
<v Speaker 2>And they have behaviour which is the things that they

NOTE CONF {"raw":[100,100,100,88,100,100,100,100,100,100]}

00:30:52.300 --> 00:30:54.220
<v Speaker 2>can do which are defined in the methods.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:30:54.660 --> 00:30:55.980
<v Speaker 2>So here we have a car right.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:30:55.980 --> 00:30:59.100
<v Speaker 2>We're creating an object a class of car type car

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:59.220 --> 00:31:01.180
<v Speaker 2>which is going to create objects of type car.

NOTE CONF {"raw":[100,99,100,100,100,100,100,100,100]}

00:31:01.380 --> 00:31:01.580
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:31:01.620 --> 00:31:04.860
<v Speaker 2>So what can it what does it know about itself.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:04.860 --> 00:31:06.580
<v Speaker 2>So it might know there's all kinds of things you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:06.580 --> 00:31:07.060
<v Speaker 2>could put in here.

NOTE CONF {"raw":[98,100,100,100]}

00:31:07.060 --> 00:31:09.580
<v Speaker 2>But for example it might know whether it's engines on

NOTE CONF {"raw":[100,100,100,100,100,100,100,41,74,100]}

00:31:09.580 --> 00:31:11.300
<v Speaker 2>it might know what speed it's travelling at.

NOTE CONF {"raw":[100,100,100,100,100,90,86,100]}

00:31:11.340 --> 00:31:12.860
<v Speaker 2>It might know how much petrol it's got.

NOTE CONF {"raw":[100,100,100,100,100,100,87,100]}

00:31:12.900 --> 00:31:17.260
<v Speaker 2>These are these are facts about the object.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:18.180 --> 00:31:19.860
<v Speaker 2>What kinds of things can it do.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:31:19.900 --> 00:31:21.460
<v Speaker 2>What are the methods that might exist.

NOTE CONF {"raw":[100,100,100,100,91,100,100]}

00:31:21.460 --> 00:31:23.540
<v Speaker 2>So you might want to start the engine.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:23.540 --> 00:31:26.110
<v Speaker 2>You might want to stop the engine maybe accelerate, maybe

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:26.110 --> 00:31:27.870
<v Speaker 2>break, maybe refill petrol.

NOTE CONF {"raw":[50,100,100,100]}

00:31:27.950 --> 00:31:29.550
<v Speaker 2>And again with the car there's loads of things you

NOTE CONF {"raw":[100,100,100,74,100,100,100,100,100,100]}

00:31:29.550 --> 00:31:30.190
<v Speaker 2>can put in there.

NOTE CONF {"raw":[100,100,100,98]}

00:31:30.270 --> 00:31:32.550
<v Speaker 2>But when you're designing objects, when you're designing, when you're

NOTE CONF {"raw":[100,100,100,100,100,100,94,58,100,100]}

00:31:32.550 --> 00:31:35.510
<v Speaker 2>writing classes, just write the stuff that you need.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:31:35.550 --> 00:31:38.350
<v Speaker 2>Don't think about, oh, maybe one day I'd really want

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:38.390 --> 00:31:39.870
<v Speaker 2>to know how many doors are open.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:31:39.870 --> 00:31:41.670
<v Speaker 2>Or maybe one day I really want it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:41.710 --> 00:31:43.190
<v Speaker 2>You know, there's loads of stuff you can do.

NOTE CONF {"raw":[96,96,100,100,100,100,100,100,100]}

00:31:43.310 --> 00:31:45.030
<v Speaker 2>You can do that as you go along, as you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:45.030 --> 00:31:47.230
<v Speaker 2>need to keep it as simple as as you can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:47.230 --> 00:31:49.030
<v Speaker 2>as you're writing it, and only write stuff that you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:49.030 --> 00:31:50.790
<v Speaker 2>know you're going to want it to do, and then

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:50.790 --> 00:31:52.350
<v Speaker 2>you can easily add stuff as you go.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:52.750 --> 00:31:57.350
<v Speaker 2>So programs run by objects sending messages i.e. initiating behaviour

NOTE CONF {"raw":[100,94,100,100,100,100,100,83,100,64]}

00:31:57.350 --> 00:31:57.950
<v Speaker 2>to one another.

NOTE CONF {"raw":[100,100,100]}

00:31:57.950 --> 00:31:59.630
<v Speaker 2>So that's what we've seen before.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:31:59.910 --> 00:32:02.790
<v Speaker 2>For example, we had the main in the nearest neighbours

NOTE CONF {"raw":[100,100,100,91,100,100,100,100,100,66]}

00:32:02.790 --> 00:32:03.030
<v Speaker 2>thing.

NOTE CONF {"raw":[91]}

00:32:03.030 --> 00:32:05.230
<v Speaker 2>We had the main thing that was running and it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:05.270 --> 00:32:06.150
<v Speaker 2>wanted to get the point.

NOTE CONF {"raw":[100,100,100,100,70]}

00:32:06.150 --> 00:32:08.590
<v Speaker 2>So it sent a message off to parse arguments to

NOTE CONF {"raw":[100,96,100,100,100,95,98,88,100,100]}

00:32:09.070 --> 00:32:10.110
<v Speaker 2>do something useful.

NOTE CONF {"raw":[100,100,100]}

00:32:11.350 --> 00:32:14.070
<v Speaker 2>So they send messages and they receive messages that tell

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:14.070 --> 00:32:16.750
<v Speaker 2>them to do stuff, which maybe change dates and maybe

NOTE CONF {"raw":[100,100,100,100,100,95,100,44,52,100]}

00:32:16.750 --> 00:32:18.270
<v Speaker 2>send more messages and so forth.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:32:18.950 --> 00:32:20.670
<v Speaker 2>Okay, so how does this work in Java?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:32:21.630 --> 00:32:24.650
<v Speaker 2>So Java is a class based object oriented language and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:24.650 --> 00:32:26.250
<v Speaker 2>we organise code in classes.

NOTE CONF {"raw":[100,92,77,100,97]}

00:32:26.290 --> 00:32:26.890
<v Speaker 2>Classes.

NOTE CONF {"raw":[100]}

00:32:28.130 --> 00:32:30.010
<v Speaker 2>And that's how you define your data types.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:32:30.090 --> 00:32:32.330
<v Speaker 2>So and we have these class diagrams right.

NOTE CONF {"raw":[100,100,100,100,100,100,100,97]}

00:32:32.370 --> 00:32:34.570
<v Speaker 2>So here we've got the name of the class here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:34.890 --> 00:32:36.250
<v Speaker 2>This is a class of car.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:32:36.850 --> 00:32:38.650
<v Speaker 2>We start off with the state.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:32:39.050 --> 00:32:41.490
<v Speaker 2>We have the things the things that it knows the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:41.490 --> 00:32:43.410
<v Speaker 2>variables that we have, whether or not it's running, what

NOTE CONF {"raw":[100,100,76,100,100,100,100,100,100,100]}

00:32:43.410 --> 00:32:45.450
<v Speaker 2>its speed is, how much petrol it has.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:32:45.490 --> 00:32:47.850
<v Speaker 2>And and because it's Java, of course we have to

NOTE CONF {"raw":[95,97,100,100,100,100,100,100,100,100]}

00:32:47.850 --> 00:32:48.410
<v Speaker 2>say the type.

NOTE CONF {"raw":[100,100,98]}

00:32:48.410 --> 00:32:49.810
<v Speaker 2>So running is boolean.

NOTE CONF {"raw":[100,100,100,100]}

00:32:49.810 --> 00:32:52.130
<v Speaker 2>Either it's either the engine's on or it's not.

NOTE CONF {"raw":[100,100,100,100,77,100,100,94,100]}

00:32:52.570 --> 00:32:53.730
<v Speaker 2>Speed is an integer.

NOTE CONF {"raw":[100,100,100,100]}

00:32:53.890 --> 00:32:54.810
<v Speaker 2>Petrol is a double.

NOTE CONF {"raw":[100,100,100,100]}

00:32:54.850 --> 00:32:56.290
<v Speaker 2>I mean we could do either of these either way

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:56.290 --> 00:32:59.410
<v Speaker 2>around, depending how precise we want to be or whatever.

NOTE CONF {"raw":[71,100,100,100,100,100,100,100,100,100]}

00:32:59.850 --> 00:33:02.130
<v Speaker 2>And this is its behaviour, the kinds of things it

NOTE CONF {"raw":[100,100,100,67,86,100,100,100,100,100]}

00:33:02.130 --> 00:33:02.570
<v Speaker 2>can do.

NOTE CONF {"raw":[100,100]}

00:33:02.730 --> 00:33:04.690
<v Speaker 2>So you have the name of the method.

NOTE CONF {"raw":[100,100,100,100,100,100,100,98]}

00:33:05.290 --> 00:33:07.570
<v Speaker 2>And the convention is here that these start with a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:07.570 --> 00:33:08.130
<v Speaker 2>lowercase.

NOTE CONF {"raw":[100]}

00:33:08.210 --> 00:33:10.650
<v Speaker 2>So class names always start with an uppercase method.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:33:10.650 --> 00:33:12.890
<v Speaker 2>Start with a lowercase and then an uppercase for every

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:12.890 --> 00:33:13.490
<v Speaker 2>extra word.

NOTE CONF {"raw":[100,100]}

00:33:13.490 --> 00:33:15.610
<v Speaker 2>And then you have the arguments you're passing to it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:15.850 --> 00:33:18.050
<v Speaker 2>So some methods don't have any arguments.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:33:18.170 --> 00:33:20.290
<v Speaker 2>Start engine doesn't need anything passed into it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:33:20.290 --> 00:33:22.010
<v Speaker 2>It just it just turns on or off.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:33:22.370 --> 00:33:23.290
<v Speaker 2>But accelerate.

NOTE CONF {"raw":[100,100]}

00:33:23.380 --> 00:33:25.500
<v Speaker 2>You need to pass something in because accelerate is not

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:25.500 --> 00:33:27.500
<v Speaker 2>just something you do or you don't do, you do.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:27.540 --> 00:33:29.020
<v Speaker 2>How much do you want to accelerate?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:33:29.020 --> 00:33:32.940
<v Speaker 2>So you need more information there and brake again.

NOTE CONF {"raw":[100,100,100,100,100,100,100,51,97]}

00:33:32.980 --> 00:33:34.020
<v Speaker 2>How much do you want to brake?

NOTE CONF {"raw":[100,100,100,100,100,100,92]}

00:33:34.020 --> 00:33:35.220
<v Speaker 2>How much petrol do you want.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:33:35.220 --> 00:33:37.820
<v Speaker 2>So you could just have refill petrol with no arguments.

NOTE CONF {"raw":[100,100,100,100,100,66,100,100,100,100]}

00:33:37.820 --> 00:33:39.420
<v Speaker 2>And that might just mean fill it right up to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:39.420 --> 00:33:39.860
<v Speaker 2>the top.

NOTE CONF {"raw":[100,100]}

00:33:39.980 --> 00:33:42.420
<v Speaker 2>Or you could have an argument and that means just

NOTE CONF {"raw":[100,100,85,100,100,100,100,100,100,100]}

00:33:42.420 --> 00:33:43.620
<v Speaker 2>fill it out by this amount.

NOTE CONF {"raw":[100,52,100,99,100,100]}

00:33:45.660 --> 00:33:45.860
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:33:45.900 --> 00:33:48.620
<v Speaker 2>So so far we've looked at behaviour defining behaviour.

NOTE CONF {"raw":[100,100,100,100,100,100,98,100,94]}

00:33:48.620 --> 00:33:52.900
<v Speaker 2>But we haven't really looked at building state okay.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:33:52.940 --> 00:33:56.500
<v Speaker 2>So state and behaviour these are the two super important

NOTE CONF {"raw":[100,83,100,88,100,100,100,100,100,100]}

00:33:56.500 --> 00:33:57.300
<v Speaker 2>things in class.

NOTE CONF {"raw":[100,100,100]}

00:33:57.340 --> 00:33:59.820
<v Speaker 2>There's one more thing that's really important and that is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:59.820 --> 00:34:00.660
<v Speaker 2>a constructor.

NOTE CONF {"raw":[100,100]}

00:34:01.020 --> 00:34:01.420
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:34:01.460 --> 00:34:04.300
<v Speaker 2>So the point of a constructor is when you want

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:04.300 --> 00:34:07.020
<v Speaker 2>to create an object, you use a constructor to do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:07.020 --> 00:34:07.220
<v Speaker 2>it.

NOTE CONF {"raw":[100]}

00:34:07.460 --> 00:34:09.860
<v Speaker 2>What does it mean to create an object?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:34:10.340 --> 00:34:12.540
<v Speaker 2>When an object is a virtual abstract thing, what does

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:12.540 --> 00:34:13.899
<v Speaker 2>it actually mean to create it?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:34:14.379 --> 00:34:18.020
<v Speaker 2>What it means is you're creating a space in memory

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:18.419 --> 00:34:20.500
<v Speaker 2>that's going to put that that object is going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:20.500 --> 00:34:23.399
<v Speaker 2>point to, and that's going to have spaces for information

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:23.399 --> 00:34:25.840
<v Speaker 2>about its about its state.

NOTE CONF {"raw":[100,74,100,99,100]}

00:34:26.840 --> 00:34:27.280
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:34:27.399 --> 00:34:29.200
<v Speaker 2>So construct is essential.

NOTE CONF {"raw":[99,93,93,99]}

00:34:30.919 --> 00:34:31.879
<v Speaker 2>And.

NOTE CONF {"raw":[98]}

00:34:32.800 --> 00:34:33.040
<v Speaker 2>Okay.

NOTE CONF {"raw":[99]}

00:34:33.040 --> 00:34:35.720
<v Speaker 2>So the constructor is a special method that has the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:35.720 --> 00:34:37.000
<v Speaker 2>same name as a class.

NOTE CONF {"raw":[100,100,100,77,100]}

00:34:37.080 --> 00:34:39.399
<v Speaker 2>So here you can see this is our constructor here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:39.480 --> 00:34:40.600
<v Speaker 2>It's called car.

NOTE CONF {"raw":[100,100,100]}

00:34:40.639 --> 00:34:43.000
<v Speaker 2>That's because it's a constructor for a class car.

NOTE CONF {"raw":[100,100,100,90,100,100,100,100,100]}

00:34:43.879 --> 00:34:46.919
<v Speaker 2>And then you use the constructor to create all these

NOTE CONF {"raw":[100,100,100,100,90,100,100,100,100,100]}

00:34:46.919 --> 00:34:47.639
<v Speaker 2>instances.

NOTE CONF {"raw":[100]}

00:34:48.120 --> 00:34:51.080
<v Speaker 2>And it allocates memory for class instance and initialises the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:51.080 --> 00:34:51.520
<v Speaker 2>state.

NOTE CONF {"raw":[100]}

00:34:52.399 --> 00:34:55.040
<v Speaker 2>So in Java instances of classes are objects.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:34:55.040 --> 00:34:57.920
<v Speaker 2>That is what objects are you create your classes to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:57.920 --> 00:34:59.680
<v Speaker 2>say what kinds of things there are in the world.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:59.800 --> 00:35:03.960
<v Speaker 2>And when you initialise that to construct a particular instance,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:04.080 --> 00:35:05.520
<v Speaker 2>you are creating an object.

NOTE CONF {"raw":[54,54,100,100,100]}

00:35:07.800 --> 00:35:08.200
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:35:08.440 --> 00:35:11.360
<v Speaker 2>So here we can see we are using a class

NOTE CONF {"raw":[100,100,98,100,100,100,100,100,100,100]}

00:35:11.640 --> 00:35:13.320
<v Speaker 2>car class and its API.

NOTE CONF {"raw":[62,100,100,72,100]}

00:35:15.320 --> 00:35:17.880
<v Speaker 2>And here we are using this keyword new.

NOTE CONF {"raw":[100,100,85,57,100,100,100,100]}

00:35:18.160 --> 00:35:21.160
<v Speaker 2>As we've said before, you cannot create something without using

NOTE CONF {"raw":[100,90,100,100,100,100,100,100,100,100]}

00:35:21.250 --> 00:35:21.890
<v Speaker 2>the keyword new.

NOTE CONF {"raw":[100,97,98]}

00:35:21.930 --> 00:35:24.210
<v Speaker 2>New means make some space in memory.

NOTE CONF {"raw":[100,100,99,100,100,60,100]}

00:35:24.570 --> 00:35:26.970
<v Speaker 2>Making some space in memory is what means for something

NOTE CONF {"raw":[100,100,100,94,100,100,100,100,100,100]}

00:35:27.010 --> 00:35:27.450
<v Speaker 2>to exist.

NOTE CONF {"raw":[100,100]}

00:35:27.450 --> 00:35:28.930
<v Speaker 2>It's got to have its space in memory.

NOTE CONF {"raw":[96,100,100,100,81,100,100,100]}

00:35:29.210 --> 00:35:31.490
<v Speaker 2>So here we've got my car, and my car doesn't

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:31.490 --> 00:35:32.170
<v Speaker 2>know anything.

NOTE CONF {"raw":[100,100]}

00:35:32.650 --> 00:35:37.570
<v Speaker 2>Um, but, uh, and if it's got, uh, the, the,

NOTE CONF {"raw":[99,100,99,100,100,93,100,100,100,100]}

00:35:38.090 --> 00:35:41.010
<v Speaker 2>the state variables will be initiated to whatever the default

NOTE CONF {"raw":[100,100,87,100,100,100,100,100,100,100]}

00:35:41.010 --> 00:35:41.290
<v Speaker 2>is.

NOTE CONF {"raw":[100]}

00:35:41.730 --> 00:35:44.530
<v Speaker 2>Um, so now we're doing some things to it.

NOTE CONF {"raw":[95,100,100,100,100,100,100,100,100]}

00:35:44.650 --> 00:35:46.610
<v Speaker 2>So we're going to say start the engine.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:35:46.610 --> 00:35:49.050
<v Speaker 2>So as we've seen before, the dot is what you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:49.050 --> 00:35:50.890
<v Speaker 2>use to signify that you're applying a method.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:35:50.970 --> 00:35:53.210
<v Speaker 2>So this is my object and this is the method

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:53.210 --> 00:35:54.010
<v Speaker 2>that I'm applying to it.

NOTE CONF {"raw":[100,100,100,100,100]}

00:35:54.010 --> 00:35:54.930
<v Speaker 2>I'm going to start the engine.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:35:54.930 --> 00:35:56.610
<v Speaker 2>I'm going to accelerate by 30.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:35:56.690 --> 00:35:59.890
<v Speaker 2>Then I'm going to brake by 30, which presumably means

NOTE CONF {"raw":[100,100,100,100,73,100,100,100,100,100]}

00:35:59.890 --> 00:36:02.210
<v Speaker 2>I come to stop and then we'll stop the engine.

NOTE CONF {"raw":[100,100,100,100,100,100,44,100,100,100]}

00:36:02.210 --> 00:36:03.330
<v Speaker 2>I'm going to refill petrol.

NOTE CONF {"raw":[100,100,100,100,100]}

00:36:03.330 --> 00:36:04.850
<v Speaker 2>So these are all things I can do with my

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:04.850 --> 00:36:06.410
<v Speaker 2>car now that I've initialised it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:36:07.610 --> 00:36:09.330
<v Speaker 2>So we have two independent ideas here.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:36:09.330 --> 00:36:13.090
<v Speaker 2>So we've got conceptual objects, the class instances such as

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:13.090 --> 00:36:13.730
<v Speaker 2>my car.

NOTE CONF {"raw":[82,82]}

00:36:14.370 --> 00:36:18.570
<v Speaker 2>Um, and then we have the static types that define

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:18.570 --> 00:36:19.330
<v Speaker 2>their behaviour.

NOTE CONF {"raw":[100,67]}

00:36:19.450 --> 00:36:19.610
<v Speaker 2>Right.

NOTE CONF {"raw":[85]}

00:36:19.730 --> 00:36:22.060
<v Speaker 2>So the car class is saying what can happen.

NOTE CONF {"raw":[100,100,94,100,100,100,100,100,100]}

00:36:22.260 --> 00:36:23.380
<v Speaker 2>So we have these objects.

NOTE CONF {"raw":[100,100,100,100,100]}

00:36:23.380 --> 00:36:26.300
<v Speaker 2>And then the class definition is telling what the object

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,84,100]}

00:36:26.300 --> 00:36:26.740
<v Speaker 2>can do.

NOTE CONF {"raw":[100,100]}

00:36:28.420 --> 00:36:31.300
<v Speaker 2>So objects have a static compile time type defined inside

NOTE CONF {"raw":[100,100,100,82,100,100,100,100,100,100]}

00:36:31.300 --> 00:36:31.780
<v Speaker 2>a class.

NOTE CONF {"raw":[100,100]}

00:36:31.780 --> 00:36:34.420
<v Speaker 2>Everything that an object can do will be defined by

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:34.420 --> 00:36:36.660
<v Speaker 2>the class that it's an object instance of.

NOTE CONF {"raw":[100,100,100,99,100,100,100,100]}

00:36:37.300 --> 00:36:40.140
<v Speaker 2>Uh, instances of classes are created at runtime, and they

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:36:40.140 --> 00:36:42.060
<v Speaker 2>need a constructor and the keyword new.

NOTE CONF {"raw":[100,85,100,100,100,100,98]}

00:36:45.660 --> 00:36:49.060
<v Speaker 2>And their reference types, which means they're referencing a piece

NOTE CONF {"raw":[100,50,100,100,100,100,100,100,100,100]}

00:36:49.060 --> 00:36:49.900
<v Speaker 2>of memory.

NOTE CONF {"raw":[100,100]}

00:36:51.540 --> 00:36:51.700
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:36:51.740 --> 00:36:52.900
<v Speaker 2>So what's happening in memory.

NOTE CONF {"raw":[100,100,100,100,100]}

00:36:52.980 --> 00:36:54.580
<v Speaker 2>So memory is something we're going to get into in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,91,98]}

00:36:54.580 --> 00:36:55.980
<v Speaker 2>more detail a bit later on.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:36:55.980 --> 00:36:58.780
<v Speaker 2>But this gives you a little bit of an idea

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:58.780 --> 00:37:00.140
<v Speaker 2>about what's actually happening.

NOTE CONF {"raw":[100,100,100,100]}

00:37:00.300 --> 00:37:02.860
<v Speaker 2>So first of all we're creating.

NOTE CONF {"raw":[100,100,100,100,97,99]}

00:37:02.900 --> 00:37:04.620
<v Speaker 2>So now we're looking at an array.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:05.020 --> 00:37:06.260
<v Speaker 2>It's an array of integers.

NOTE CONF {"raw":[98,100,100,100,100]}

00:37:06.260 --> 00:37:08.460
<v Speaker 2>And we're saying it's five long.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:37:08.460 --> 00:37:10.460
<v Speaker 2>So here we create it in memory because we use

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:10.460 --> 00:37:11.060
<v Speaker 2>a keyword new.

NOTE CONF {"raw":[82,100,89]}

00:37:11.100 --> 00:37:13.220
<v Speaker 2>We're now creating the space in memory that's got five

NOTE CONF {"raw":[100,100,100,95,100,100,100,100,100,100]}

00:37:13.220 --> 00:37:15.620
<v Speaker 2>slots always going to have five slots.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:15.620 --> 00:37:16.580
<v Speaker 2>We can't change that.

NOTE CONF {"raw":[100,100,100,100]}

00:37:16.660 --> 00:37:20.440
<v Speaker 2>These are all initiated to initialise to zero because it's

NOTE CONF {"raw":[100,100,100,100,100,77,100,100,100,97]}

00:37:20.440 --> 00:37:23.040
<v Speaker 2>of type integer and zero is the default for integer.

NOTE CONF {"raw":[94,100,100,100,100,100,100,100,100,100]}

00:37:23.680 --> 00:37:25.320
<v Speaker 2>But then we go on to change things.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:37:25.320 --> 00:37:27.080
<v Speaker 2>So we're going to say write my array three.

NOTE CONF {"raw":[100,100,100,100,100,78,84,84,91]}

00:37:27.280 --> 00:37:30.840
<v Speaker 2>I want that to take the value four and my

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,90]}

00:37:30.840 --> 00:37:35.040
<v Speaker 2>array two adds whatever's in 410 to whatever's in four.

NOTE CONF {"raw":[90,68,44,100,100,60,100,98,100,73]}

00:37:35.360 --> 00:37:37.960
<v Speaker 2>Um, and so this is actually changing things in memory

NOTE CONF {"raw":[44,100,100,100,100,100,100,100,100,100]}

00:37:37.960 --> 00:37:41.280
<v Speaker 2>when you're doing these, um, these operations.

NOTE CONF {"raw":[100,100,100,100,58,100,100]}

00:37:43.080 --> 00:37:43.360
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:37:43.400 --> 00:37:44.280
<v Speaker 2>So what about a car.

NOTE CONF {"raw":[100,100,100,100,90]}

00:37:44.280 --> 00:37:45.120
<v Speaker 2>So that's an array.

NOTE CONF {"raw":[100,100,100,100]}

00:37:45.120 --> 00:37:47.040
<v Speaker 2>But what happens when we have an object, a user

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:47.040 --> 00:37:53.160
<v Speaker 2>defined object that has, um, that has variables, that has

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:53.160 --> 00:37:53.640
<v Speaker 2>state.

NOTE CONF {"raw":[90]}

00:37:53.640 --> 00:37:55.280
<v Speaker 2>So here we're creating new car.

NOTE CONF {"raw":[100,100,98,100,100,90]}

00:37:55.320 --> 00:37:58.160
<v Speaker 2>This is creating a space in memory called my car

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,81,81]}

00:37:58.160 --> 00:37:59.600
<v Speaker 2>is going to have three slots in it.

NOTE CONF {"raw":[61,100,100,100,100,100,100,100]}

00:37:59.600 --> 00:38:03.160
<v Speaker 2>Because the class definition says that there are three state

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,93]}

00:38:03.200 --> 00:38:06.920
<v Speaker 2>of state, uh, there's three aspects of state, which is

NOTE CONF {"raw":[90,100,95,100,100,100,100,100,100,100]}

00:38:06.920 --> 00:38:09.720
<v Speaker 2>whether it's running what its speed is and um, how

NOTE CONF {"raw":[100,100,100,100,93,100,100,100,87,100]}

00:38:09.720 --> 00:38:10.800
<v Speaker 2>much petrol it has.

NOTE CONF {"raw":[100,100,100,100]}

00:38:11.360 --> 00:38:13.640
<v Speaker 2>So then we can do all of these things.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:38:14.000 --> 00:38:19.130
<v Speaker 2>Uh, so why are these, these values actually, that's maybe

NOTE CONF {"raw":[56,100,100,100,100,100,100,97,100,100]}

00:38:19.170 --> 00:38:19.410
<v Speaker 2>sorry.

NOTE CONF {"raw":[100]}

00:38:19.410 --> 00:38:20.410
<v Speaker 2>That's maybe slightly unclear.

NOTE CONF {"raw":[100,100,100,100]}

00:38:20.410 --> 00:38:24.450
<v Speaker 2>That slide I should probably update that because actually this

NOTE CONF {"raw":[100,94,98,98,100,100,100,100,100,100]}

00:38:24.450 --> 00:38:25.570
<v Speaker 2>is not the default.

NOTE CONF {"raw":[100,100,100,100]}

00:38:25.570 --> 00:38:26.570
<v Speaker 2>We have changed these.

NOTE CONF {"raw":[100,100,100,100]}

00:38:26.610 --> 00:38:30.490
<v Speaker 2>We initially we initialised this car and then we've changed

NOTE CONF {"raw":[100,81,100,81,100,100,100,100,100,100]}

00:38:30.490 --> 00:38:31.250
<v Speaker 2>these values.

NOTE CONF {"raw":[100,100]}

00:38:31.530 --> 00:38:33.970
<v Speaker 2>And we've said it's going travelling 30 and we.

NOTE CONF {"raw":[100,100,100,100,100,67,100,100,100]}

00:38:34.010 --> 00:38:34.570
<v Speaker 2>Yeah okay.

NOTE CONF {"raw":[100,100]}

00:38:34.610 --> 00:38:37.370
<v Speaker 2>So this this is what is happening as a result

NOTE CONF {"raw":[100,97,100,100,100,100,100,100,100,100]}

00:38:37.370 --> 00:38:38.290
<v Speaker 2>of these methods.

NOTE CONF {"raw":[100,100,100]}

00:38:38.490 --> 00:38:39.530
<v Speaker 2>So we start the engine.

NOTE CONF {"raw":[100,100,100,100,100]}

00:38:39.530 --> 00:38:42.530
<v Speaker 2>That means that running is true but it accelerates.

NOTE CONF {"raw":[100,100,100,100,100,100,97,81,97]}

00:38:43.090 --> 00:38:46.010
<v Speaker 2>That means that the speed is 30.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:38:46.890 --> 00:38:48.810
<v Speaker 2>So we're changing the values in the memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:38:51.810 --> 00:38:52.090
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:38:52.130 --> 00:38:55.850
<v Speaker 2>So creating class instance reserves memory for its state a

NOTE CONF {"raw":[100,100,100,100,100,100,100,96,100,100]}

00:38:55.850 --> 00:38:58.490
<v Speaker 2>constructor is executed to initialise this memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:38:58.490 --> 00:39:00.490
<v Speaker 2>So we use a constructor which has the same name

NOTE CONF {"raw":[100,100,100,98,100,100,100,100,100,100]}

00:39:00.490 --> 00:39:03.570
<v Speaker 2>as a as the class and the local variable Mycar

NOTE CONF {"raw":[100,75,100,77,100,100,100,100,100,62]}

00:39:03.570 --> 00:39:05.490
<v Speaker 2>holds a reference to the actual object.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:39:05.490 --> 00:39:08.810
<v Speaker 2>So my car is always pointing to the actual object

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:08.810 --> 00:39:09.810
<v Speaker 2>and what it means.

NOTE CONF {"raw":[100,100,100,100]}

00:39:09.810 --> 00:39:11.970
<v Speaker 2>What the actual object is, as we've said, is a

NOTE CONF {"raw":[100,100,100,100,100,100,90,100,100,95]}

00:39:11.970 --> 00:39:12.650
<v Speaker 2>space in memory.

NOTE CONF {"raw":[100,96,100]}

00:39:12.650 --> 00:39:13.930
<v Speaker 2>That is what the object is.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:39:14.010 --> 00:39:15.890
<v Speaker 2>So you're pointing to this space in memory.

NOTE CONF {"raw":[100,100,100,100,68,100,81,100]}

00:39:19.220 --> 00:39:22.260
<v Speaker 2>Okay, so this is a kind of an aside, but

NOTE CONF {"raw":[100,100,100,100,67,100,100,100,100,100]}

00:39:22.260 --> 00:39:24.300
<v Speaker 2>just because we're at this point where this makes sense

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:24.300 --> 00:39:27.020
<v Speaker 2>now, but just to just to go back to arrays,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,99]}

00:39:27.500 --> 00:39:28.580
<v Speaker 2>um.

NOTE CONF {"raw":[74]}

00:39:28.620 --> 00:39:33.340
<v Speaker 2>So an object in Java is either a class instance

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:33.900 --> 00:39:36.540
<v Speaker 2>of one of these classes that you've created or it's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,99]}

00:39:36.540 --> 00:39:37.020
<v Speaker 2>an array.

NOTE CONF {"raw":[100,100]}

00:39:37.500 --> 00:39:40.460
<v Speaker 2>Um, so arrays are treated like class instances.

NOTE CONF {"raw":[77,100,100,100,100,100,100,100]}

00:39:40.460 --> 00:39:42.220
<v Speaker 2>So in many ways you can think of arrays as.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:42.260 --> 00:39:43.860
<v Speaker 2>Now we've looked a bit more what it means to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:43.860 --> 00:39:45.580
<v Speaker 2>be a class instance or an object.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:39:45.740 --> 00:39:48.620
<v Speaker 2>Arrays are very similar to objects in many ways.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:39:48.620 --> 00:39:49.380
<v Speaker 2>They're just the same.

NOTE CONF {"raw":[97,100,100,100]}

00:39:49.420 --> 00:39:52.140
<v Speaker 2>You need the keyword new they reference in memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:39:52.260 --> 00:39:54.180
<v Speaker 2>You have the underlying class definition.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:39:54.860 --> 00:39:57.020
<v Speaker 2>Um, but there are special things about arrays.

NOTE CONF {"raw":[63,100,100,100,100,100,100,100]}

00:39:57.340 --> 00:39:58.980
<v Speaker 2>And this is because arrays are so cool.

NOTE CONF {"raw":[100,100,100,100,100,95,100,100]}

00:39:59.100 --> 00:40:01.380
<v Speaker 2>So it's really useful for programmers to have these kind

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:01.380 --> 00:40:02.020
<v Speaker 2>of built in things.

NOTE CONF {"raw":[100,100,100,100]}

00:40:02.020 --> 00:40:04.900
<v Speaker 2>So you can do this, this kind of, uh, terminology

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,66,100]}

00:40:04.940 --> 00:40:07.500
<v Speaker 2>where you're where you're looking at, we extract the value

NOTE CONF {"raw":[100,100,100,100,100,100,93,100,90,100]}

00:40:07.500 --> 00:40:10.620
<v Speaker 2>of something in a particular index in an array.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:40:11.100 --> 00:40:14.060
<v Speaker 2>There's built in things like length and it doesn't have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:14.300 --> 00:40:15.140
<v Speaker 2>any methods.

NOTE CONF {"raw":[100,100]}

00:40:16.320 --> 00:40:19.680
<v Speaker 2>So, uh, arrays is just a kind of special object.

NOTE CONF {"raw":[100,79,100,100,100,100,100,100,100,100]}

00:40:20.200 --> 00:40:22.800
<v Speaker 2>Okay, so what happens if you don't?

NOTE CONF {"raw":[100,100,100,100,100,100,82]}

00:40:22.840 --> 00:40:23.840
<v Speaker 2>Initialise an object.

NOTE CONF {"raw":[100,100,100]}

00:40:23.840 --> 00:40:26.600
<v Speaker 2>So here we're saying there's a, there's something called mycar

NOTE CONF {"raw":[100,100,100,100,98,98,100,100,100,100]}

00:40:26.720 --> 00:40:27.880
<v Speaker 2>which is of type car.

NOTE CONF {"raw":[100,100,80,100,100]}

00:40:28.000 --> 00:40:29.360
<v Speaker 2>And I want to do I want to start its

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,67]}

00:40:29.360 --> 00:40:30.760
<v Speaker 2>engine but I haven't used the keyword new.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:40:30.760 --> 00:40:32.560
<v Speaker 2>Well maybe maybe somewhere else.

NOTE CONF {"raw":[100,100,100,100,100]}

00:40:32.560 --> 00:40:35.120
<v Speaker 2>You've created a new car, but I'm just creating my

NOTE CONF {"raw":[100,100,98,100,100,100,54,68,54,100]}

00:40:35.120 --> 00:40:35.280
<v Speaker 2>car.

NOTE CONF {"raw":[100]}

00:40:35.280 --> 00:40:37.440
<v Speaker 2>But let's imagine you're just typing this in without having

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:37.760 --> 00:40:38.680
<v Speaker 2>created anything.

NOTE CONF {"raw":[100,100]}

00:40:38.960 --> 00:40:41.360
<v Speaker 2>Okay, this is not going to compile okay.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:40:41.400 --> 00:40:44.760
<v Speaker 2>So this is the error you'll get variable mycar might

NOTE CONF {"raw":[100,100,100,88,100,100,100,100,55,100]}

00:40:44.760 --> 00:40:47.320
<v Speaker 2>not have been initialised if there's no memory allocated with

NOTE CONF {"raw":[100,100,100,100,67,100,100,100,100,100]}

00:40:47.320 --> 00:40:47.440
<v Speaker 2>it.

NOTE CONF {"raw":[100]}

00:40:47.480 --> 00:40:49.240
<v Speaker 2>Java's not going to do anything with it.

NOTE CONF {"raw":[79,100,100,100,100,100,100,100]}

00:40:49.240 --> 00:40:50.520
<v Speaker 2>It's not going to be able to do anything with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:50.520 --> 00:40:50.640
<v Speaker 2>it.

NOTE CONF {"raw":[100]}

00:40:50.640 --> 00:40:51.720
<v Speaker 2>It's going to complain about that.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:40:51.720 --> 00:40:52.560
<v Speaker 2>There's no new object.

NOTE CONF {"raw":[100,100,100,100]}

00:40:52.560 --> 00:40:53.680
<v Speaker 2>There's no space for it in memory.

NOTE CONF {"raw":[100,100,100,100,100,95,100]}

00:40:53.680 --> 00:40:54.640
<v Speaker 2>It doesn't exist.

NOTE CONF {"raw":[100,100,100]}

00:40:57.240 --> 00:41:00.480
<v Speaker 2>It is actually occasionally possible to fool the compiler into

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:00.520 --> 00:41:01.520
<v Speaker 2>not noticing that.

NOTE CONF {"raw":[100,100,100]}

00:41:01.520 --> 00:41:03.720
<v Speaker 2>And then if you're trying to do something with it,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:03.720 --> 00:41:05.720
<v Speaker 2>you'll get a null pointer exception.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:41:05.880 --> 00:41:06.120
<v Speaker 2>Right.

NOTE CONF {"raw":[96]}

00:41:06.160 --> 00:41:08.920
<v Speaker 2>And what this means is it needs to be pointing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:08.960 --> 00:41:10.960
<v Speaker 2>to somewhere in memory, but it isn't pointing to anything

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:10.960 --> 00:41:11.600
<v Speaker 2>in memory.

NOTE CONF {"raw":[100,100]}

00:41:14.050 --> 00:41:15.410
<v Speaker 2>Um.

NOTE CONF {"raw":[100]}

00:41:15.450 --> 00:41:18.530
<v Speaker 2>So where do references point if there's no corresponding object?

NOTE CONF {"raw":[100,100,57,100,100,100,100,100,100,99]}

00:41:18.610 --> 00:41:19.850
<v Speaker 2>They point to null, right?

NOTE CONF {"raw":[100,100,100,100,81]}

00:41:19.890 --> 00:41:21.570
<v Speaker 2>So if you talk about my car and you haven't

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,99]}

00:41:21.570 --> 00:41:23.090
<v Speaker 2>initialised it, it's just null.

NOTE CONF {"raw":[98,99,100,100,100]}

00:41:23.770 --> 00:41:26.050
<v Speaker 2>Um, which means it's pointing at nothing.

NOTE CONF {"raw":[88,100,100,98,100,100,100]}

00:41:26.170 --> 00:41:27.930
<v Speaker 2>And if you use it, you'll get a null pointer

NOTE CONF {"raw":[100,100,100,100,100,100,100,85,100,100]}

00:41:27.930 --> 00:41:28.610
<v Speaker 2>exception.

NOTE CONF {"raw":[100]}

00:41:29.250 --> 00:41:33.010
<v Speaker 2>So creating something in memory absolutely fundamental to object oriented

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:33.010 --> 00:41:34.130
<v Speaker 2>programming or to Java.

NOTE CONF {"raw":[100,80,100,100]}

00:41:34.730 --> 00:41:35.210
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:41:35.250 --> 00:41:38.050
<v Speaker 2>So now we're going to copy something right.

NOTE CONF {"raw":[100,100,100,100,100,100,100,88]}

00:41:38.090 --> 00:41:41.250
<v Speaker 2>So we're creating this new thing called Mycar.

NOTE CONF {"raw":[100,100,100,100,100,100,100,84]}

00:41:41.290 --> 00:41:42.570
<v Speaker 2>This is where it is in memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:41:42.570 --> 00:41:44.490
<v Speaker 2>And then we're saying wait there's another car.

NOTE CONF {"raw":[100,100,100,100,80,100,100,100]}

00:41:44.530 --> 00:41:45.130
<v Speaker 2>Your car.

NOTE CONF {"raw":[100,100]}

00:41:45.130 --> 00:41:47.250
<v Speaker 2>And this is the same as my car, right.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,85]}

00:41:47.290 --> 00:41:49.050
<v Speaker 2>But we haven't used the word new again.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:41:49.050 --> 00:41:50.890
<v Speaker 2>So this means we're not creating a new space in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:50.890 --> 00:41:51.170
<v Speaker 2>memory.

NOTE CONF {"raw":[100]}

00:41:51.170 --> 00:41:52.730
<v Speaker 2>We're not creating a different object.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:41:52.890 --> 00:41:55.330
<v Speaker 2>We're essentially just saying that your car is a different

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:55.370 --> 00:41:57.770
<v Speaker 2>name for my car, but it's the same object because

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:57.770 --> 00:41:59.450
<v Speaker 2>it's pointing to the same reference.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:41:59.650 --> 00:42:02.450
<v Speaker 2>So here we've got this other name, but this the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,93,100]}

00:42:02.450 --> 00:42:05.010
<v Speaker 2>slots in memory are the same as the same object.

NOTE CONF {"raw":[100,91,100,100,100,100,100,100,100,100]}

00:42:06.850 --> 00:42:11.850
<v Speaker 2>Um, so so so so when we assign the reference

NOTE CONF {"raw":[60,100,100,100,100,100,100,100,100,100]}

00:42:11.850 --> 00:42:15.300
<v Speaker 2>of an object to a local variable is just copying

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:15.300 --> 00:42:16.580
<v Speaker 2>the reference to the memory, right?

NOTE CONF {"raw":[100,100,100,100,100,66]}

00:42:16.620 --> 00:42:18.860
<v Speaker 2>It's not creating new memory with those values, it's just

NOTE CONF {"raw":[100,100,100,100,100,100,98,100,100,100]}

00:42:18.860 --> 00:42:20.860
<v Speaker 2>creating a reference to the original memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:42:21.900 --> 00:42:24.620
<v Speaker 2>Um, and here.

NOTE CONF {"raw":[96,100,100]}

00:42:24.620 --> 00:42:26.060
<v Speaker 2>But here we're doing something different, right?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:42:26.100 --> 00:42:28.700
<v Speaker 2>We're first of all, we're creating mycar and now we're

NOTE CONF {"raw":[100,100,100,100,100,100,65,100,100,100]}

00:42:28.700 --> 00:42:29.740
<v Speaker 2>creating your car.

NOTE CONF {"raw":[100,100,100]}

00:42:29.980 --> 00:42:31.340
<v Speaker 2>So we've used the keyword new.

NOTE CONF {"raw":[100,92,92,63,100,96]}

00:42:31.340 --> 00:42:32.980
<v Speaker 2>So this is something different in memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:42:33.140 --> 00:42:34.620
<v Speaker 2>It's got its own bit of memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:42:34.740 --> 00:42:38.340
<v Speaker 2>And then we are copying everything that's up here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:42:38.340 --> 00:42:39.340
<v Speaker 2>We're copying to here.

NOTE CONF {"raw":[100,100,100,100]}

00:42:39.340 --> 00:42:41.140
<v Speaker 2>So we're saying all these values we want them to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:41.140 --> 00:42:42.140
<v Speaker 2>be the same right.

NOTE CONF {"raw":[100,100,100,90]}

00:42:42.180 --> 00:42:43.300
<v Speaker 2>So these are separate objects.

NOTE CONF {"raw":[100,100,100,100,100]}

00:42:43.300 --> 00:42:45.380
<v Speaker 2>They have the same values but they're the separate objects

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:45.460 --> 00:42:45.860
<v Speaker 2>here.

NOTE CONF {"raw":[91]}

00:42:45.940 --> 00:42:47.340
<v Speaker 2>These are just the same objects.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:42:48.700 --> 00:42:49.180
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:42:49.220 --> 00:42:50.420
<v Speaker 2>So what is this going to print.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:42:50.420 --> 00:42:51.860
<v Speaker 2>So we're looking at equals here.

NOTE CONF {"raw":[100,100,100,100,67,100]}

00:42:52.620 --> 00:42:57.100
<v Speaker 2>Um okay let's just quickly go to IntelliJ to this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,69,100]}

00:42:57.100 --> 00:42:58.940
<v Speaker 2>I think this might be quite useful.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:42:59.580 --> 00:43:00.860
<v Speaker 2>Uh what do we want.

NOTE CONF {"raw":[87,100,100,100,100]}

00:43:01.500 --> 00:43:02.220
<v Speaker 2>Comparison.

NOTE CONF {"raw":[93]}

00:43:03.460 --> 00:43:03.900
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:43:03.940 --> 00:43:06.180
<v Speaker 2>So what does it mean in Java?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:43:06.260 --> 00:43:08.060
<v Speaker 2>So first of all we're printing A and B.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:08.340 --> 00:43:09.260
<v Speaker 2>This is hello world.

NOTE CONF {"raw":[100,100,90,90]}

00:43:09.260 --> 00:43:11.020
<v Speaker 2>We print A and B we print C.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:43:11.740 --> 00:43:12.100
<v Speaker 4>Uh.

NOTE CONF {"raw":[66]}

00:43:13.040 --> 00:43:15.280
<v Speaker 2>And then we say, are these two things the same?

NOTE CONF {"raw":[100,100,100,100,99,100,100,100,100,100]}

00:43:15.360 --> 00:43:18.440
<v Speaker 2>So we've printed out okay.

NOTE CONF {"raw":[100,75,83,100,81]}

00:43:18.640 --> 00:43:19.600
<v Speaker 2>This is going to say.

NOTE CONF {"raw":[100,100,100,100,100]}

00:43:20.440 --> 00:43:21.200
<v Speaker 4>Uh, they.

NOTE CONF {"raw":[92,100]}

00:43:21.200 --> 00:43:22.080
<v Speaker 2>All say hello world.

NOTE CONF {"raw":[73,100,100,100]}

00:43:22.080 --> 00:43:23.840
<v Speaker 2>And this says this is true, right.

NOTE CONF {"raw":[100,100,100,100,100,100,95]}

00:43:23.880 --> 00:43:25.680
<v Speaker 2>If we do equals, are these the same.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:43:25.680 --> 00:43:26.000
<v Speaker 2>Yes.

NOTE CONF {"raw":[100]}

00:43:26.000 --> 00:43:26.600
<v Speaker 2>That's true.

NOTE CONF {"raw":[100,100]}

00:43:26.640 --> 00:43:27.320
<v Speaker 2>They're the same.

NOTE CONF {"raw":[100,100,100]}

00:43:27.320 --> 00:43:31.000
<v Speaker 2>But what if we use this double equals sign which

NOTE CONF {"raw":[100,100,100,100,100,100,100,81,100,100]}

00:43:31.000 --> 00:43:33.680
<v Speaker 2>we also which also means equals, but in a different

NOTE CONF {"raw":[76,100,100,100,100,100,100,100,100,100]}

00:43:33.680 --> 00:43:33.960
<v Speaker 2>way.

NOTE CONF {"raw":[100]}

00:43:36.440 --> 00:43:36.640
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:43:36.680 --> 00:43:38.120
<v Speaker 2>So this is going to say false.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:43:38.360 --> 00:43:38.600
<v Speaker 2>Right.

NOTE CONF {"raw":[100]}

00:43:38.680 --> 00:43:42.240
<v Speaker 2>So double double equals what this is saying is are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:42.240 --> 00:43:43.440
<v Speaker 2>these the same objects.

NOTE CONF {"raw":[100,100,100,100]}

00:43:43.440 --> 00:43:45.920
<v Speaker 2>Is this pointing to the same bit of memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:46.040 --> 00:43:49.040
<v Speaker 2>Whereas the equals the equals method that we had before.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,98,100]}

00:43:49.480 --> 00:43:51.880
<v Speaker 2>What this means is do these things have the same

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:51.880 --> 00:43:52.200
<v Speaker 2>value.

NOTE CONF {"raw":[100]}

00:43:52.240 --> 00:43:55.040
<v Speaker 2>They're not necessarily the same object, but do they have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:55.040 --> 00:43:55.920
<v Speaker 2>the same values.

NOTE CONF {"raw":[100,100,100]}

00:43:57.000 --> 00:43:59.000
<v Speaker 2>So here what is this print.

NOTE CONF {"raw":[100,100,100,83,100,100]}

00:43:59.240 --> 00:44:00.640
<v Speaker 2>These are different objects.

NOTE CONF {"raw":[100,100,100,100]}

00:44:00.640 --> 00:44:02.680
<v Speaker 2>And this is this double equals means.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:02.720 --> 00:44:04.280
<v Speaker 2>Are these pointing the same bit of memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:44:04.280 --> 00:44:05.560
<v Speaker 2>So this is going to be false.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:06.920 --> 00:44:07.120
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:44:07.160 --> 00:44:09.920
<v Speaker 2>It compares object references and not object states.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:44:10.810 --> 00:44:11.730
<v Speaker 2>Uh.

NOTE CONF {"raw":[100]}

00:44:11.770 --> 00:44:13.170
<v Speaker 2>This is going to be true, right?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:13.170 --> 00:44:16.050
<v Speaker 2>Because here your car is just the same as just

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:16.050 --> 00:44:16.890
<v Speaker 2>referencing my car.

NOTE CONF {"raw":[100,100,100]}

00:44:16.890 --> 00:44:18.730
<v Speaker 2>So these are the same thing because we haven't created

NOTE CONF {"raw":[100,100,100,100,100,96,100,100,100,100]}

00:44:18.730 --> 00:44:19.610
<v Speaker 2>different things in memory.

NOTE CONF {"raw":[100,100,100,100]}

00:44:19.610 --> 00:44:20.530
<v Speaker 2>That's the same reference.

NOTE CONF {"raw":[62,100,100,100]}

00:44:20.530 --> 00:44:22.130
<v Speaker 2>It's just referenced in this bit of memory.

NOTE CONF {"raw":[100,100,49,51,100,100,100,100]}

00:44:22.210 --> 00:44:23.850
<v Speaker 2>So the reference is the same.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:44:23.930 --> 00:44:25.850
<v Speaker 2>So double equals here will return true.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:27.730 --> 00:44:30.610
<v Speaker 2>Um, and here we're saying these are different objects.

NOTE CONF {"raw":[92,100,100,100,100,100,100,100,100]}

00:44:30.610 --> 00:44:32.450
<v Speaker 2>But what we want to know here is, is this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:32.450 --> 00:44:33.890
<v Speaker 2>value of speed the same.

NOTE CONF {"raw":[100,100,100,100,100]}

00:44:34.130 --> 00:44:34.690
<v Speaker 2>Right.

NOTE CONF {"raw":[100]}

00:44:34.890 --> 00:44:36.970
<v Speaker 2>And this will return true.

NOTE CONF {"raw":[100,100,100,100,100]}

00:44:37.490 --> 00:44:41.170
<v Speaker 2>Um, because this is a primitive type, this is an

NOTE CONF {"raw":[93,100,100,100,100,100,100,100,100,100]}

00:44:41.170 --> 00:44:41.570
<v Speaker 2>integer.

NOTE CONF {"raw":[100]}

00:44:41.570 --> 00:44:43.490
<v Speaker 2>And double equals means for an integer.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:43.890 --> 00:44:44.130
<v Speaker 2>Sorry.

NOTE CONF {"raw":[95]}

00:44:44.170 --> 00:44:46.250
<v Speaker 2>And for a primitive type it means do these things

NOTE CONF {"raw":[50,100,100,100,100,100,100,94,100,100]}

00:44:46.250 --> 00:44:47.210
<v Speaker 2>have the same value.

NOTE CONF {"raw":[100,100,100,100]}

00:44:47.970 --> 00:44:50.090
<v Speaker 2>Um, so yeah we looked at that there.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:44:50.810 --> 00:44:51.610
<v Speaker 2>Um, oops.

NOTE CONF {"raw":[100,100]}

00:44:52.810 --> 00:44:58.090
<v Speaker 2>So if we compare these so there's actually some subtleties

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:58.090 --> 00:44:59.530
<v Speaker 2>to this I don't want you to worry about, I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:59.530 --> 00:45:01.090
<v Speaker 2>just want to touch on now so that when you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:01.090 --> 00:45:02.890
<v Speaker 2>come back to them later, you will understand.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:45:03.010 --> 00:45:04.130
<v Speaker 2>So are these the same?

NOTE CONF {"raw":[100,100,100,100,100]}

00:45:04.130 --> 00:45:06.050
<v Speaker 2>This will print true okay.

NOTE CONF {"raw":[100,100,100,100,100]}

00:45:06.090 --> 00:45:07.890
<v Speaker 2>Because they're because they're primitive values.

NOTE CONF {"raw":[100,94,100,99,100,88]}

00:45:07.890 --> 00:45:09.370
<v Speaker 2>So we can compare them with a double.

NOTE CONF {"raw":[100,100,100,100,100,100,98,100]}

00:45:09.370 --> 00:45:09.890
<v Speaker 4>Equals.

NOTE CONF {"raw":[100]}

00:45:10.300 --> 00:45:11.420
<v Speaker 2>This as we've seen.

NOTE CONF {"raw":[100,100,100,100]}

00:45:11.500 --> 00:45:12.580
<v Speaker 2>What's this going to print?

NOTE CONF {"raw":[96,100,100,100,100]}

00:45:13.020 --> 00:45:14.420
<v Speaker 2>This is going to print false.

NOTE CONF {"raw":[100,100,100,100,100,90]}

00:45:15.260 --> 00:45:17.340
<v Speaker 2>Because although these have the same value.

NOTE CONF {"raw":[100,56,100,100,100,100,100]}

00:45:17.380 --> 00:45:18.300
<v Speaker 2>They're not printing.

NOTE CONF {"raw":[100,100,100]}

00:45:18.340 --> 00:45:19.460
<v Speaker 2>Pointing to same objects.

NOTE CONF {"raw":[100,100,100,100]}

00:45:19.500 --> 00:45:21.620
<v Speaker 2>A, B and C are all they're all different in

NOTE CONF {"raw":[100,100,100,100,100,100,99,100,100,100]}

00:45:21.620 --> 00:45:22.660
<v Speaker 2>different places in memory.

NOTE CONF {"raw":[100,100,100,100]}

00:45:22.660 --> 00:45:24.700
<v Speaker 2>So they're not pointing to the same bit of memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:24.820 --> 00:45:26.900
<v Speaker 2>However, if we use equals that is saying do these

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:27.060 --> 00:45:29.380
<v Speaker 2>things have the same value and then it will return

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:29.380 --> 00:45:31.140
<v Speaker 2>true because they they look the same.

NOTE CONF {"raw":[100,100,90,100,100,100,100]}

00:45:33.260 --> 00:45:35.220
<v Speaker 2>Um, yes.

NOTE CONF {"raw":[100,100]}

00:45:35.260 --> 00:45:37.540
<v Speaker 2>Let's very quickly we're almost out of time.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:45:37.540 --> 00:45:40.780
<v Speaker 2>But um, so there are occasionally there are things that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:40.780 --> 00:45:42.100
<v Speaker 2>you can't do with primitive values.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:45:42.100 --> 00:45:43.940
<v Speaker 2>So when we get on to collections later on, you

NOTE CONF {"raw":[100,100,100,100,98,98,100,100,100,100]}

00:45:43.940 --> 00:45:45.540
<v Speaker 2>have to have objects in that.

NOTE CONF {"raw":[100,100,100,100,100,84]}

00:45:45.540 --> 00:45:46.660
<v Speaker 2>You can't have primitive values.

NOTE CONF {"raw":[100,100,58,100,100]}

00:45:46.660 --> 00:45:48.300
<v Speaker 2>So you have these things called wrappers where you can

NOTE CONF {"raw":[100,100,100,100,100,100,65,100,100,100]}

00:45:48.300 --> 00:45:50.940
<v Speaker 2>turn primitive types into an object.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:45:51.380 --> 00:45:53.620
<v Speaker 2>Um, and it used to be a real pain, but

NOTE CONF {"raw":[84,100,97,100,100,100,100,89,100,100]}

00:45:53.620 --> 00:45:54.780
<v Speaker 2>now it's much easier.

NOTE CONF {"raw":[100,100,100,100]}

00:45:54.900 --> 00:45:58.540
<v Speaker 2>So if you say so when you're saying, um, you've

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,92,100]}

00:45:58.540 --> 00:46:01.020
<v Speaker 2>got a variable you're assigning to something, you can, you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:01.020 --> 00:46:03.260
<v Speaker 2>can say it's an integer with a capital I, that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:03.260 --> 00:46:05.700
<v Speaker 2>will mean it's an object of type integer rather than

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:05.700 --> 00:46:07.740
<v Speaker 2>the primitive type ints that we usually use.

NOTE CONF {"raw":[100,100,100,55,100,100,100,100]}

00:46:07.820 --> 00:46:09.960
<v Speaker 2>You wouldn't generally use this, but you'd only use it

NOTE CONF {"raw":[100,100,100,100,100,100,90,100,100,100]}

00:46:09.960 --> 00:46:11.440
<v Speaker 2>if you're in a situation where you need it to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:11.440 --> 00:46:12.160
<v Speaker 2>be an object.

NOTE CONF {"raw":[100,100,100]}

00:46:12.160 --> 00:46:14.000
<v Speaker 2>And it works both both ways around.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:46:14.160 --> 00:46:16.840
<v Speaker 2>Java is really happy converting between these two, depending on

NOTE CONF {"raw":[100,99,100,100,100,100,100,100,100,100]}

00:46:16.840 --> 00:46:18.080
<v Speaker 2>what's most useful for you.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:20.080 --> 00:46:23.120
<v Speaker 2>Um, okay, so now here, this is just the same.

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:46:23.120 --> 00:46:25.160
<v Speaker 2>Only we're using this as an object.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:46:25.160 --> 00:46:27.600
<v Speaker 2>So now this is going to be true.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:46:29.280 --> 00:46:29.600
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:46:29.640 --> 00:46:31.760
<v Speaker 2>So this is where it gets a little bit technical.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:31.760 --> 00:46:33.160
<v Speaker 2>And I don't want you to worry about it too

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:33.160 --> 00:46:34.760
<v Speaker 2>much, but just to refer to it so you know

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:34.760 --> 00:46:35.520
<v Speaker 2>that there's a thing.

NOTE CONF {"raw":[100,100,100,100]}

00:46:36.000 --> 00:46:37.320
<v Speaker 2>This is because of caching.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:37.560 --> 00:46:40.640
<v Speaker 2>So it's, um, kind of doing things under the hood.

NOTE CONF {"raw":[100,100,98,100,100,100,100,100,100,100]}

00:46:40.640 --> 00:46:44.920
<v Speaker 2>That means with, with these, uh, five is a literal.

NOTE CONF {"raw":[100,100,100,100,100,87,100,100,100,100]}

00:46:44.920 --> 00:46:46.520
<v Speaker 2>So it's been cached by the compiler.

NOTE CONF {"raw":[100,100,67,100,100,100,100]}

00:46:46.680 --> 00:46:49.000
<v Speaker 2>So don't worry about this.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:49.000 --> 00:46:51.440
<v Speaker 2>But if this comes up later then you might remember

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:51.440 --> 00:46:52.440
<v Speaker 2>that we talked about this.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:52.480 --> 00:46:54.000
<v Speaker 2>This only happens for small integers.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:46:54.000 --> 00:46:55.760
<v Speaker 2>So for 200 it's going to say false.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:46:55.760 --> 00:46:59.040
<v Speaker 2>Because integer literals are only cached between 1 to 8

NOTE CONF {"raw":[100,100,100,100,100,94,100,100,100,100]}

00:46:59.040 --> 00:47:00.720
<v Speaker 2>and -1 to 8 and 1 to 7.

NOTE CONF {"raw":[97,100,100,100,100,100,100,100]}

00:47:01.960 --> 00:47:03.600
<v Speaker 2>Now what's going to happen here?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:47:04.120 --> 00:47:06.000
<v Speaker 2>Are these is this going to be true or not.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:06.000 --> 00:47:10.370
<v Speaker 2>The double equals It is because string literals are also

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:10.370 --> 00:47:10.970
<v Speaker 2>interned.

NOTE CONF {"raw":[69]}

00:47:12.090 --> 00:47:15.730
<v Speaker 2>But here we're specifically creating a new bit of memory

NOTE CONF {"raw":[100,100,69,100,100,100,100,100,100,100]}

00:47:15.730 --> 00:47:18.010
<v Speaker 2>to say these things belong in different bits of memory,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:18.090 --> 00:47:20.130
<v Speaker 2>so that now these are not the same.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:47:20.930 --> 00:47:21.490
<v Speaker 2>False.

NOTE CONF {"raw":[100]}

00:47:21.810 --> 00:47:22.010
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:47:22.050 --> 00:47:23.090
<v Speaker 2>You're using constructors.

NOTE CONF {"raw":[100,100,83]}

00:47:23.090 --> 00:47:25.450
<v Speaker 2>So you're explicitly making different bits of memory.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:47:26.770 --> 00:47:27.010
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:47:27.050 --> 00:47:29.210
<v Speaker 2>So to compare things for primitives you can always use

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:29.210 --> 00:47:29.770
<v Speaker 2>double equal.

NOTE CONF {"raw":[96,100]}

00:47:29.770 --> 00:47:31.450
<v Speaker 2>For objects you use double equal.

NOTE CONF {"raw":[100,100,96,100,100,100]}

00:47:31.450 --> 00:47:33.050
<v Speaker 2>If you want to know are these the very same

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:33.090 --> 00:47:33.730
<v Speaker 2>object.

NOTE CONF {"raw":[100]}

00:47:33.850 --> 00:47:36.570
<v Speaker 2>And you use dot equals if you want to know

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:36.610 --> 00:47:37.890
<v Speaker 2>do these things have the same value.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:47:37.890 --> 00:47:39.890
<v Speaker 2>Are they in the same state, which is almost always

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:39.890 --> 00:47:40.930
<v Speaker 2>when you're doing equals?

NOTE CONF {"raw":[100,100,100,100]}

00:47:41.090 --> 00:47:43.250
<v Speaker 2>I don't know about almost always, but it's very commonly

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:43.250 --> 00:47:44.010
<v Speaker 2>what you want to know.

NOTE CONF {"raw":[100,100,100,100,100]}

00:47:44.050 --> 00:47:45.810
<v Speaker 2>Are these do these things have the same state.

NOTE CONF {"raw":[100,100,96,100,100,100,100,100,95]}

00:47:45.850 --> 00:47:47.570
<v Speaker 2>Not are these actually pointing to the same bit of

NOTE CONF {"raw":[99,100,100,100,100,78,77,100,100,100]}

00:47:47.570 --> 00:47:48.010
<v Speaker 2>memory?

NOTE CONF {"raw":[100]}

00:47:48.450 --> 00:47:51.210
<v Speaker 2>So because of inheritance, which we're going to talk about

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:51.210 --> 00:47:54.250
<v Speaker 2>later, you can use for anything you make, you create

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:54.250 --> 00:47:55.450
<v Speaker 2>without defining it.

NOTE CONF {"raw":[100,100,100]}

00:47:55.450 --> 00:47:59.170
<v Speaker 2>It'll inherit a definition, but the inherits the definition inherits

NOTE CONF {"raw":[96,100,100,100,100,100,81,100,100,100]}

00:47:59.170 --> 00:48:02.330
<v Speaker 2>is just that equals is the same as this double

NOTE CONF {"raw":[100,100,100,93,100,100,100,100,100,100]}

00:48:02.330 --> 00:48:04.650
<v Speaker 2>equals, which is almost never what you want, because that's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:04.650 --> 00:48:05.890
<v Speaker 2>really not giving you very much.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:48:05.970 --> 00:48:08.780
<v Speaker 2>So mostly whenever you define a new class, you're going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:08.780 --> 00:48:10.860
<v Speaker 2>to want to define the equals method so that you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:10.860 --> 00:48:13.340
<v Speaker 2>know in your context, what does it mean for two

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:13.340 --> 00:48:14.180
<v Speaker 2>things to be equal.

NOTE CONF {"raw":[100,100,100,100]}

00:48:14.300 --> 00:48:16.260
<v Speaker 2>And generally what that means is that all the state

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:16.260 --> 00:48:17.900
<v Speaker 2>variables are the same like we saw with the car.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,92,94]}

00:48:17.900 --> 00:48:19.700
<v Speaker 2>If it's going the same speed, if it's, you know,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,55,55]}

00:48:19.740 --> 00:48:21.900
<v Speaker 2>if all these things are the same, then it is,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:22.620 --> 00:48:23.500
<v Speaker 2>we consider them equal.

NOTE CONF {"raw":[100,100,100,100]}

00:48:23.500 --> 00:48:25.300
<v Speaker 2>But it's not always that sometimes you want to do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:25.300 --> 00:48:26.060
<v Speaker 2>different things.

NOTE CONF {"raw":[100,100]}

00:48:27.820 --> 00:48:28.660
<v Speaker 2>Uh, okay.

NOTE CONF {"raw":[75,100]}

00:48:33.460 --> 00:48:37.100
<v Speaker 2>So the methods uh, okay.

NOTE CONF {"raw":[100,100,100,99,100]}

00:48:37.140 --> 00:48:40.260
<v Speaker 2>So I think, uh, I kind of wanted to finish

NOTE CONF {"raw":[100,100,100,98,100,100,100,66,100,100]}

00:48:40.260 --> 00:48:42.900
<v Speaker 2>this lecture today and we're almost at the end, but,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:42.980 --> 00:48:45.660
<v Speaker 2>um, I think we're going to run out of time.

NOTE CONF {"raw":[86,100,100,100,100,100,100,100,100,100]}

00:48:45.660 --> 00:48:46.540
<v Speaker 2>I don't wanna trust you.

NOTE CONF {"raw":[100,100,58,100,100]}

00:48:46.900 --> 00:48:50.260
<v Speaker 2>Um, so let me just quickly say next Monday or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,86]}

00:48:50.260 --> 00:48:51.540
<v Speaker 2>I'm going to leave this up as well.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:48:51.780 --> 00:48:52.780
<v Speaker 2>We got loads of volunteers.

NOTE CONF {"raw":[77,100,100,100,100]}

00:48:52.780 --> 00:48:53.140
<v Speaker 2>That's great.

NOTE CONF {"raw":[100,100]}

00:48:53.140 --> 00:48:54.940
<v Speaker 2>But there's lots of time for a couple more.

NOTE CONF {"raw":[100,100,96,96,100,100,100,100,100]}

00:48:55.060 --> 00:48:57.140
<v Speaker 2>But next Monday, we're going to have the two hour

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:48:57.140 --> 00:48:57.660
<v Speaker 2>session.

NOTE CONF {"raw":[100]}

00:48:57.780 --> 00:49:00.300
<v Speaker 2>Let me quickly show you timetable so you can see

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:00.300 --> 00:49:00.540
<v Speaker 2>here.

NOTE CONF {"raw":[100]}

00:49:00.540 --> 00:49:03.280
<v Speaker 2>This is um info on B lecture goes for two

NOTE CONF {"raw":[100,100,100,95,76,93,100,100,100,100]}

00:49:03.280 --> 00:49:05.380
<v Speaker 2>hours just in week four and week eight.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:49:05.760 --> 00:49:07.560
<v Speaker 2>That means you need to go to the second calculus

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:07.560 --> 00:49:07.880
<v Speaker 2>lecture.

NOTE CONF {"raw":[100]}

00:49:07.880 --> 00:49:10.120
<v Speaker 2>If you're doing calculus, we will be providing lunch.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:49:10.240 --> 00:49:12.200
<v Speaker 2>It's not going to be like super intense, like you're

NOTE CONF {"raw":[90,100,100,100,100,100,100,100,100,100]}

00:49:12.200 --> 00:49:14.120
<v Speaker 2>working for hours and hours because it's going to be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:14.120 --> 00:49:17.080
<v Speaker 2>more relaxed and more interactive, but it's going to be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:17.080 --> 00:49:18.400
<v Speaker 2>really useful and really valuable.

NOTE CONF {"raw":[100,100,100,100,100]}

00:49:18.560 --> 00:49:22.280
<v Speaker 2>So add questions to ask me any questions, and I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:49:22.280 --> 00:49:25.800
<v Speaker 2>will answer them on Thursday.

NOTE CONF {"raw":[100,100,100,100,100]}

00:49:27.960 --> 00:49:29.560
<v Speaker 2>And maybe see you in my office hour.

NOTE CONF {"raw":[100,100,100,100,93,100,100,96]}
