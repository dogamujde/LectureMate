WEBVTT

00:00:05.400 --> 00:00:06.120
<v Speaker 0>We have snacks.

NOTE CONF {"raw":[100,100,100]}

00:00:06.800 --> 00:00:07.520
<v Speaker 1>We have snacks.

NOTE CONF {"raw":[100,100,85]}

00:00:07.560 --> 00:00:08.040
<v Speaker 0>Okay, okay.

NOTE CONF {"raw":[92,100]}

00:00:10.680 --> 00:00:11.000
<v Speaker 1>Oh.

NOTE CONF {"raw":[86]}

00:00:12.360 --> 00:00:14.560
<v Speaker 0>We can also do, like, a tournament for Mario Kart

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:14.600 --> 00:00:15.600
<v Speaker 0>to make it a bit more fun.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:00:15.880 --> 00:00:16.520
<v Speaker 0>And yeah.

NOTE CONF {"raw":[100,100]}

00:00:16.520 --> 00:00:16.920
<v Speaker 0>That's it.

NOTE CONF {"raw":[100,100]}

00:00:16.960 --> 00:00:18.880
<v Speaker 0>Hopefully we can see a lot of you guys there.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:19.440 --> 00:00:19.720
<v Speaker 0>So.

NOTE CONF {"raw":[100]}

00:00:19.720 --> 00:00:19.960
<v Speaker 0>Yeah.

NOTE CONF {"raw":[99]}

00:00:20.720 --> 00:00:22.280
<v Speaker 0>Yeah.

NOTE CONF {"raw":[100]}

00:00:22.360 --> 00:00:23.440
<v Speaker 2>Thank you.

NOTE CONF {"raw":[100,100]}

00:00:23.960 --> 00:00:24.200
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:00:24.200 --> 00:00:24.800
<v Speaker 2>Thanks for that.

NOTE CONF {"raw":[100,100,100]}

00:00:24.840 --> 00:00:25.720
<v Speaker 2>That sounds like fun.

NOTE CONF {"raw":[100,100,100,100]}

00:00:25.760 --> 00:00:27.840
<v Speaker 2>So that's tonight in the chaplaincy.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:00:28.280 --> 00:00:29.880
<v Speaker 2>If anyone's interested.

NOTE CONF {"raw":[100,100,100]}

00:00:30.440 --> 00:00:32.000
<v Speaker 2>Um, so look out for that.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:00:33.120 --> 00:00:33.440
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:00:33.480 --> 00:00:34.240
<v Speaker 2>The red lights here.

NOTE CONF {"raw":[87,100,100,100]}

00:00:34.240 --> 00:00:35.480
<v Speaker 2>So let's get started.

NOTE CONF {"raw":[100,100,100,100]}

00:00:35.480 --> 00:00:36.560
<v Speaker 2>So, what's first on my list?

NOTE CONF {"raw":[100,100,100,100,86,100]}

00:00:36.600 --> 00:00:36.840
<v Speaker 2>All right.

NOTE CONF {"raw":[99,99]}

00:00:36.880 --> 00:00:38.160
<v Speaker 2>Tutorials.

NOTE CONF {"raw":[100]}

00:00:38.720 --> 00:00:40.800
<v Speaker 2>Tutorials are starting next week.

NOTE CONF {"raw":[100,100,100,100,100]}

00:00:40.800 --> 00:00:45.800
<v Speaker 2>Everybody should have their tutorial in their timetable now.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:00:46.080 --> 00:00:49.160
<v Speaker 2>Tutors have been allocated to tutorial groups now.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:00:49.160 --> 00:00:51.800
<v Speaker 2>So you should be able to find out who your

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:51.800 --> 00:00:52.520
<v Speaker 2>tutor is.

NOTE CONF {"raw":[100,100]}

00:00:53.280 --> 00:00:54.800
<v Speaker 2>We take attendance and tutorials.

NOTE CONF {"raw":[100,100,100,91,100]}

00:00:54.800 --> 00:00:55.400
<v Speaker 2>You need to be there.

NOTE CONF {"raw":[100,100,100,100,100]}

00:00:55.400 --> 00:00:58.760
<v Speaker 2>If you can't be there, email your tutor and hopefully

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:00:58.760 --> 00:01:01.050
<v Speaker 2>if you've been given a given a slot that clashes,

NOTE CONF {"raw":[100,61,61,100,100,100,100,100,100,100]}

00:01:01.610 --> 00:01:04.010
<v Speaker 2>then you have followed up on that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:01:04.010 --> 00:01:05.210
<v Speaker 2>Was that a question at the front?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:01:06.330 --> 00:01:07.370
<v Speaker 2>You still don't have it?

NOTE CONF {"raw":[100,100,100,100,100]}

00:01:07.490 --> 00:01:07.690
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:01:07.730 --> 00:01:09.850
<v Speaker 2>Does anyone here not have a tutorial slot in their

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:09.850 --> 00:01:10.450
<v Speaker 2>timetable?

NOTE CONF {"raw":[100]}

00:01:12.050 --> 00:01:13.290
<v Speaker 2>Just one person.

NOTE CONF {"raw":[100,100,100]}

00:01:13.330 --> 00:01:13.490
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:01:13.530 --> 00:01:14.330
<v Speaker 2>Come and see me afterwards.

NOTE CONF {"raw":[100,100,100,100,100]}

00:01:14.370 --> 00:01:14.970
<v Speaker 2>Give me your name.

NOTE CONF {"raw":[100,100,100,100]}

00:01:15.010 --> 00:01:15.170
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:01:15.210 --> 00:01:15.730
<v Speaker 2>Everybody else.

NOTE CONF {"raw":[100,100]}

00:01:15.770 --> 00:01:17.650
<v Speaker 2>Can you put your hands up if you have got

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:17.650 --> 00:01:19.450
<v Speaker 2>a tutorial slot in your timetable?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:01:20.570 --> 00:01:22.010
<v Speaker 2>Okay, so it looks like.

NOTE CONF {"raw":[100,100,100,100,100]}

00:01:22.170 --> 00:01:23.810
<v Speaker 2>I mean, not everyone's put their hand up, but most

NOTE CONF {"raw":[100,100,100,84,100,58,100,100,100,100]}

00:01:23.810 --> 00:01:25.730
<v Speaker 2>people have got their hands up and nobody else put

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:25.730 --> 00:01:26.970
<v Speaker 2>their hand up, so they hadn't.

NOTE CONF {"raw":[100,70,100,100,100,100]}

00:01:27.250 --> 00:01:28.610
<v Speaker 2>So hopefully everybody else does.

NOTE CONF {"raw":[100,100,100,100,100]}

00:01:28.610 --> 00:01:30.130
<v Speaker 2>Don't know what's going on with the other thing.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:01:30.690 --> 00:01:35.010
<v Speaker 2>Um, anyway, so the assignment one practice tests have been

NOTE CONF {"raw":[98,100,100,100,100,100,98,100,100,100]}

00:01:35.010 --> 00:01:35.690
<v Speaker 2>released.

NOTE CONF {"raw":[100]}

00:01:36.370 --> 00:01:39.130
<v Speaker 2>Um, there was an announcement about that, but because of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:39.130 --> 00:01:42.530
<v Speaker 2>the stupid not sending an email thing from learning, I'm

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,45,100]}

00:01:42.530 --> 00:01:44.410
<v Speaker 2>not sure if all of you saw that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:01:44.570 --> 00:01:46.090
<v Speaker 2>Um, but that is an announcement.

NOTE CONF {"raw":[66,100,100,100,100,100]}

00:01:46.090 --> 00:01:48.250
<v Speaker 2>If you go to learn, you'll see that, um, and

NOTE CONF {"raw":[100,100,100,100,76,100,100,100,62,100]}

00:01:48.250 --> 00:01:52.010
<v Speaker 2>you'll be hearing more about assignments in the upcoming weeks.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,96]}

00:01:52.050 --> 00:01:55.130
<v Speaker 2>Let me just quickly go to Open Course and show

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:01:55.130 --> 00:01:56.610
<v Speaker 2>you the schedule for that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:01:57.370 --> 00:01:59.350
<v Speaker 2>So we're here on week three.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:01:59.990 --> 00:02:01.510
<v Speaker 2>So assignment ones have been.

NOTE CONF {"raw":[100,100,100,100,100]}

00:02:01.630 --> 00:02:03.270
<v Speaker 2>The tests have been released.

NOTE CONF {"raw":[100,100,100,100,100]}

00:02:04.550 --> 00:02:07.030
<v Speaker 2>Uh, right.

NOTE CONF {"raw":[94,99]}

00:02:07.070 --> 00:02:07.470
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:02:07.510 --> 00:02:10.110
<v Speaker 2>So, um, that's week three.

NOTE CONF {"raw":[100,96,100,100,100]}

00:02:10.270 --> 00:02:11.190
<v Speaker 2>So forget about that.

NOTE CONF {"raw":[100,100,100,100]}

00:02:11.190 --> 00:02:12.710
<v Speaker 2>Week two, which we're on.

NOTE CONF {"raw":[100,100,100,95,100]}

00:02:12.830 --> 00:02:14.510
<v Speaker 2>The practice tests become available.

NOTE CONF {"raw":[100,100,81,100,100]}

00:02:14.590 --> 00:02:17.110
<v Speaker 2>We'll be releasing the actual test next Monday.

NOTE CONF {"raw":[94,100,100,100,100,100,100,100]}

00:02:17.150 --> 00:02:19.230
<v Speaker 2>I think I will tell you more about that then.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:19.870 --> 00:02:21.830
<v Speaker 2>Uh, so this is where we are, though.

NOTE CONF {"raw":[100,100,100,100,100,100,100,94]}

00:02:21.870 --> 00:02:23.230
<v Speaker 2>You got some practice tests?

NOTE CONF {"raw":[95,100,100,100,100]}

00:02:23.270 --> 00:02:24.910
<v Speaker 2>You have a lot of time for assignment one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:02:24.990 --> 00:02:25.950
<v Speaker 2>There's no need to rush.

NOTE CONF {"raw":[100,100,100,100,100]}

00:02:25.950 --> 00:02:28.150
<v Speaker 2>And just so you know, I'll reemphasize this on Monday,

NOTE CONF {"raw":[100,100,100,100,100,100,95,100,100,100]}

00:02:28.150 --> 00:02:30.670
<v Speaker 2>but assignment one contains things we haven't covered yet.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:02:31.070 --> 00:02:31.590
<v Speaker 2>Uh, it will.

NOTE CONF {"raw":[94,82,83]}

00:02:31.630 --> 00:02:33.750
<v Speaker 2>We will have covered it well before the deadline for

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:33.750 --> 00:02:35.510
<v Speaker 2>assignment one, but we release it early to give you

NOTE CONF {"raw":[100,100,100,100,75,100,100,100,100,100]}

00:02:35.510 --> 00:02:36.310
<v Speaker 2>plenty of time.

NOTE CONF {"raw":[100,100,100]}

00:02:36.390 --> 00:02:38.510
<v Speaker 2>But if you haven't done a lot of AP before,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:38.790 --> 00:02:39.710
<v Speaker 2>just pace yourself.

NOTE CONF {"raw":[100,100,100]}

00:02:39.710 --> 00:02:41.150
<v Speaker 2>Don't expect to be able to do all of them

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:41.150 --> 00:02:42.910
<v Speaker 2>right now, but you will certainly be able to do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:02:42.910 --> 00:02:45.350
<v Speaker 2>all of them in plenty of time.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:02:46.390 --> 00:02:46.630
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:02:46.670 --> 00:02:46.870
<v Speaker 2>So.

NOTE CONF {"raw":[100]}

00:02:46.910 --> 00:02:47.070
<v Speaker 2>Whew.

NOTE CONF {"raw":[93]}

00:02:47.390 --> 00:02:47.950
<v Speaker 2>I'm now.

NOTE CONF {"raw":[100,100]}

00:02:49.830 --> 00:02:51.870
<v Speaker 2>I don't have any idea what that means.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:02:52.310 --> 00:02:54.310
<v Speaker 2>Um, I'm going to go back to last week and

NOTE CONF {"raw":[95,100,100,100,100,100,100,100,100,100]}

00:02:54.310 --> 00:02:55.190
<v Speaker 2>go through the questions.

NOTE CONF {"raw":[100,100,100,100]}

00:02:55.270 --> 00:02:56.710
<v Speaker 2>So I think I've worked out quite a good way

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,96]}

00:02:56.710 --> 00:02:57.960
<v Speaker 2>to do Questions.

NOTE CONF {"raw":[100,100,70]}

00:02:58.480 --> 00:03:01.000
<v Speaker 2>If I just, uh, do it in the next lecture,

NOTE CONF {"raw":[100,100,100,58,100,100,57,100,100,100]}

00:03:01.000 --> 00:03:02.760
<v Speaker 2>I can then go through, make it a list and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:02.760 --> 00:03:04.800
<v Speaker 2>delete all the things that are not saying anything useful.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:04.800 --> 00:03:06.360
<v Speaker 2>It's still helpful for me if you don't put in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:06.360 --> 00:03:09.200
<v Speaker 2>a ton of random things into the ask me anything

NOTE CONF {"raw":[100,100,100,100,100,100,99,100,100,100]}

00:03:09.200 --> 00:03:09.680
<v Speaker 2>stuff.

NOTE CONF {"raw":[100]}

00:03:09.840 --> 00:03:11.600
<v Speaker 2>But anyway, here we've got some stuff.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:03:11.600 --> 00:03:13.520
<v Speaker 2>So I'm going to go through this and answer this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:13.520 --> 00:03:16.160
<v Speaker 2>So first one is can I code double array ten.

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,100,100]}

00:03:16.200 --> 00:03:19.560
<v Speaker 2>Now what is this asking I think is this somehow?

NOTE CONF {"raw":[100,100,100,100,100,100,100,98,95,100]}

00:03:23.360 --> 00:03:26.320
<v Speaker 2>Uh, I think I don't want to do that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:03:26.800 --> 00:03:29.880
<v Speaker 2>Um, let's do it here.

NOTE CONF {"raw":[100,97,100,100,100]}

00:03:31.960 --> 00:03:32.160
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:03:32.200 --> 00:03:33.720
<v Speaker 2>So think what this is asking is.

NOTE CONF {"raw":[100,92,100,100,100,100,100]}

00:03:33.720 --> 00:03:36.640
<v Speaker 2>So I said, right, say we want to have a

NOTE CONF {"raw":[100,100,100,97,100,100,100,100,100,40]}

00:03:36.640 --> 00:03:37.640
<v Speaker 2>an array of doubles.

NOTE CONF {"raw":[100,100,100,100]}

00:03:37.640 --> 00:03:39.800
<v Speaker 2>What we have to do is we declare the type,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:39.800 --> 00:03:41.760
<v Speaker 2>we give it a name, and then we use a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,57]}

00:03:41.760 --> 00:03:44.200
<v Speaker 2>keyword new, and we say what it's going to be,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:44.200 --> 00:03:45.720
<v Speaker 2>and we say how long it's going to be.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:03:45.760 --> 00:03:46.200
<v Speaker 2>Right.

NOTE CONF {"raw":[100]}

00:03:46.440 --> 00:03:49.840
<v Speaker 2>So if we do that, uh, and then there's my

NOTE CONF {"raw":[100,100,100,100,100,95,100,100,100,100]}

00:03:49.840 --> 00:03:51.760
<v Speaker 2>array of doubles and we can print that out, we'll

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:03:51.760 --> 00:03:53.600
<v Speaker 2>use a enhanced for loop.

NOTE CONF {"raw":[100,96,52,100,99]}

00:03:53.600 --> 00:03:56.770
<v Speaker 2>So for elements Sorry.

NOTE CONF {"raw":[100,90,77,100]}

00:03:58.410 --> 00:04:01.330
<v Speaker 2>Uh, in array, an element will be a double.

NOTE CONF {"raw":[95,78,100,100,100,100,100,100,100]}

00:04:01.370 --> 00:04:03.810
<v Speaker 2>Because we've just said everything in array is a double.

NOTE CONF {"raw":[100,99,100,100,100,100,100,100,100,100]}

00:04:04.450 --> 00:04:08.090
<v Speaker 2>Um, print array.

NOTE CONF {"raw":[100,100,100]}

00:04:09.850 --> 00:04:10.610
<v Speaker 2>Print element.

NOTE CONF {"raw":[100,97]}

00:04:10.610 --> 00:04:11.050
<v Speaker 2>Sorry.

NOTE CONF {"raw":[99]}

00:04:11.090 --> 00:04:12.370
<v Speaker 2>Okay, so that's going to go through.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:04:12.370 --> 00:04:14.970
<v Speaker 2>That's that's that's a made in new array.

NOTE CONF {"raw":[75,69,73,96,97,43,89,100]}

00:04:15.770 --> 00:04:16.850
<v Speaker 2>Uh length ten.

NOTE CONF {"raw":[98,100,98]}

00:04:16.890 --> 00:04:18.690
<v Speaker 2>It hasn't instantiated anything specifically.

NOTE CONF {"raw":[100,100,100,100,100]}

00:04:18.690 --> 00:04:20.370
<v Speaker 2>And now it's going through and printing it all.

NOTE CONF {"raw":[100,82,82,100,100,100,100,100,100]}

00:04:20.930 --> 00:04:21.690
<v Speaker 2>Is that going to work.

NOTE CONF {"raw":[100,100,100,100,100]}

00:04:21.730 --> 00:04:21.930
<v Speaker 2>Yeah.

NOTE CONF {"raw":[70]}

00:04:21.930 --> 00:04:24.410
<v Speaker 2>So this just prints out ten elements of 0.0.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,98]}

00:04:24.410 --> 00:04:27.690
<v Speaker 2>So I think sorry I'll just close that down so

NOTE CONF {"raw":[100,100,100,96,100,100,100,70,100,100]}

00:04:27.690 --> 00:04:30.170
<v Speaker 2>I don't have to go through so many screens.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:04:30.410 --> 00:04:32.410
<v Speaker 2>I think what this is saying is could we here

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:32.410 --> 00:04:35.250
<v Speaker 2>instead let's just put this ten in here and then

NOTE CONF {"raw":[100,100,100,100,100,98,100,100,100,100]}

00:04:35.610 --> 00:04:37.850
<v Speaker 2>not really bother with this because what we're doing is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:37.850 --> 00:04:39.290
<v Speaker 2>saying we're declaring this array.

NOTE CONF {"raw":[100,100,100,100,100]}

00:04:39.330 --> 00:04:41.210
<v Speaker 2>It's it's a double of type ten.

NOTE CONF {"raw":[99,100,88,100,100,100,100]}

00:04:41.370 --> 00:04:44.170
<v Speaker 2>But as you can see from all the read in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,90,100]}

00:04:44.170 --> 00:04:45.570
<v Speaker 2>here, we can't do that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:04:45.730 --> 00:04:47.530
<v Speaker 2>Or if we put the keyword new in here or

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:04:47.530 --> 00:04:48.490
<v Speaker 2>something okay.

NOTE CONF {"raw":[100,91]}

00:04:48.530 --> 00:04:49.730
<v Speaker 2>We can't do that.

NOTE CONF {"raw":[100,100,100,100]}

00:04:50.250 --> 00:04:51.250
<v Speaker 2>This makes sense.

NOTE CONF {"raw":[100,100,100]}

00:04:51.250 --> 00:04:51.970
<v Speaker 2>Logically.

NOTE CONF {"raw":[100]}

00:04:52.570 --> 00:04:54.690
<v Speaker 2>You can read it and understand what you're saying, but

NOTE CONF {"raw":[100,100,100,100,99,100,100,100,100,100]}

00:04:54.690 --> 00:04:56.150
<v Speaker 2>it's not how you do it in Java.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:04:56.190 --> 00:04:57.270
<v Speaker 2>You have to do it.

NOTE CONF {"raw":[100,100,100,100,100]}

00:04:57.270 --> 00:04:58.310
<v Speaker 2>Like I said in Java.

NOTE CONF {"raw":[100,100,100,100,100]}

00:04:58.430 --> 00:04:59.110
<v Speaker 2>No shortcuts.

NOTE CONF {"raw":[100,100]}

00:04:59.110 --> 00:05:00.430
<v Speaker 2>You have to use the keyword new.

NOTE CONF {"raw":[100,100,100,100,71,100,100]}

00:05:01.150 --> 00:05:03.590
<v Speaker 2>The exception to that is when you use the shorthand

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:03.590 --> 00:05:05.590
<v Speaker 2>of the curly braces that we looked at, but otherwise

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:05.590 --> 00:05:06.870
<v Speaker 2>you have to do it like this.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:05:06.910 --> 00:05:07.110
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:05:07.150 --> 00:05:11.310
<v Speaker 2>So the answer to that is no, you can't come

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,52]}

00:05:11.310 --> 00:05:12.230
<v Speaker 2>in blank.

NOTE CONF {"raw":[100,97]}

00:05:12.270 --> 00:05:13.910
<v Speaker 2>One question what was length?

NOTE CONF {"raw":[100,100,100,100,100]}

00:05:13.910 --> 00:05:14.950
<v Speaker 2>We didn't define it.

NOTE CONF {"raw":[100,100,100,100]}

00:05:14.990 --> 00:05:15.190
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:05:15.230 --> 00:05:18.950
<v Speaker 2>So this is something that came up several times in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:18.950 --> 00:05:20.230
<v Speaker 2>the lecture.

NOTE CONF {"raw":[100,100]}

00:05:20.270 --> 00:05:21.270
<v Speaker 2>Let me see.

NOTE CONF {"raw":[100,100,100]}

00:05:23.190 --> 00:05:24.710
<v Speaker 2>So here is an example right.

NOTE CONF {"raw":[100,100,100,100,100,90]}

00:05:24.750 --> 00:05:30.630
<v Speaker 2>We are we're using this dot which we introduce is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,93,97]}

00:05:30.630 --> 00:05:32.550
<v Speaker 2>something that means applying a method to something.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:05:32.550 --> 00:05:33.670
<v Speaker 2>So length is a method.

NOTE CONF {"raw":[100,100,100,100,100]}

00:05:33.670 --> 00:05:35.870
<v Speaker 2>And we're applying it to b which is b is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:35.870 --> 00:05:36.830
<v Speaker 2>a double array.

NOTE CONF {"raw":[100,100,100]}

00:05:38.190 --> 00:05:40.030
<v Speaker 2>Length is not something we've defined.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:40.070 --> 00:05:42.070
<v Speaker 2>Length is a built in function.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:42.110 --> 00:05:42.310
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:05:42.350 --> 00:05:45.550
<v Speaker 2>So you get various built in functions for basic things

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:45.550 --> 00:05:46.830
<v Speaker 2>that are done all the time.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:05:46.950 --> 00:05:48.630
<v Speaker 2>And we'll come across quite a lot of these.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:05:48.710 --> 00:05:51.430
<v Speaker 2>There are other more complex built in functions in libraries.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,52]}

00:05:51.430 --> 00:05:53.870
<v Speaker 2>So we had a quick look at the maths random

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:53.870 --> 00:05:54.070
<v Speaker 2>one.

NOTE CONF {"raw":[100]}

00:05:54.070 --> 00:05:55.720
<v Speaker 2>So you have to load the maths package.

NOTE CONF {"raw":[100,100,100,100,100,100,95,100]}

00:05:55.720 --> 00:05:57.760
<v Speaker 2>If you just use random without saying where it comes

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:05:57.760 --> 00:05:58.080
<v Speaker 2>from.

NOTE CONF {"raw":[100]}

00:05:58.160 --> 00:06:01.240
<v Speaker 2>It won't work, but you can use Math.random and Java

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:01.240 --> 00:06:02.080
<v Speaker 2>will know what it is.

NOTE CONF {"raw":[100,100,100,100,100]}

00:06:02.160 --> 00:06:05.640
<v Speaker 2>Here length is just built in so you don't need

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:05.640 --> 00:06:06.480
<v Speaker 2>to define it.

NOTE CONF {"raw":[100,100,100]}

00:06:06.560 --> 00:06:09.080
<v Speaker 2>This is predefined for you and there are quite a

NOTE CONF {"raw":[100,100,94,100,100,100,100,100,100,100]}

00:06:09.080 --> 00:06:09.560
<v Speaker 2>few of these.

NOTE CONF {"raw":[100,100,100]}

00:06:09.560 --> 00:06:11.480
<v Speaker 2>And you will see them more and more of these

NOTE CONF {"raw":[100,96,96,100,100,100,100,100,100,100]}

00:06:11.480 --> 00:06:12.280
<v Speaker 2>as we go along.

NOTE CONF {"raw":[100,100,100,100]}

00:06:13.920 --> 00:06:14.960
<v Speaker 2>The index.

NOTE CONF {"raw":[100,100]}

00:06:15.000 --> 00:06:17.320
<v Speaker 2>The array index basically offsets a pointer under the hood.

NOTE CONF {"raw":[100,100,100,100,100,70,100,100,100,100]}

00:06:17.320 --> 00:06:19.520
<v Speaker 2>So index zero is offset of zero.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:06:19.640 --> 00:06:20.400
<v Speaker 2>So first element.

NOTE CONF {"raw":[100,100,100]}

00:06:20.440 --> 00:06:20.560
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:06:20.600 --> 00:06:21.600
<v Speaker 2>So this is not a question.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:06:21.600 --> 00:06:23.360
<v Speaker 2>This is an explanation I left that up because I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:23.360 --> 00:06:24.520
<v Speaker 2>think that's a really nice one.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:06:24.520 --> 00:06:28.200
<v Speaker 2>So what the what the index is saying is how

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:28.200 --> 00:06:30.240
<v Speaker 2>much offset are you.

NOTE CONF {"raw":[100,100,100,100]}

00:06:30.280 --> 00:06:31.400
<v Speaker 2>From this from the top.

NOTE CONF {"raw":[100,57,100,100,100]}

00:06:31.400 --> 00:06:33.800
<v Speaker 2>So if you're in the first position you're not offset

NOTE CONF {"raw":[100,100,99,100,100,100,100,100,100,100]}

00:06:33.800 --> 00:06:34.200
<v Speaker 2>at all.

NOTE CONF {"raw":[100,100]}

00:06:34.200 --> 00:06:36.600
<v Speaker 2>So somebody asked last time why do you start an

NOTE CONF {"raw":[100,100,98,100,100,100,100,100,100,100]}

00:06:36.600 --> 00:06:37.880
<v Speaker 2>array at zero and not at one?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:06:37.880 --> 00:06:39.920
<v Speaker 2>The first element kind of seems like it should be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:39.920 --> 00:06:41.520
<v Speaker 2>element one, but it's not.

NOTE CONF {"raw":[100,100,100,100,100]}

00:06:41.560 --> 00:06:43.640
<v Speaker 2>Not because what you're talking about is an offset.

NOTE CONF {"raw":[100,100,100,100,100,100,96,100,100]}

00:06:43.640 --> 00:06:46.360
<v Speaker 2>So position one is offset by zero from the beginning.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:06:46.880 --> 00:06:48.440
<v Speaker 2>So that might help a little bit.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:06:48.920 --> 00:06:52.000
<v Speaker 2>When should we use enhanced for loop over array for

NOTE CONF {"raw":[100,45,96,97,80,100,100,100,100,100]}

00:06:52.040 --> 00:06:52.280
<v Speaker 2>each.

NOTE CONF {"raw":[100]}

00:06:52.320 --> 00:06:55.090
<v Speaker 2>So for each is a method that's built in.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:06:55.370 --> 00:06:57.810
<v Speaker 2>That's in the arrays package that you can use.

NOTE CONF {"raw":[100,100,100,76,100,100,100,100,100]}

00:06:57.890 --> 00:07:00.370
<v Speaker 2>It is in some ways similar to the enhanced for

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,95]}

00:07:00.370 --> 00:07:01.850
<v Speaker 2>loop, but we're not covering right now.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:07:02.090 --> 00:07:04.170
<v Speaker 2>So I'm not going to talk about for each.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:07:04.170 --> 00:07:05.490
<v Speaker 2>It's something you might come across later.

NOTE CONF {"raw":[99,100,100,100,100,100,100]}

00:07:05.490 --> 00:07:07.570
<v Speaker 2>But for now don't worry about it for each.

NOTE CONF {"raw":[100,100,100,100,100,100,71,100,100]}

00:07:08.170 --> 00:07:09.690
<v Speaker 2>So I don't want to get into details of that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:09.690 --> 00:07:10.010
<v Speaker 2>right now.

NOTE CONF {"raw":[100,100]}

00:07:10.050 --> 00:07:11.370
<v Speaker 2>Oh my God, please don't add stuff.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:07:11.370 --> 00:07:12.770
<v Speaker 2>I thought this was blocked.

NOTE CONF {"raw":[100,100,100,100,89]}

00:07:13.050 --> 00:07:15.250
<v Speaker 2>Okay, if you add stuff, it makes it really hard

NOTE CONF {"raw":[60,100,100,100,100,100,100,100,100,100]}

00:07:15.250 --> 00:07:16.010
<v Speaker 2>to go through this.

NOTE CONF {"raw":[100,100,100,100]}

00:07:16.370 --> 00:07:19.890
<v Speaker 2>Um, who do I ask about scheduling clashes?

NOTE CONF {"raw":[93,100,100,100,100,100,100,100]}

00:07:20.450 --> 00:07:23.170
<v Speaker 2>Um, they would look back to the announcement on learn

NOTE CONF {"raw":[100,61,98,100,100,100,100,100,58,47]}

00:07:23.170 --> 00:07:25.490
<v Speaker 2>or the email you got about tutorials as an email

NOTE CONF {"raw":[100,100,100,100,100,100,100,67,100,100]}

00:07:25.490 --> 00:07:25.810
<v Speaker 2>there.

NOTE CONF {"raw":[100]}

00:07:26.530 --> 00:07:27.210
<v Speaker 2>Is this okay?

NOTE CONF {"raw":[100,100,100]}

00:07:27.250 --> 00:07:28.010
<v Speaker 2>Double n array?

NOTE CONF {"raw":[99,87,100]}

00:07:28.050 --> 00:07:28.970
<v Speaker 2>No, we already looked at that.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:07:28.970 --> 00:07:29.770
<v Speaker 2>That's not okay.

NOTE CONF {"raw":[100,100,100]}

00:07:29.930 --> 00:07:32.890
<v Speaker 2>Please can you explain re explain how for loop we'll

NOTE CONF {"raw":[100,100,100,100,63,85,71,100,100,100]}

00:07:32.890 --> 00:07:34.450
<v Speaker 2>be looking at more examples of that today.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:07:34.570 --> 00:07:36.850
<v Speaker 2>Other than weekly quiz and lab exercises what do I

NOTE CONF {"raw":[100,100,100,67,100,100,93,90,96,100]}

00:07:36.850 --> 00:07:37.730
<v Speaker 2>have to do this week?

NOTE CONF {"raw":[100,100,100,100,100]}

00:07:37.930 --> 00:07:41.210
<v Speaker 2>The answer is not really anything, except I would recommend

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:07:41.210 --> 00:07:43.970
<v Speaker 2>starting to have a look at the assignment practice tests.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,99,92]}

00:07:44.570 --> 00:07:45.850
<v Speaker 2>Um, that's that.

NOTE CONF {"raw":[100,81,100]}

00:07:45.850 --> 00:07:47.050
<v Speaker 2>They haven't been released then.

NOTE CONF {"raw":[100,62,100,100,93]}

00:07:47.370 --> 00:07:49.010
<v Speaker 2>Um, and tutorials.

NOTE CONF {"raw":[83,99,100]}

00:07:49.050 --> 00:07:49.570
<v Speaker 2>Not this week.

NOTE CONF {"raw":[100,100,100]}

00:07:49.570 --> 00:07:50.730
<v Speaker 2>So you don't have to do that, but you do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,96,97]}

00:07:50.730 --> 00:07:51.570
<v Speaker 2>have to do it next week.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:07:51.730 --> 00:07:54.350
<v Speaker 2>Does the intelligent intro course follow along this course?

NOTE CONF {"raw":[100,100,78,100,100,100,100,100,100]}

00:07:54.550 --> 00:07:55.550
<v Speaker 2>It doesn't follow along.

NOTE CONF {"raw":[100,100,100,100]}

00:07:55.550 --> 00:07:57.270
<v Speaker 2>It's not designed in conjunction with it.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:07:57.270 --> 00:07:58.630
<v Speaker 2>It will cover a lot of the same stuff.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:07:58.630 --> 00:08:01.590
<v Speaker 2>I don't know the intelligent intro IntelliJ intro course in

NOTE CONF {"raw":[100,100,100,100,100,100,45,100,100,100]}

00:08:01.590 --> 00:08:01.990
<v Speaker 2>detail.

NOTE CONF {"raw":[100]}

00:08:02.110 --> 00:08:03.350
<v Speaker 2>I imagine it's quite useful.

NOTE CONF {"raw":[100,100,98,100,100]}

00:08:03.350 --> 00:08:04.790
<v Speaker 2>So do look at that if you want to.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:08:05.030 --> 00:08:07.990
<v Speaker 2>When do we start working on proper object oriented projects?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:08.950 --> 00:08:11.910
<v Speaker 2>So we do do object object orientation in this course.

NOTE CONF {"raw":[100,100,100,100,98,100,100,100,100,100]}

00:08:11.910 --> 00:08:13.590
<v Speaker 2>This is a course about object orientation.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:08:13.590 --> 00:08:15.550
<v Speaker 2>But there is quite a lot of groundwork before we

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:15.550 --> 00:08:18.070
<v Speaker 2>can get on to even to really talking about objects,

NOTE CONF {"raw":[100,100,93,93,100,100,100,100,100,100]}

00:08:18.070 --> 00:08:19.310
<v Speaker 2>which we'll do quite soon.

NOTE CONF {"raw":[100,94,100,100,100]}

00:08:19.430 --> 00:08:22.510
<v Speaker 2>But then what really what object orientation means and how

NOTE CONF {"raw":[100,100,63,100,100,100,100,100,100,100]}

00:08:22.510 --> 00:08:24.910
<v Speaker 2>you design with that in mind is something we get

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:24.910 --> 00:08:26.830
<v Speaker 2>onto later on in the course, because we have a

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,100,100]}

00:08:26.870 --> 00:08:29.750
<v Speaker 2>lot of people in this course who don't have experience

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:29.750 --> 00:08:30.350
<v Speaker 2>with programming.

NOTE CONF {"raw":[100,100]}

00:08:30.350 --> 00:08:31.790
<v Speaker 2>So we have to cover quite a lot of the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:31.790 --> 00:08:34.789
<v Speaker 2>basics, which aren't really anything to do with object orientation.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:34.789 --> 00:08:36.469
<v Speaker 2>And when we've got those in place, we'll move on.

NOTE CONF {"raw":[96,99,100,100,100,100,100,100,100,100]}

00:08:37.990 --> 00:08:40.150
<v Speaker 2>Uh, have you read Clean Code by Robert C Martin?

NOTE CONF {"raw":[69,100,100,100,100,100,100,100,40,100]}

00:08:40.150 --> 00:08:41.550
<v Speaker 2>I have not, but that sounds really good.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:08:41.550 --> 00:08:42.990
<v Speaker 2>So maybe you guys should look at that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:08:43.390 --> 00:08:45.990
<v Speaker 2>You could have used break statements instead of nesting ifs.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:46.030 --> 00:08:46.870
<v Speaker 2>Yes you could.

NOTE CONF {"raw":[100,100,100]}

00:08:47.270 --> 00:08:48.790
<v Speaker 2>And so I think I mentioned that in the course

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:48.790 --> 00:08:51.840
<v Speaker 2>we looked at breaking and then we looked at nested

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:51.880 --> 00:08:52.160
<v Speaker 2>ifs.

NOTE CONF {"raw":[99]}

00:08:52.200 --> 00:08:55.040
<v Speaker 2>Usually, nesting ifs are considered better practice.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:08:55.040 --> 00:08:58.480
<v Speaker 2>Breaking is quite easy to make it break at the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:08:58.480 --> 00:09:00.000
<v Speaker 2>wrong time to do the wrong thing, and it's also

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:00.000 --> 00:09:01.040
<v Speaker 2>much more difficult to read.

NOTE CONF {"raw":[100,100,100,100,100]}

00:09:01.040 --> 00:09:02.600
<v Speaker 2>So sometimes breaking is really useful.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:09:02.600 --> 00:09:02.800
<v Speaker 2>But.

NOTE CONF {"raw":[100]}

00:09:03.120 --> 00:09:04.400
<v Speaker 2>And we could have done it then.

NOTE CONF {"raw":[69,100,100,100,100,100,100]}

00:09:04.800 --> 00:09:07.200
<v Speaker 2>But nesting ifs is another way of doing it and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:07.240 --> 00:09:08.080
<v Speaker 2>often better.

NOTE CONF {"raw":[100,100]}

00:09:09.280 --> 00:09:10.640
<v Speaker 2>Dot length is a method.

NOTE CONF {"raw":[95,100,100,100,100]}

00:09:10.760 --> 00:09:12.320
<v Speaker 2>Functional programming is better.

NOTE CONF {"raw":[100,100,100,100]}

00:09:12.840 --> 00:09:15.480
<v Speaker 2>That is a that's a matter of opinion function.

NOTE CONF {"raw":[100,100,79,100,96,100,100,100,100]}

00:09:15.760 --> 00:09:19.520
<v Speaker 2>Functional programming is definitely not nearly as common, so you're

NOTE CONF {"raw":[100,78,100,100,100,100,100,100,100,100]}

00:09:19.520 --> 00:09:21.440
<v Speaker 2>unlikely to use functional programming very much.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:09:21.440 --> 00:09:24.360
<v Speaker 2>In industry, for example, you will use object oriented a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:24.360 --> 00:09:26.120
<v Speaker 2>lot, whether that's Java or something else.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:09:26.640 --> 00:09:28.520
<v Speaker 2>Whether or not it's better is something that people could

NOTE CONF {"raw":[100,100,100,100,100,84,100,100,100,100]}

00:09:28.520 --> 00:09:30.600
<v Speaker 2>argue about for for weeks and months.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:09:31.040 --> 00:09:32.760
<v Speaker 2>I don't have a strong opinion about that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:09:33.040 --> 00:09:35.440
<v Speaker 2>Does the if need to be nested inside the alpha

NOTE CONF {"raw":[100,68,100,100,100,100,100,100,100,100]}

00:09:35.840 --> 00:09:36.120
<v Speaker 2>alpha?

NOTE CONF {"raw":[60]}

00:09:36.160 --> 00:09:37.760
<v Speaker 2>Could you just use Elsif?

NOTE CONF {"raw":[100,100,100,100,52]}

00:09:38.320 --> 00:09:43.040
<v Speaker 2>Okay, so let's quickly look at where were we doing

NOTE CONF {"raw":[100,100,100,100,100,100,100,95,100,100]}

00:09:43.040 --> 00:09:43.440
<v Speaker 2>that.

NOTE CONF {"raw":[100]}

00:09:44.480 --> 00:09:46.200
<v Speaker 2>That was in I think that was still in hello

NOTE CONF {"raw":[100,100,100,100,100,37,93,100,100,100]}

00:09:46.200 --> 00:09:47.000
<v Speaker 2>world wasn't it.

NOTE CONF {"raw":[100,100,100]}

00:09:48.520 --> 00:09:48.720
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:09:48.720 --> 00:09:52.340
<v Speaker 2>So we've got the if here if statement in brackets,

NOTE CONF {"raw":[100,100,100,100,89,100,100,100,100,100]}

00:09:52.340 --> 00:09:53.260
<v Speaker 2>then this is what you do.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:09:53.300 --> 00:09:56.220
<v Speaker 2>Else so each if statement can only have one else.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:09:56.460 --> 00:09:57.340
<v Speaker 2>Well actually.

NOTE CONF {"raw":[100,100]}

00:10:00.220 --> 00:10:00.500
<v Speaker 2>Yeah.

NOTE CONF {"raw":[88]}

00:10:00.500 --> 00:10:01.180
<v Speaker 2>So else.

NOTE CONF {"raw":[98,77]}

00:10:01.220 --> 00:10:02.980
<v Speaker 2>Else statements don't have conditionals right.

NOTE CONF {"raw":[100,100,100,100,100,88]}

00:10:03.020 --> 00:10:04.580
<v Speaker 2>So if you have lots of conditionals.

NOTE CONF {"raw":[100,100,100,100,100,100,86]}

00:10:04.700 --> 00:10:05.700
<v Speaker 2>You nest it in this way.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:10:05.700 --> 00:10:07.340
<v Speaker 2>I don't think you can do that differently.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:10:07.980 --> 00:10:09.700
<v Speaker 2>Why do arrays always start from zero?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:10:09.740 --> 00:10:12.300
<v Speaker 2>Had a helpful comment to explain that which is more

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:12.460 --> 00:10:13.660
<v Speaker 2>efficient initially?

NOTE CONF {"raw":[100,76]}

00:10:13.700 --> 00:10:16.300
<v Speaker 2>Initialising I at the beginning or inside the for loop?

NOTE CONF {"raw":[100,95,100,100,100,100,100,100,100,100]}

00:10:16.300 --> 00:10:18.220
<v Speaker 2>I don't think that really matters.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:10:18.900 --> 00:10:21.660
<v Speaker 2>Um, so when you're doing a for loop, you're always

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,33,97]}

00:10:21.700 --> 00:10:24.020
<v Speaker 2>yeah, you need to initialise a counter inside.

NOTE CONF {"raw":[96,100,100,100,100,100,100,100]}

00:10:24.820 --> 00:10:28.260
<v Speaker 2>Um, that's part of the the structure of a for

NOTE CONF {"raw":[98,100,100,100,100,97,100,100,100,100]}

00:10:28.260 --> 00:10:28.580
<v Speaker 2>loop.

NOTE CONF {"raw":[100]}

00:10:29.020 --> 00:10:31.500
<v Speaker 2>I don't think it makes much difference to efficiency in

NOTE CONF {"raw":[100,100,100,100,100,100,100,97,100,100]}

00:10:31.500 --> 00:10:31.860
<v Speaker 2>general.

NOTE CONF {"raw":[100]}

00:10:31.860 --> 00:10:33.900
<v Speaker 2>Whereabouts you initialise things as long as you do it

NOTE CONF {"raw":[100,96,100,100,100,100,100,100,100,100]}

00:10:33.900 --> 00:10:34.700
<v Speaker 2>before you use them.

NOTE CONF {"raw":[100,100,100,100]}

00:10:35.020 --> 00:10:37.340
<v Speaker 2>Is it nesting if statements a bad practice?

NOTE CONF {"raw":[95,95,100,100,100,78,100,100]}

00:10:37.780 --> 00:10:40.180
<v Speaker 2>Uh, this comes back to something we talk about a

NOTE CONF {"raw":[99,100,100,100,100,100,100,81,100,100]}

00:10:40.180 --> 00:10:44.340
<v Speaker 2>lot, and I've already mentioned readability and maintainability of code.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:44.540 --> 00:10:44.940
<v Speaker 2>Yes.

NOTE CONF {"raw":[100]}

00:10:44.940 --> 00:10:48.220
<v Speaker 2>If you have 15 nested ifs all in one, that's

NOTE CONF {"raw":[100,100,100,100,100,91,100,100,100,100]}

00:10:48.220 --> 00:10:50.030
<v Speaker 2>going to make it really hard to read.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:10:50.150 --> 00:10:51.910
<v Speaker 2>Which in turn makes it hard to maintain.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:10:51.910 --> 00:10:53.430
<v Speaker 2>And you have loads of brackets all over the place,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:53.430 --> 00:10:54.630
<v Speaker 2>which makes it hard to maintain.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:10:54.710 --> 00:10:57.030
<v Speaker 2>So you want to keep the structure fairly simple.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:10:57.030 --> 00:10:58.910
<v Speaker 2>And that's something we'll be talking about in this lecture.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:10:59.350 --> 00:11:01.590
<v Speaker 2>Nested ifs are not bad practice in general.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:01.630 --> 00:11:02.990
<v Speaker 2>Often they're the best thing to do.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:11:03.150 --> 00:11:06.070
<v Speaker 2>But if you're getting really, really deep and complex, probably

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:06.070 --> 00:11:07.710
<v Speaker 2>that's not a good idea and you're going to need

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:07.710 --> 00:11:08.950
<v Speaker 2>to think about a different way.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:11:08.950 --> 00:11:11.110
<v Speaker 2>You might be able to structure something so that it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:11.110 --> 00:11:13.190
<v Speaker 2>doesn't get that that depth and complexity.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:11:13.230 --> 00:11:16.670
<v Speaker 2>So, so a really high complexity in the structure of

NOTE CONF {"raw":[100,88,86,100,100,100,100,100,100,100]}

00:11:16.670 --> 00:11:18.430
<v Speaker 2>code is something that you want to avoid because it

NOTE CONF {"raw":[100,98,100,100,100,100,100,100,100,100]}

00:11:18.430 --> 00:11:20.870
<v Speaker 2>makes it difficult to maintain and difficult to understand.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:11:22.030 --> 00:11:22.470
<v Speaker 2>Okay.

NOTE CONF {"raw":[84]}

00:11:23.230 --> 00:11:23.470
<v Speaker 2>Right.

NOTE CONF {"raw":[63]}

00:11:23.510 --> 00:11:26.150
<v Speaker 2>So that's all the questions from last lecture.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:26.150 --> 00:11:27.990
<v Speaker 2>So this lecture will have a slide again.

NOTE CONF {"raw":[100,100,100,83,100,100,100,100]}

00:11:27.990 --> 00:11:29.390
<v Speaker 2>And you can add anything new.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:11:31.110 --> 00:11:32.310
<v Speaker 2>All right.

NOTE CONF {"raw":[100,100]}

00:11:33.990 --> 00:11:35.830
<v Speaker 2>Part of the lecture this is Mika.

NOTE CONF {"raw":[65,100,100,100,100,100,81]}

00:11:35.870 --> 00:11:38.030
<v Speaker 2>She is a three year old former stray.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:38.150 --> 00:11:40.630
<v Speaker 2>And I'm sure she's very happy to be living in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:40.630 --> 00:11:41.950
<v Speaker 2>her loving home now.

NOTE CONF {"raw":[100,100,100,100]}

00:11:42.910 --> 00:11:45.390
<v Speaker 2>And we've got two this week, this lecture.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:11:45.390 --> 00:11:46.790
<v Speaker 2>This is Jack, who looks very cute.

NOTE CONF {"raw":[100,100,56,100,100,100,100]}

00:11:46.790 --> 00:11:49.240
<v Speaker 2>I love the bow tie so I've got loads of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:49.240 --> 00:11:49.800
<v Speaker 2>pet pictures.

NOTE CONF {"raw":[96,100]}

00:11:49.800 --> 00:11:51.080
<v Speaker 2>I'm definitely going to do two Electra.

NOTE CONF {"raw":[100,100,100,100,100,100,46]}

00:11:51.080 --> 00:11:52.120
<v Speaker 2>I might have two up to three.

NOTE CONF {"raw":[98,100,100,38,100,100,100]}

00:11:52.320 --> 00:11:54.000
<v Speaker 2>So thanks for sending and do keep them coming.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:11:54.000 --> 00:11:54.800
<v Speaker 2>I can put more in.

NOTE CONF {"raw":[100,100,100,100,100]}

00:11:55.240 --> 00:11:57.480
<v Speaker 2>All right, live design I'm going to quickly move on

NOTE CONF {"raw":[100,100,70,100,100,100,100,100,100,100]}

00:11:57.520 --> 00:11:59.680
<v Speaker 2>to the biscuits question whilst I go back to this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:11:59.680 --> 00:12:01.720
<v Speaker 2>This is just a placeholder to remind me.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:12:02.160 --> 00:12:04.560
<v Speaker 2>Um, my office hour on Monday was great.

NOTE CONF {"raw":[92,100,100,86,100,100,100,100]}

00:12:04.560 --> 00:12:06.160
<v Speaker 2>I had loads of people coming along.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:12:06.160 --> 00:12:07.880
<v Speaker 2>I totally ran out of biscuits.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:08.560 --> 00:12:10.520
<v Speaker 2>Um, so that was really good.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:10.560 --> 00:12:12.320
<v Speaker 2>So please do come along on Monday just to say

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:12.320 --> 00:12:14.280
<v Speaker 2>hello, just to just to have a chat.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:12:14.520 --> 00:12:17.040
<v Speaker 2>And obviously also if you have questions so you can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:17.040 --> 00:12:20.000
<v Speaker 2>vote for biscuits this time I've restricted your choice so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:20.000 --> 00:12:21.440
<v Speaker 2>we don't get crazy things coming in.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:12:21.440 --> 00:12:22.640
<v Speaker 2>I think word clouds are dodgy.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:22.640 --> 00:12:24.440
<v Speaker 2>So you just got a choice of five this time.

NOTE CONF {"raw":[100,76,100,100,100,100,100,100,100,100]}

00:12:24.440 --> 00:12:26.360
<v Speaker 2>But I might I might change that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:12:26.400 --> 00:12:27.840
<v Speaker 2>I mean I will change that week by week.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:12:28.040 --> 00:12:28.400
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:12:28.440 --> 00:12:30.520
<v Speaker 2>So what I want to mention quickly now I'm going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:30.520 --> 00:12:31.680
<v Speaker 2>to talk about this more on Monday.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:12:32.160 --> 00:12:34.880
<v Speaker 2>Um, we've, we're trialling this new thing in from B.

NOTE CONF {"raw":[99,82,100,56,100,100,100,89,94,98]}

00:12:34.880 --> 00:12:37.480
<v Speaker 2>So this is not object oriented programming but it is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:37.480 --> 00:12:39.320
<v Speaker 2>part of your core learning in year one.

NOTE CONF {"raw":[100,100,100,100,100,94,100,100]}

00:12:39.680 --> 00:12:42.120
<v Speaker 2>Um, and it's the stuff we're doing around life design.

NOTE CONF {"raw":[90,100,100,100,100,100,100,100,72,100]}

00:12:42.120 --> 00:12:44.600
<v Speaker 2>So this is coming out of a program they run

NOTE CONF {"raw":[100,100,100,100,100,100,100,92,100,100]}

00:12:44.600 --> 00:12:45.520
<v Speaker 2>in Stanford.

NOTE CONF {"raw":[100,100]}

00:12:45.960 --> 00:12:49.940
<v Speaker 2>Um, so it was originally designed by two product designers

NOTE CONF {"raw":[95,100,100,100,100,100,100,100,100,100]}

00:12:50.340 --> 00:12:53.140
<v Speaker 2>in Silicon Valley, Bill Burnett and Dave Evans, both of

NOTE CONF {"raw":[100,100,100,100,85,100,100,100,100,100]}

00:12:53.140 --> 00:12:54.420
<v Speaker 2>whom have done really seminal things.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:12:54.420 --> 00:12:56.140
<v Speaker 2>I think one of them did something really seminal to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:12:56.140 --> 00:12:59.100
<v Speaker 2>do with how mouse touchpads are used and stuff there.

NOTE CONF {"raw":[100,100,100,100,90,100,100,100,100,41]}

00:12:59.140 --> 00:13:02.060
<v Speaker 2>They've done really seminal design, and then they both went

NOTE CONF {"raw":[100,100,100,100,100,100,100,90,100,100]}

00:13:02.060 --> 00:13:05.460
<v Speaker 2>to work at Stanford, and they were thinking about how

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:05.580 --> 00:13:09.260
<v Speaker 2>students respond to their courses and thinking about how this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,96]}

00:13:09.620 --> 00:13:12.100
<v Speaker 2>tech, this these approaches they use in product design is

NOTE CONF {"raw":[65,70,100,100,100,100,100,100,100,100]}

00:13:12.100 --> 00:13:15.660
<v Speaker 2>actually really helpful for students to think about their university

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:15.660 --> 00:13:16.380
<v Speaker 2>experience.

NOTE CONF {"raw":[100]}

00:13:16.500 --> 00:13:19.140
<v Speaker 2>So and this was this is now taught at Stanford,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:19.140 --> 00:13:19.900
<v Speaker 2>I think to everyone.

NOTE CONF {"raw":[100,100,100,100]}

00:13:19.900 --> 00:13:22.740
<v Speaker 2>But it was particularly originated in computer science for computer

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:22.740 --> 00:13:23.620
<v Speaker 2>science students.

NOTE CONF {"raw":[100,100]}

00:13:23.780 --> 00:13:25.580
<v Speaker 2>So it's a bit more of an abstract way for

NOTE CONF {"raw":[100,88,100,100,100,100,100,100,100,100]}

00:13:25.580 --> 00:13:27.460
<v Speaker 2>you guys to look at your learning and, and more

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:27.460 --> 00:13:30.660
<v Speaker 2>broadly, your experiences at university and what we're going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:30.660 --> 00:13:32.700
<v Speaker 2>do in week four and week eight.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:13:32.740 --> 00:13:34.940
<v Speaker 2>On the Monday we're going to run, these sessions are

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,52]}

00:13:34.940 --> 00:13:36.380
<v Speaker 2>going to be two hour sessions.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:13:36.700 --> 00:13:39.780
<v Speaker 2>You're going to get free lunch provided we've sorted out

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:39.780 --> 00:13:41.220
<v Speaker 2>how it interacts with your math courses.

NOTE CONF {"raw":[100,100,100,100,100,97,100]}

00:13:41.220 --> 00:13:42.300
<v Speaker 2>So it should all be fine.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:13:42.740 --> 00:13:44.460
<v Speaker 2>But we'll talk about this more.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:13:44.460 --> 00:13:47.430
<v Speaker 2>Another that's probably maybe next week.

NOTE CONF {"raw":[100,80,100,100,100,100]}

00:13:47.510 --> 00:13:49.150
<v Speaker 2>But what I want to do right now is that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:49.150 --> 00:13:51.510
<v Speaker 2>we want a few people to help us run this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:51.630 --> 00:13:54.990
<v Speaker 2>So we're looking for a few volunteers who will be

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:13:55.030 --> 00:13:56.990
<v Speaker 2>will be helping us out with the organisation.

NOTE CONF {"raw":[100,100,100,100,100,100,100,97]}

00:13:57.390 --> 00:14:00.710
<v Speaker 2>Um, and if you do this, we'll be super grateful.

NOTE CONF {"raw":[83,100,100,100,100,100,100,100,100,100]}

00:14:00.710 --> 00:14:03.190
<v Speaker 2>And I think it'll be really great learning experience to

NOTE CONF {"raw":[100,100,100,85,100,100,100,100,100,100]}

00:14:03.430 --> 00:14:05.070
<v Speaker 2>to look at how you facilitate this also.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:14:05.110 --> 00:14:06.990
<v Speaker 2>We'll have some cool free stuff that we can give

NOTE CONF {"raw":[96,100,100,100,100,100,100,100,100,100]}

00:14:07.030 --> 00:14:10.470
<v Speaker 2>out to people who are helping us.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:14:10.830 --> 00:14:12.750
<v Speaker 2>Um, I mean, actually, I don't know how cool it

NOTE CONF {"raw":[97,100,98,99,99,100,100,100,100,100]}

00:14:12.750 --> 00:14:12.830
<v Speaker 2>is.

NOTE CONF {"raw":[100]}

00:14:12.870 --> 00:14:14.190
<v Speaker 2>I don't know what we've got, but I'll find some

NOTE CONF {"raw":[100,100,100,100,97,100,100,99,100,100]}

00:14:14.190 --> 00:14:15.070
<v Speaker 2>good stuff for you.

NOTE CONF {"raw":[100,100,100,100]}

00:14:15.390 --> 00:14:18.510
<v Speaker 2>Um, so you need to be able to come along

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:18.550 --> 00:14:20.990
<v Speaker 2>about 20 minutes early to the lecture, and there's a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:21.030 --> 00:14:21.350
<v Speaker 2>sign up.

NOTE CONF {"raw":[100,100]}

00:14:21.350 --> 00:14:23.470
<v Speaker 2>If you use that QR code, you can sign up

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:14:23.470 --> 00:14:24.910
<v Speaker 2>to volunteer as a facilitator.

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:24.910 --> 00:14:27.310
<v Speaker 2>We'd be really, really grateful if people are interested in

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:14:27.310 --> 00:14:27.790
<v Speaker 2>doing this.

NOTE CONF {"raw":[100,100]}

00:14:27.790 --> 00:14:29.510
<v Speaker 2>So please do consider doing that.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:14:29.790 --> 00:14:32.590
<v Speaker 2>Um, I'll send out an email about that later on

NOTE CONF {"raw":[86,100,100,100,100,100,100,100,100,100]}

00:14:32.590 --> 00:14:34.790
<v Speaker 2>if I don't already have enough people signed up.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:14:35.430 --> 00:14:36.750
<v Speaker 2>Um, fine.

NOTE CONF {"raw":[98,100]}

00:14:37.750 --> 00:14:38.390
<v Speaker 2>Oh, wow.

NOTE CONF {"raw":[100,100]}

00:14:38.430 --> 00:14:39.070
<v Speaker 2>Rich tea.

NOTE CONF {"raw":[100,66]}

00:14:39.110 --> 00:14:40.030
<v Speaker 2>This makes me so happy.

NOTE CONF {"raw":[100,100,100,100,100]}

00:14:40.070 --> 00:14:42.310
<v Speaker 2>Rich tea is actually my favourite biscuit, but most people

NOTE CONF {"raw":[100,100,100,100,100,64,100,100,100,100]}

00:14:42.310 --> 00:14:43.750
<v Speaker 2>think it's incredibly boring.

NOTE CONF {"raw":[100,100,100,100]}

00:14:44.600 --> 00:14:46.280
<v Speaker 2>But it seems to be the clear favourite.

NOTE CONF {"raw":[100,100,100,100,100,100,100,62]}

00:14:47.240 --> 00:14:51.120
<v Speaker 2>Okay, so we'll have Jammie Dodgers seven people.

NOTE CONF {"raw":[100,100,100,100,97,100,100,100]}

00:14:51.120 --> 00:14:51.480
<v Speaker 2>Really?

NOTE CONF {"raw":[96]}

00:14:51.560 --> 00:14:52.560
<v Speaker 2>That's madness.

NOTE CONF {"raw":[100,100]}

00:14:53.280 --> 00:14:55.440
<v Speaker 2>Um, five for biscotti.

NOTE CONF {"raw":[84,100,100,100]}

00:14:55.480 --> 00:14:57.320
<v Speaker 2>Anyway, Richie is the clear winner.

NOTE CONF {"raw":[86,36,100,100,100,100]}

00:14:57.360 --> 00:14:59.320
<v Speaker 2>We'll have Richie on Monday, but we'll maybe have some

NOTE CONF {"raw":[100,100,62,100,100,100,100,100,100,100]}

00:14:59.320 --> 00:15:01.120
<v Speaker 2>of these others in weeks to come.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:15:02.440 --> 00:15:03.600
<v Speaker 2>Uh, okay.

NOTE CONF {"raw":[96,100]}

00:15:04.040 --> 00:15:08.840
<v Speaker 2>So now let's get back to some actual Java.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:15:09.280 --> 00:15:13.080
<v Speaker 2>Okay, so last lecture, we were just getting on to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,93,93]}

00:15:13.080 --> 00:15:18.320
<v Speaker 2>the, um, looking at arrays through the example of a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:18.320 --> 00:15:21.560
<v Speaker 2>pack of cards, which we can actually do on IntelliJ,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:21.560 --> 00:15:24.320
<v Speaker 2>because I had forgotten I had updated it and I

NOTE CONF {"raw":[100,100,100,100,94,92,100,100,100,100]}

00:15:24.320 --> 00:15:26.280
<v Speaker 2>had the updated version and not the original version that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:26.280 --> 00:15:27.600
<v Speaker 2>I want to show you how to update.

NOTE CONF {"raw":[100,100,100,100,100,100,100,64]}

00:15:27.880 --> 00:15:28.120
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:15:28.160 --> 00:15:30.480
<v Speaker 2>So the idea here is that we have two arrays.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:30.800 --> 00:15:32.520
<v Speaker 2>One, they're both arrays of strings.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:15:32.520 --> 00:15:35.000
<v Speaker 2>One is called rank and that is every value you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:35.000 --> 00:15:36.600
<v Speaker 2>can get for cards.

NOTE CONF {"raw":[100,100,100,83]}

00:15:36.600 --> 00:15:38.640
<v Speaker 2>So that's two up to ace.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:15:39.000 --> 00:15:42.160
<v Speaker 2>And the other is um an array of the suits

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:42.160 --> 00:15:44.100
<v Speaker 2>which is clubs diamonds hearts and spades.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:15:44.140 --> 00:15:44.300
<v Speaker 2>Okay.

NOTE CONF {"raw":[69]}

00:15:44.340 --> 00:15:48.460
<v Speaker 2>And we want to use these two arrays to populate,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:49.180 --> 00:15:52.660
<v Speaker 2>um, or to print out every possible value.

NOTE CONF {"raw":[68,100,100,100,100,100,100,100]}

00:15:52.940 --> 00:15:55.940
<v Speaker 2>Um, or that you can get in a pack of

NOTE CONF {"raw":[96,100,99,100,100,100,100,100,100,100]}

00:15:55.940 --> 00:15:56.100
<v Speaker 2>cards.

NOTE CONF {"raw":[100]}

00:15:56.140 --> 00:15:57.780
<v Speaker 2>Well, actually no, that's not what we're doing right now.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:15:57.780 --> 00:16:01.100
<v Speaker 2>What we're doing now is, uh, just picking a random

NOTE CONF {"raw":[100,100,100,100,100,63,100,100,100,100]}

00:16:01.100 --> 00:16:01.380
<v Speaker 2>card.

NOTE CONF {"raw":[100]}

00:16:01.380 --> 00:16:03.620
<v Speaker 2>So this is like, pick a card, any card.

NOTE CONF {"raw":[100,100,100,100,100,100,100,96,98]}

00:16:03.700 --> 00:16:05.980
<v Speaker 2>So we get Math.random to pick a random number.

NOTE CONF {"raw":[100,97,100,95,100,100,100,100,100]}

00:16:05.980 --> 00:16:09.870
<v Speaker 2>So when Math.random always returns a number between 0 and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:09.870 --> 00:16:10.380
<v Speaker 2>1.

NOTE CONF {"raw":[100]}

00:16:10.700 --> 00:16:13.420
<v Speaker 2>So if we multiply that by 13, we'll get a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:13.420 --> 00:16:15.380
<v Speaker 2>number between one.

NOTE CONF {"raw":[100,100,100]}

00:16:15.380 --> 00:16:15.980
<v Speaker 2>Well we get it.

NOTE CONF {"raw":[100,100,100,92]}

00:16:16.020 --> 00:16:19.140
<v Speaker 2>We'll get a double that's somewhere between zero and um

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,84]}

00:16:19.180 --> 00:16:20.300
<v Speaker 2>and 13.

NOTE CONF {"raw":[100,100]}

00:16:20.700 --> 00:16:23.260
<v Speaker 2>And then we cast that to an integer.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:16:23.260 --> 00:16:25.920
<v Speaker 2>And that will therefore give us an integer between 1

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:25.920 --> 00:16:28.100
<v Speaker 2>and 13, one and 12.

NOTE CONF {"raw":[100,100,100,100,100]}

00:16:28.740 --> 00:16:29.460
<v Speaker 2>Um, sorry.

NOTE CONF {"raw":[61,100]}

00:16:29.500 --> 00:16:30.500
<v Speaker 2>Zero and 12.

NOTE CONF {"raw":[100,100,100]}

00:16:32.180 --> 00:16:35.500
<v Speaker 2>Um, and that will therefore um, and if we look

NOTE CONF {"raw":[92,100,100,100,100,100,100,100,100,100]}

00:16:35.500 --> 00:16:37.900
<v Speaker 2>at whatever's in that rank, it will be randomly one

NOTE CONF {"raw":[100,100,100,100,100,91,91,100,100,100]}

00:16:37.900 --> 00:16:38.420
<v Speaker 2>of these.

NOTE CONF {"raw":[100,100]}

00:16:38.540 --> 00:16:40.260
<v Speaker 2>And then again we multiply by four.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:16:40.300 --> 00:16:43.710
<v Speaker 2>That will randomly help us pick one of the clubs,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,88]}

00:16:43.710 --> 00:16:44.550
<v Speaker 2>one of the suits.

NOTE CONF {"raw":[100,100,100,100]}

00:16:44.750 --> 00:16:46.310
<v Speaker 2>And then if we print it out every time, it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:16:46.310 --> 00:16:48.150
<v Speaker 2>will come up with something different depending on what random

NOTE CONF {"raw":[100,100,100,100,100,100,100,92,100,100]}

00:16:48.150 --> 00:16:49.230
<v Speaker 2>numbers are generated.

NOTE CONF {"raw":[100,100,100]}

00:16:51.110 --> 00:16:53.270
<v Speaker 2>Um, okay.

NOTE CONF {"raw":[100,100]}

00:16:53.310 --> 00:16:55.310
<v Speaker 2>So now let's look at IntelliJ.

NOTE CONF {"raw":[100,100,100,100,54,99]}

00:16:56.910 --> 00:16:59.030
<v Speaker 2>Um, I don't want Hello World anymore.

NOTE CONF {"raw":[100,100,100,100,76,76,100]}

00:16:59.110 --> 00:17:02.430
<v Speaker 2>What I want is cards.

NOTE CONF {"raw":[100,100,100,100,100]}

00:17:05.910 --> 00:17:06.310
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:17:06.430 --> 00:17:11.189
<v Speaker 2>So what we're doing here, we've got this nested for

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:11.189 --> 00:17:11.550
<v Speaker 2>loop.

NOTE CONF {"raw":[100]}

00:17:11.589 --> 00:17:11.870
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:17:11.910 --> 00:17:12.589
<v Speaker 2>So we're going.

NOTE CONF {"raw":[100,100,100]}

00:17:12.630 --> 00:17:15.510
<v Speaker 2>First of all we've got a counter called I that's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,60,100]}

00:17:15.510 --> 00:17:18.150
<v Speaker 2>going through number 0 to 13 stopping before it gets

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:18.150 --> 00:17:18.910
<v Speaker 2>to 13.

NOTE CONF {"raw":[100,100]}

00:17:19.470 --> 00:17:22.350
<v Speaker 2>And then within that it's going through another iterator J

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,97]}

00:17:22.390 --> 00:17:23.709
<v Speaker 2>which is going through four.

NOTE CONF {"raw":[100,100,100,100,86]}

00:17:23.949 --> 00:17:27.750
<v Speaker 2>And then every time we are populating this new array

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:27.750 --> 00:17:31.590
<v Speaker 2>called deck which we defined up here, um, and we're

NOTE CONF {"raw":[100,100,100,78,100,100,100,79,100,100]}

00:17:31.590 --> 00:17:34.390
<v Speaker 2>giving it a rank and a suit.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:17:35.270 --> 00:17:38.710
<v Speaker 2>So it's going to, it's going to say um, so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:38.830 --> 00:17:42.840
<v Speaker 2>if I is five and J is spades is going

NOTE CONF {"raw":[100,85,100,100,100,79,100,98,100,100]}

00:17:42.840 --> 00:17:45.560
<v Speaker 2>to be the five of spades.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:17:46.040 --> 00:17:46.440
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:17:46.480 --> 00:17:48.040
<v Speaker 2>So first of all have a think about this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:17:48.080 --> 00:17:50.040
<v Speaker 2>Is it is it going to print out things like

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:50.040 --> 00:17:50.200
<v Speaker 2>this.

NOTE CONF {"raw":[100]}

00:17:50.240 --> 00:17:52.440
<v Speaker 2>Is it going to be output one or is it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:52.440 --> 00:17:54.160
<v Speaker 2>going to be output two i.e. is it going to

NOTE CONF {"raw":[100,100,100,100,100,90,100,100,100,100]}

00:17:54.160 --> 00:17:56.760
<v Speaker 2>go through everything of the same number, going through the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:56.760 --> 00:17:59.040
<v Speaker 2>different suits and then move on to the next number,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:17:59.040 --> 00:18:00.840
<v Speaker 2>or is it going to go stick with a suit

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,82,100]}

00:18:00.840 --> 00:18:02.200
<v Speaker 2>and go through each number in there.

NOTE CONF {"raw":[100,100,100,100,100,96,78]}

00:18:02.200 --> 00:18:04.480
<v Speaker 2>So I'm just going to give you just a minute

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:04.480 --> 00:18:06.280
<v Speaker 2>to have a look at that and see if you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:06.280 --> 00:18:08.280
<v Speaker 2>can think what's going to happen there.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:18:16.600 --> 00:18:17.000
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:18:17.040 --> 00:18:20.880
<v Speaker 2>So who thinks it's going to be output one.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:18:21.040 --> 00:18:23.280
<v Speaker 2>I fix the number and go through the suits.

NOTE CONF {"raw":[78,96,98,100,100,100,100,100,100]}

00:18:25.400 --> 00:18:25.680
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:18:25.720 --> 00:18:27.360
<v Speaker 2>And who thinks it's going to be output two.

NOTE CONF {"raw":[100,100,100,93,100,100,100,100,100]}

00:18:29.600 --> 00:18:30.000
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:18:30.040 --> 00:18:30.920
<v Speaker 2>Quite mixed.

NOTE CONF {"raw":[100,100]}

00:18:31.480 --> 00:18:34.280
<v Speaker 2>So let's run and see okay.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:18:34.280 --> 00:18:35.520
<v Speaker 2>So it's going to be output one.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:18:35.520 --> 00:18:37.200
<v Speaker 2>It fixes the number and then it goes through the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,68,100]}

00:18:37.200 --> 00:18:37.440
<v Speaker 2>suits.

NOTE CONF {"raw":[98]}

00:18:37.480 --> 00:18:38.800
<v Speaker 2>Now why does it happen like this.

NOTE CONF {"raw":[100,100,100,95,100,100,100]}

00:18:38.880 --> 00:18:40.420
<v Speaker 2>Because this is the outer loop.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:18:40.460 --> 00:18:40.620
<v Speaker 2>Right.

NOTE CONF {"raw":[100]}

00:18:40.660 --> 00:18:44.260
<v Speaker 2>So first of all, we're we're we're choosing a rank.

NOTE CONF {"raw":[100,100,100,100,94,100,100,100,100,100]}

00:18:44.420 --> 00:18:47.020
<v Speaker 2>So we'll start off with rank two which is in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:18:47.020 --> 00:18:47.820
<v Speaker 2>position zero.

NOTE CONF {"raw":[100,100]}

00:18:47.860 --> 00:18:48.780
<v Speaker 2>Not it's not rank two.

NOTE CONF {"raw":[80,95,100,100,100]}

00:18:48.820 --> 00:18:50.980
<v Speaker 2>So the the value of the card is two.

NOTE CONF {"raw":[78,100,100,100,100,100,100,100,100]}

00:18:51.260 --> 00:18:54.020
<v Speaker 2>And then with this fix with them within this four

NOTE CONF {"raw":[100,100,100,100,97,98,54,100,100,58]}

00:18:54.020 --> 00:18:56.420
<v Speaker 2>loop we're going to go through every suit.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:18:56.540 --> 00:18:59.020
<v Speaker 2>And only when we've gone through the suit and we've

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,73]}

00:18:59.020 --> 00:19:01.060
<v Speaker 2>populated the deck with that suit, and we're going to

NOTE CONF {"raw":[100,100,100,100,100,100,96,96,100,100]}

00:19:01.060 --> 00:19:03.460
<v Speaker 2>come out of this inner for loop and go back

NOTE CONF {"raw":[100,100,100,100,98,49,100,100,100,100]}

00:19:03.460 --> 00:19:05.420
<v Speaker 2>to this for loop, where we'll iterate and go on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,96]}

00:19:05.460 --> 00:19:06.020
<v Speaker 2>to the three.

NOTE CONF {"raw":[96,100,100]}

00:19:06.020 --> 00:19:07.700
<v Speaker 2>So that's why it's happening that way.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:19:08.700 --> 00:19:09.140
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:19:09.300 --> 00:19:11.020
<v Speaker 2>So what do I want to show you about this.

NOTE CONF {"raw":[100,100,84,100,100,100,100,100,100,100]}

00:19:13.860 --> 00:19:14.300
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:19:14.340 --> 00:19:17.460
<v Speaker 2>So this is stuff I mean this is actually not

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:17.500 --> 00:19:19.460
<v Speaker 2>directly to do with arrays, but this is important stuff

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:19.460 --> 00:19:20.540
<v Speaker 2>you need to know in coding.

NOTE CONF {"raw":[100,100,100,100,95,95]}

00:19:20.540 --> 00:19:22.260
<v Speaker 2>So you can see it.

NOTE CONF {"raw":[100,100,100,100,93]}

00:19:22.420 --> 00:19:24.260
<v Speaker 2>Very often when we have arrays we might want to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:24.260 --> 00:19:24.940
<v Speaker 2>move stuff around.

NOTE CONF {"raw":[100,100,100]}

00:19:24.940 --> 00:19:27.060
<v Speaker 2>So we had an array of buildings last time.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:19:27.060 --> 00:19:29.340
<v Speaker 2>We might want to change the buildings around.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:19:29.820 --> 00:19:31.980
<v Speaker 2>We might want to change the names when they change,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:32.020 --> 00:19:34.780
<v Speaker 2>when they change the David Hume out of 40, George

NOTE CONF {"raw":[100,100,100,100,100,79,100,100,100,100]}

00:19:34.780 --> 00:19:36.660
<v Speaker 2>Square or whatever, we might want to change that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:19:36.660 --> 00:19:39.030
<v Speaker 2>But in a suit of cards, sorry, a pack of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:39.030 --> 00:19:39.270
<v Speaker 2>cards.

NOTE CONF {"raw":[100]}

00:19:39.270 --> 00:19:40.230
<v Speaker 2>We don't want to change things.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:40.230 --> 00:19:41.350
<v Speaker 2>These have been set forever.

NOTE CONF {"raw":[100,100,100,100,98]}

00:19:41.750 --> 00:19:43.230
<v Speaker 2>So we want to just nobody.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:19:43.270 --> 00:19:45.510
<v Speaker 2>We don't ever want anybody to mess around with what's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:45.550 --> 00:19:46.310
<v Speaker 2>actually there.

NOTE CONF {"raw":[100,100]}

00:19:46.510 --> 00:19:48.630
<v Speaker 2>So we can use the key word final.

NOTE CONF {"raw":[100,100,100,100,100,87,87,100]}

00:19:49.750 --> 00:19:50.150
<v Speaker 2>Oops.

NOTE CONF {"raw":[99]}

00:19:50.790 --> 00:19:51.150
<v Speaker 2>Okay.

NOTE CONF {"raw":[98]}

00:19:52.270 --> 00:19:52.470
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:19:52.510 --> 00:19:56.590
<v Speaker 2>And what this means is that you cannot change what's

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:19:56.590 --> 00:19:57.070
<v Speaker 2>in this array.

NOTE CONF {"raw":[100,100,100]}

00:19:57.110 --> 00:19:58.070
<v Speaker 2>This array is fixed.

NOTE CONF {"raw":[100,100,100,100]}

00:19:58.070 --> 00:20:00.630
<v Speaker 2>Those values will always be the values in that array.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:00.990 --> 00:20:01.430
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:20:01.990 --> 00:20:04.590
<v Speaker 2>Um, and the convention is when you, when you have

NOTE CONF {"raw":[86,100,100,100,100,100,100,100,100,100]}

00:20:04.590 --> 00:20:06.790
<v Speaker 2>something that's final, you give its name.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:20:06.830 --> 00:20:08.110
<v Speaker 2>Its name is in uppercase.

NOTE CONF {"raw":[78,100,100,100,100]}

00:20:08.990 --> 00:20:09.310
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:20:10.470 --> 00:20:13.150
<v Speaker 2>So this is saying this.

NOTE CONF {"raw":[100,100,100,100,100]}

00:20:13.150 --> 00:20:13.870
<v Speaker 2>These are the ranks.

NOTE CONF {"raw":[100,100,100,100]}

00:20:13.870 --> 00:20:14.910
<v Speaker 2>These will always be the ranks.

NOTE CONF {"raw":[100,100,100,100,100,98]}

00:20:14.910 --> 00:20:16.430
<v Speaker 2>And nobody will ever be able to change them.

NOTE CONF {"raw":[85,100,100,100,100,100,100,100,100]}

00:20:16.510 --> 00:20:18.550
<v Speaker 2>Now you see here that this now is in red.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:18.550 --> 00:20:21.150
<v Speaker 2>And what it's saying is that it doesn't it can't

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:21.150 --> 00:20:22.630
<v Speaker 2>resolve the symbol rank.

NOTE CONF {"raw":[100,100,100,100]}

00:20:22.750 --> 00:20:24.870
<v Speaker 2>This is because Java is case sensitive.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:20:25.030 --> 00:20:27.030
<v Speaker 2>So it will not connect this rank to that rank.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:27.070 --> 00:20:28.630
<v Speaker 2>You've got to have the cases matching.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:20:28.910 --> 00:20:32.790
<v Speaker 2>So I can just change those and that.

NOTE CONF {"raw":[100,100,100,100,100,100,98,94]}

00:20:32.830 --> 00:20:34.910
<v Speaker 2>So it doesn't make any difference to how it runs.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:34.910 --> 00:20:36.910
<v Speaker 2>It just makes a difference to what might happen in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:36.910 --> 00:20:37.630
<v Speaker 2>the future.

NOTE CONF {"raw":[100,100]}

00:20:38.520 --> 00:20:39.520
<v Speaker 2>Um.

NOTE CONF {"raw":[80]}

00:20:42.720 --> 00:20:43.200
<v Speaker 2>Okay.

NOTE CONF {"raw":[88]}

00:20:43.320 --> 00:20:45.920
<v Speaker 2>So also we have this number 52, right?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:20:45.960 --> 00:20:48.120
<v Speaker 2>What is the significance of number 52?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:20:48.720 --> 00:20:50.920
<v Speaker 2>Well, because we've been talking about cards, it's probably fairly

NOTE CONF {"raw":[100,100,100,100,100,100,85,100,100,100]}

00:20:50.920 --> 00:20:52.840
<v Speaker 2>obvious to you what that what the significance of that

NOTE CONF {"raw":[100,100,94,100,100,100,100,100,100,100]}

00:20:52.840 --> 00:20:53.360
<v Speaker 2>number is.

NOTE CONF {"raw":[100,100]}

00:20:53.360 --> 00:20:55.520
<v Speaker 2>It's it's how many cards you have in a deck

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:55.520 --> 00:20:58.760
<v Speaker 2>of cards in a deck of cards, but that's not

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:20:58.760 --> 00:20:59.720
<v Speaker 2>explained anywhere.

NOTE CONF {"raw":[100,100]}

00:20:59.720 --> 00:21:01.600
<v Speaker 2>And if you come back to this at another time

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:01.600 --> 00:21:04.000
<v Speaker 2>and you're looking at this one, you haven't been thinking

NOTE CONF {"raw":[77,100,100,100,100,88,100,100,100,100]}

00:21:04.000 --> 00:21:06.200
<v Speaker 2>about cards, you can be like, well, here's this number.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:06.200 --> 00:21:06.960
<v Speaker 2>What does that mean?

NOTE CONF {"raw":[100,100,100,100]}

00:21:07.040 --> 00:21:08.880
<v Speaker 2>This is what we call magic numbers.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:21:08.960 --> 00:21:10.200
<v Speaker 2>These are numbers that float about.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:21:10.200 --> 00:21:13.280
<v Speaker 2>And they're they're, um, they're meaning might be obvious to

NOTE CONF {"raw":[100,100,100,88,100,100,100,100,100,100]}

00:21:13.280 --> 00:21:15.840
<v Speaker 2>you when you're coding, but it's not necessarily immediately obvious

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:15.840 --> 00:21:17.120
<v Speaker 2>to anyone who's reading it.

NOTE CONF {"raw":[100,100,100,100,100]}

00:21:17.120 --> 00:21:19.480
<v Speaker 2>So you want to get rid of magic numbers.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:21:19.480 --> 00:21:22.560
<v Speaker 2>You want to explain what these numbers are instead.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,88]}

00:21:22.640 --> 00:21:25.360
<v Speaker 2>So what we're going to do here is we're going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:25.360 --> 00:21:28.000
<v Speaker 2>to we're going to have an integer and we're going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:28.000 --> 00:21:29.080
<v Speaker 2>to call it card.

NOTE CONF {"raw":[100,100,100,100]}

00:21:29.600 --> 00:21:33.360
<v Speaker 2>And this integer is going to be rank times length.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:34.120 --> 00:21:34.360
<v Speaker 2>Sorry.

NOTE CONF {"raw":[100]}

00:21:34.400 --> 00:21:39.220
<v Speaker 2>The length of rank Multiplied by the length of suit.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,85]}

00:21:41.820 --> 00:21:42.260
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:21:42.380 --> 00:21:44.260
<v Speaker 2>And actually this is going to be final.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:21:44.300 --> 00:21:47.980
<v Speaker 2>So so card this is the number of cards.

NOTE CONF {"raw":[100,98,95,100,100,100,100,100,100]}

00:21:47.980 --> 00:21:49.340
<v Speaker 2>And this is 52 right.

NOTE CONF {"raw":[100,100,100,100,97]}

00:21:49.380 --> 00:21:51.020
<v Speaker 2>What we're doing here is exactly what we did in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:21:51.020 --> 00:21:53.460
<v Speaker 2>our heads here multiplying the rank by the suit.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,96]}

00:21:53.460 --> 00:21:54.620
<v Speaker 2>So we get 52.

NOTE CONF {"raw":[100,100,100,100]}

00:21:54.780 --> 00:21:56.620
<v Speaker 2>But it's explaining where that number comes from.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:21:56.620 --> 00:21:58.020
<v Speaker 2>And this we also want to make final.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:21:58.020 --> 00:22:01.820
<v Speaker 2>There's always 52 cards in a pack of cards.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:22:02.180 --> 00:22:03.340
<v Speaker 2>So we've made that uppercase.

NOTE CONF {"raw":[100,56,93,92,97]}

00:22:04.940 --> 00:22:08.900
<v Speaker 2>And instead of saying 52 here we'll say card okay.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:08.940 --> 00:22:10.900
<v Speaker 2>So again this is just tidying it up so that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:10.900 --> 00:22:13.900
<v Speaker 2>you know you can always figure out what's going on

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:13.900 --> 00:22:14.340
<v Speaker 2>with card.

NOTE CONF {"raw":[100,100]}

00:22:14.340 --> 00:22:15.860
<v Speaker 2>This is about good practice.

NOTE CONF {"raw":[100,100,100,100,100]}

00:22:16.940 --> 00:22:17.500
<v Speaker 2>All right.

NOTE CONF {"raw":[100,100]}

00:22:19.300 --> 00:22:21.300
<v Speaker 2>So those are just a couple of points I wanted

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:21.300 --> 00:22:22.100
<v Speaker 2>to point out.

NOTE CONF {"raw":[100,100,100]}

00:22:22.100 --> 00:22:24.180
<v Speaker 2>And this is the explanation in the slides.

NOTE CONF {"raw":[100,100,100,100,100,97,100,100]}

00:22:24.180 --> 00:22:26.420
<v Speaker 2>It's exactly what we've already gone through.

NOTE CONF {"raw":[73,100,100,100,100,100,100]}

00:22:26.980 --> 00:22:32.500
<v Speaker 2>Um so don't so generally any number in there should

NOTE CONF {"raw":[97,100,67,100,100,100,100,100,100,100]}

00:22:32.500 --> 00:22:34.820
<v Speaker 2>be replaced by some explanation of what it's doing.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:22:34.820 --> 00:22:36.470
<v Speaker 2>Are you working it out so you can see.

NOTE CONF {"raw":[92,90,100,100,100,100,100,100,100]}

00:22:36.670 --> 00:22:38.390
<v Speaker 2>Don't overdo it if you've got a zero.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:22:38.430 --> 00:22:39.550
<v Speaker 2>You know, that's fine.

NOTE CONF {"raw":[100,100,100,100]}

00:22:40.150 --> 00:22:42.710
<v Speaker 2>But generally you don't want to have numbers floating about,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:44.030 --> 00:22:45.990
<v Speaker 2>uh, readability and maintainability.

NOTE CONF {"raw":[94,100,100,100]}

00:22:46.950 --> 00:22:47.830
<v Speaker 2>Um, shuffling.

NOTE CONF {"raw":[98,100]}

00:22:47.830 --> 00:22:49.190
<v Speaker 2>I think I'm going to leave this to you to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:49.190 --> 00:22:50.710
<v Speaker 2>have a look at as an extra example, if you

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:22:50.710 --> 00:22:53.230
<v Speaker 2>like, this is just doing more stuff with integers.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:22:53.510 --> 00:22:55.270
<v Speaker 2>There's nothing especially different here.

NOTE CONF {"raw":[100,100,100,100,100]}

00:22:55.870 --> 00:22:56.550
<v Speaker 2>Um, okay.

NOTE CONF {"raw":[97,100]}

00:22:56.590 --> 00:22:58.750
<v Speaker 2>So we'll look briefly at two dimensional arrays.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:22:58.790 --> 00:22:59.030
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:22:59.070 --> 00:23:02.630
<v Speaker 2>So that's um, where you've got not just one kind

NOTE CONF {"raw":[100,100,79,100,100,100,100,100,100,100]}

00:23:02.630 --> 00:23:04.150
<v Speaker 2>of data but multiple data.

NOTE CONF {"raw":[100,100,100,100,100]}

00:23:04.150 --> 00:23:07.310
<v Speaker 2>So an example is students and grades.

NOTE CONF {"raw":[100,100,100,100,100,100,91]}

00:23:07.310 --> 00:23:08.830
<v Speaker 2>So all students do multiple.

NOTE CONF {"raw":[100,100,100,100,93]}

00:23:08.870 --> 00:23:10.670
<v Speaker 2>So what courses are students enrolled on.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:23:10.710 --> 00:23:13.590
<v Speaker 2>There's loads and loads of courses and most students have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:13.590 --> 00:23:14.350
<v Speaker 2>more than one course.

NOTE CONF {"raw":[100,100,100,100]}

00:23:14.350 --> 00:23:16.350
<v Speaker 2>So you've got different dimensions of data.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:23:16.870 --> 00:23:19.470
<v Speaker 2>Um and there's loads and there's loads and loads of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:19.470 --> 00:23:22.470
<v Speaker 2>situations where you have it's like table data essentially.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:23:23.590 --> 00:23:25.910
<v Speaker 2>So in, in maths, do you think of this as

NOTE CONF {"raw":[88,61,100,100,100,100,100,100,100,100]}

00:23:25.910 --> 00:23:28.390
<v Speaker 2>an abstract in Java this is a 2D array.

NOTE CONF {"raw":[100,100,92,100,100,100,100,100,100]}

00:23:28.750 --> 00:23:34.690
<v Speaker 2>So here for example we have um a double array

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:34.690 --> 00:23:38.850
<v Speaker 2>of doubles where we just have these values and.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,75]}

00:23:39.730 --> 00:23:39.970
<v Speaker 2>Okay.

NOTE CONF {"raw":[99]}

00:23:40.010 --> 00:23:43.250
<v Speaker 2>So in order to access it you would.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:23:43.290 --> 00:23:44.130
<v Speaker 2>Exactly the same.

NOTE CONF {"raw":[100,100,100]}

00:23:44.130 --> 00:23:46.410
<v Speaker 2>You use the square brackets to say what you're talking

NOTE CONF {"raw":[100,98,100,100,100,100,100,100,100,100]}

00:23:46.410 --> 00:23:46.930
<v Speaker 2>about.

NOTE CONF {"raw":[100]}

00:23:47.810 --> 00:23:51.890
<v Speaker 2>And the first thing you look at, the first number

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:23:51.890 --> 00:23:53.050
<v Speaker 2>you put in there is the row.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:23:53.330 --> 00:23:54.690
<v Speaker 2>And the second is the column.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:23:54.770 --> 00:23:56.330
<v Speaker 2>So if we use the short term with the.

NOTE CONF {"raw":[100,100,100,100,73,100,100,100,87]}

00:23:56.370 --> 00:23:58.930
<v Speaker 2>With the two double brackets, if you're first of all

NOTE CONF {"raw":[100,100,100,100,100,83,95,100,100,100]}

00:23:58.930 --> 00:24:00.890
<v Speaker 2>you give the row and then you give the column.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:01.130 --> 00:24:03.890
<v Speaker 2>And as always of course things start at zero.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:24:04.130 --> 00:24:06.010
<v Speaker 2>So what this is doing here is this is.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:24:06.050 --> 00:24:07.730
<v Speaker 2>This is initiating a new array.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:24:07.730 --> 00:24:09.730
<v Speaker 2>And you declare it in just the same way with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:09.730 --> 00:24:10.770
<v Speaker 2>the code word new.

NOTE CONF {"raw":[100,93,93,100]}

00:24:10.970 --> 00:24:13.370
<v Speaker 2>The kind of the thing that says what kind of.

NOTE CONF {"raw":[100,100,40,100,100,100,100,100,100,100]}

00:24:13.410 --> 00:24:16.690
<v Speaker 2>Thing you've got in there, and then the length of

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,96,100]}

00:24:17.130 --> 00:24:18.090
<v Speaker 2>each of the arrays.

NOTE CONF {"raw":[100,100,100,100]}

00:24:18.090 --> 00:24:19.450
<v Speaker 2>And they don't need to be square.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:24:19.450 --> 00:24:21.130
<v Speaker 2>So these don't need to be the same here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:24:21.130 --> 00:24:24.730
<v Speaker 2>We've got this has got 1010 rows but only three

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:24:24.730 --> 00:24:25.290
<v Speaker 2>columns.

NOTE CONF {"raw":[100]}

00:24:25.650 --> 00:24:27.410
<v Speaker 2>And then what this is going what this is doing

NOTE CONF {"raw":[100,100,100,100,100,98,100,100,100,100]}

00:24:27.410 --> 00:24:31.610
<v Speaker 2>is going through and setting everything to 0.0.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:24:31.850 --> 00:24:34.260
<v Speaker 2>Although we don't need to do that because it initialises

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,91,100]}

00:24:34.260 --> 00:24:34.860
<v Speaker 2>that anyway.

NOTE CONF {"raw":[100,100]}

00:24:36.700 --> 00:24:37.260
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:24:41.300 --> 00:24:41.620
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:24:41.660 --> 00:24:42.340
<v Speaker 2>So each.

NOTE CONF {"raw":[100,100]}

00:24:44.980 --> 00:24:45.300
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:24:45.340 --> 00:24:49.100
<v Speaker 2>So and here you've got the curly brackets notations again.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,95]}

00:24:49.220 --> 00:24:51.740
<v Speaker 2>So we've got we're declaring something called P which is

NOTE CONF {"raw":[100,100,100,100,100,100,100,73,100,100]}

00:24:51.780 --> 00:24:54.860
<v Speaker 2>a um a double array of doubles.

NOTE CONF {"raw":[77,61,100,100,100,100,100]}

00:24:55.100 --> 00:24:57.180
<v Speaker 2>And so we start off with the square bracket with

NOTE CONF {"raw":[100,100,100,100,100,100,86,100,98,38]}

00:24:57.180 --> 00:24:58.540
<v Speaker 2>sorry with the curly braces.

NOTE CONF {"raw":[100,100,100,100,100]}

00:24:59.220 --> 00:25:01.740
<v Speaker 2>Um, which shows that this is an array.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:25:02.340 --> 00:25:03.820
<v Speaker 2>Um, as, as we've seen before.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:25:03.820 --> 00:25:06.340
<v Speaker 2>And then every element where before, for example, in the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:06.340 --> 00:25:09.980
<v Speaker 2>buildings, we had that as strings here it's another array.

NOTE CONF {"raw":[100,100,100,100,100,100,100,94,100,100]}

00:25:09.980 --> 00:25:11.580
<v Speaker 2>So it's just the same notation.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:25:13.380 --> 00:25:13.660
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:25:13.700 --> 00:25:15.620
<v Speaker 2>So what is P13.

NOTE CONF {"raw":[100,100,100,65]}

00:25:15.900 --> 00:25:17.180
<v Speaker 2>I think we've got a question.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:25:17.180 --> 00:25:18.420
<v Speaker 2>Woke up about that.

NOTE CONF {"raw":[78,87,100,100]}

00:25:20.020 --> 00:25:20.500
<v Speaker 2>Yes.

NOTE CONF {"raw":[100]}

00:25:20.660 --> 00:25:20.940
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:25:20.980 --> 00:25:22.460
<v Speaker 2>So what is P13.

NOTE CONF {"raw":[100,100,100,96]}

00:25:22.500 --> 00:25:24.060
<v Speaker 2>Have a look at that and see if you if

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:24.100 --> 00:25:26.180
<v Speaker 2>you ask it to return P13.

NOTE CONF {"raw":[100,100,100,100,100,96]}

00:25:26.220 --> 00:25:27.340
<v Speaker 2>What is it going to return.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:25:36.470 --> 00:25:38.550
<v Speaker 2>I'll give you another few seconds to do that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:25:43.750 --> 00:25:44.110
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:25:44.150 --> 00:25:45.150
<v Speaker 2>We've got quite a good response.

NOTE CONF {"raw":[73,100,100,98,100,100]}

00:25:45.150 --> 00:25:47.470
<v Speaker 2>So the most popular response is 0.32.

NOTE CONF {"raw":[100,100,100,100,100,100,97]}

00:25:49.110 --> 00:25:49.430
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:25:49.470 --> 00:25:52.070
<v Speaker 2>So we're looking at row one which is the second

NOTE CONF {"raw":[100,100,100,100,82,100,100,100,100,100]}

00:25:52.070 --> 00:25:54.470
<v Speaker 2>row down because the top row will be row zero.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:25:55.190 --> 00:25:57.350
<v Speaker 2>And then so when we look at the row first

NOTE CONF {"raw":[100,100,96,93,100,100,100,100,100,100]}

00:25:57.350 --> 00:26:01.790
<v Speaker 2>and then the column which is the fourth one because

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:01.790 --> 00:26:03.390
<v Speaker 2>the fourth one is at index three.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:26:03.390 --> 00:26:05.230
<v Speaker 2>And that gives us 0.32.

NOTE CONF {"raw":[100,100,100,100,98]}

00:26:06.110 --> 00:26:06.510
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:26:08.830 --> 00:26:11.270
<v Speaker 2>Uh this is another example of matrix addition.

NOTE CONF {"raw":[68,100,100,100,100,61,100,99]}

00:26:11.670 --> 00:26:13.790
<v Speaker 2>Um, so have a look at that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:26:13.830 --> 00:26:15.990
<v Speaker 2>It's really just the same thing going on here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:26:16.190 --> 00:26:19.070
<v Speaker 2>Matrix addition is I can't even remember how to do

NOTE CONF {"raw":[100,77,100,100,100,73,100,100,100,100]}

00:26:19.110 --> 00:26:19.870
<v Speaker 2>matrix addition.

NOTE CONF {"raw":[100,100]}

00:26:19.870 --> 00:26:21.870
<v Speaker 2>But this tells you you have to find what's in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:21.870 --> 00:26:25.110
<v Speaker 2>each column, and then you're creating this new array by

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:25.230 --> 00:26:26.150
<v Speaker 2>adding things up.

NOTE CONF {"raw":[100,100,100]}

00:26:26.190 --> 00:26:27.310
<v Speaker 2>So have a look at that.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:26:29.070 --> 00:26:30.070
<v Speaker 2>Matrix multiplication.

NOTE CONF {"raw":[100,100]}

00:26:30.070 --> 00:26:32.210
<v Speaker 2>The maths is slightly more complicated, but the idea with

NOTE CONF {"raw":[100,97,100,100,100,100,100,100,100,100]}

00:26:32.210 --> 00:26:33.730
<v Speaker 2>the arrays is exactly the same.

NOTE CONF {"raw":[100,94,100,100,100,100]}

00:26:34.570 --> 00:26:35.730
<v Speaker 2>Enhanced for loops.

NOTE CONF {"raw":[90,100,100]}

00:26:35.730 --> 00:26:37.570
<v Speaker 2>We already looked at this.

NOTE CONF {"raw":[100,100,100,100,100]}

00:26:37.570 --> 00:26:40.290
<v Speaker 2>Let's just look at another one, particularly because we were

NOTE CONF {"raw":[76,100,100,100,100,100,100,100,100,100]}

00:26:40.290 --> 00:26:41.210
<v Speaker 2>asked about that.

NOTE CONF {"raw":[100,100,100]}

00:26:41.610 --> 00:26:42.850
<v Speaker 2>But I think that's going to.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:26:44.050 --> 00:26:45.930
<v Speaker 2>Are we going to have we'll have more examples of

NOTE CONF {"raw":[43,43,100,100,100,100,100,100,100,100]}

00:26:45.930 --> 00:26:46.290
<v Speaker 2>this later.

NOTE CONF {"raw":[100,100]}

00:26:46.290 --> 00:26:46.650
<v Speaker 2>Anyway.

NOTE CONF {"raw":[100]}

00:26:46.690 --> 00:26:47.890
<v Speaker 2>Here we've got a for loop.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:26:48.010 --> 00:26:50.370
<v Speaker 2>We're going through everything in the deck and we're printing

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:50.370 --> 00:26:51.370
<v Speaker 2>out whatever it is.

NOTE CONF {"raw":[100,100,100,100]}

00:26:51.770 --> 00:26:54.650
<v Speaker 2>Um, but again, we're just doing the same thing for

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,100,100]}

00:26:54.650 --> 00:26:55.290
<v Speaker 2>every element.

NOTE CONF {"raw":[100,100]}

00:26:55.290 --> 00:26:56.770
<v Speaker 2>So we don't need this complex thing.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:26:56.770 --> 00:26:59.570
<v Speaker 2>We just need to say for every element in in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:26:59.730 --> 00:27:01.330
<v Speaker 2>deck, do the same thing.

NOTE CONF {"raw":[100,100,100,100,100]}

00:27:01.650 --> 00:27:05.050
<v Speaker 2>Um, so IntelliJ is going to do this for us

NOTE CONF {"raw":[60,100,99,100,100,100,100,100,100,100]}

00:27:05.050 --> 00:27:06.530
<v Speaker 2>because it's nice and helpful.

NOTE CONF {"raw":[100,100,100,100,100]}

00:27:06.770 --> 00:27:09.330
<v Speaker 2>So I look at the message this is a yellow

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:09.330 --> 00:27:09.770
<v Speaker 2>message.

NOTE CONF {"raw":[100]}

00:27:09.770 --> 00:27:11.690
<v Speaker 2>It's happy to run this, but it's telling me this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:11.690 --> 00:27:12.930
<v Speaker 2>is not great practice.

NOTE CONF {"raw":[100,100,100,100]}

00:27:13.370 --> 00:27:15.250
<v Speaker 2>Um, and then it's telling me what I can do

NOTE CONF {"raw":[77,100,100,100,100,100,100,100,100,100]}

00:27:15.290 --> 00:27:16.890
<v Speaker 2>to make it better if I can.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:27:17.050 --> 00:27:17.610
<v Speaker 2>Actually.

NOTE CONF {"raw":[100]}

00:27:18.570 --> 00:27:19.090
<v Speaker 2>There we go.

NOTE CONF {"raw":[100,100,100]}

00:27:19.330 --> 00:27:21.130
<v Speaker 2>It's saying, do you want me to replace this with

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,88]}

00:27:21.130 --> 00:27:21.970
<v Speaker 2>the hearts for loop?

NOTE CONF {"raw":[97,61,100,100]}

00:27:22.010 --> 00:27:24.490
<v Speaker 2>Yes I do, so here it's giving.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:27:24.490 --> 00:27:25.970
<v Speaker 2>This doesn't matter what it's calling it.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:27:25.970 --> 00:27:27.610
<v Speaker 2>It's saying there's something called S and deck.

NOTE CONF {"raw":[62,100,100,100,100,97,98,62]}

00:27:27.610 --> 00:27:29.130
<v Speaker 2>It knows that this is going to be a string

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:29.130 --> 00:27:29.970
<v Speaker 2>because I've told it here.

NOTE CONF {"raw":[100,100,100,100,100]}

00:27:29.970 --> 00:27:32.420
<v Speaker 2>her that deck is an array of strings, and you

NOTE CONF {"raw":[75,100,97,100,100,100,100,100,100,100]}

00:27:32.420 --> 00:27:35.060
<v Speaker 2>just need to go through every element of deck and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:35.060 --> 00:27:36.180
<v Speaker 2>print that element out.

NOTE CONF {"raw":[100,100,100,100]}

00:27:36.180 --> 00:27:37.740
<v Speaker 2>That's what this for loop is saying.

NOTE CONF {"raw":[100,100,100,72,100,100,100]}

00:27:38.540 --> 00:27:40.180
<v Speaker 2>Okay, so if that's still not clear, you'll get a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:27:40.180 --> 00:27:41.540
<v Speaker 2>bit of practice at this in the labs.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:27:41.540 --> 00:27:46.100
<v Speaker 2>And the tutorials should become clearer as you practice.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:27:50.740 --> 00:27:52.380
<v Speaker 2>Okay, I think we've said this all.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:27:52.380 --> 00:27:57.820
<v Speaker 2>I don't want to um, label this.

NOTE CONF {"raw":[100,100,100,100,99,87,100]}

00:27:58.380 --> 00:27:59.820
<v Speaker 2>Here's another example.

NOTE CONF {"raw":[100,100,100]}

00:28:01.380 --> 00:28:04.380
<v Speaker 2>Um, we're just printing out the words.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:28:06.180 --> 00:28:06.620
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:28:06.660 --> 00:28:11.300
<v Speaker 2>So, um, things we looked at, we looked at arrays.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:11.340 --> 00:28:13.420
<v Speaker 2>Rays are super, super common ways of storing data.

NOTE CONF {"raw":[48,83,100,100,100,100,100,100,100]}

00:28:13.460 --> 00:28:14.500
<v Speaker 2>You're uses all the time.

NOTE CONF {"raw":[84,74,100,100,100]}

00:28:14.500 --> 00:28:16.100
<v Speaker 2>And they don't have to be single arrays.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:28:16.100 --> 00:28:19.340
<v Speaker 2>They can be, um, multiple multi-dimensional.

NOTE CONF {"raw":[100,100,100,95,100,66]}

00:28:19.740 --> 00:28:22.060
<v Speaker 2>Um, and if you have local contents that you don't

NOTE CONF {"raw":[100,100,100,100,100,100,81,100,100,100]}

00:28:22.060 --> 00:28:24.260
<v Speaker 2>want to change, use the word final and use for

NOTE CONF {"raw":[100,100,100,100,98,100,100,100,100,94]}

00:28:24.260 --> 00:28:26.100
<v Speaker 2>loops unless you've got a good reason not to.

NOTE CONF {"raw":[100,100,98,98,100,100,100,100,100]}

00:28:26.980 --> 00:28:27.900
<v Speaker 2>All right.

NOTE CONF {"raw":[99,99]}

00:28:29.430 --> 00:28:31.910
<v Speaker 2>So let's have a look at functions.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:28:32.390 --> 00:28:34.110
<v Speaker 2>Functions or static methods.

NOTE CONF {"raw":[100,100,100,100]}

00:28:34.150 --> 00:28:36.390
<v Speaker 2>I mean technically in Java.

NOTE CONF {"raw":[100,100,100,100,100]}

00:28:36.430 --> 00:28:38.070
<v Speaker 2>Static methods is a better.

NOTE CONF {"raw":[100,100,100,100,100]}

00:28:38.550 --> 00:28:39.550
<v Speaker 2>Is more correct.

NOTE CONF {"raw":[80,100,100]}

00:28:39.670 --> 00:28:42.110
<v Speaker 2>But you will find that generally people just refer to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:42.110 --> 00:28:42.870
<v Speaker 2>them as functions.

NOTE CONF {"raw":[100,100,100]}

00:28:42.870 --> 00:28:44.510
<v Speaker 2>Functions and methods are the same thing.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:28:44.510 --> 00:28:46.070
<v Speaker 2>It's just different terminology.

NOTE CONF {"raw":[98,100,100,100]}

00:28:48.030 --> 00:28:49.430
<v Speaker 2>So why are they so helpful.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:28:49.510 --> 00:28:51.270
<v Speaker 2>So first of all we're going to look at this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:28:51.270 --> 00:28:51.830
<v Speaker 2>program.

NOTE CONF {"raw":[100]}

00:28:51.870 --> 00:28:52.070
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:28:52.110 --> 00:28:54.590
<v Speaker 2>So I'm going to look at this in IntelliJ.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:28:56.590 --> 00:28:59.110
<v Speaker 2>Here is somewhere.

NOTE CONF {"raw":[100,100,100]}

00:28:59.150 --> 00:28:59.710
<v Speaker 2>Let's see.

NOTE CONF {"raw":[100,100]}

00:29:02.270 --> 00:29:04.350
<v Speaker 2>This is called duplication.

NOTE CONF {"raw":[100,100,100,100]}

00:29:06.110 --> 00:29:07.830
<v Speaker 2>This is actually not a very good name for this

NOTE CONF {"raw":[74,74,100,100,100,100,100,100,100,100]}

00:29:07.830 --> 00:29:09.750
<v Speaker 2>duplication I should have given this something clearer.

NOTE CONF {"raw":[100,100,100,100,100,43,100,100]}

00:29:09.830 --> 00:29:13.150
<v Speaker 2>But here we've got something that works out stuff around

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:13.150 --> 00:29:13.630
<v Speaker 2>pocket money.

NOTE CONF {"raw":[100,100]}

00:29:13.630 --> 00:29:15.230
<v Speaker 2>So we've got names of kids.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:29:15.430 --> 00:29:17.390
<v Speaker 2>We've got how much they get, pocket money per week

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:17.390 --> 00:29:18.950
<v Speaker 2>and how much they're trying to save.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:29:19.230 --> 00:29:22.670
<v Speaker 2>So then it's looking at how many weeks it's going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:22.670 --> 00:29:24.710
<v Speaker 2>to take them to save the amount that they want

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:24.710 --> 00:29:25.230
<v Speaker 2>to save.

NOTE CONF {"raw":[100,100]}

00:29:25.430 --> 00:29:27.350
<v Speaker 2>Now you can see there's a lot of repetition here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:27.770 --> 00:29:29.370
<v Speaker 2>So I thought, this is quite long.

NOTE CONF {"raw":[92,70,70,100,100,100,100]}

00:29:29.370 --> 00:29:31.130
<v Speaker 2>There's a lot of lines in here and it's quite

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:31.130 --> 00:29:33.050
<v Speaker 2>long, but there's also lots of repetition.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:29:33.050 --> 00:29:34.690
<v Speaker 2>So I'm adding names together.

NOTE CONF {"raw":[100,100,100,100,100]}

00:29:35.170 --> 00:29:37.010
<v Speaker 2>Um, so let's look at this first of all.

NOTE CONF {"raw":[79,100,100,100,100,100,100,100,100]}

00:29:37.130 --> 00:29:39.890
<v Speaker 2>So instead of doing this just adding names together here,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:39.890 --> 00:29:41.570
<v Speaker 2>this is kind of annoying because we're doing it in

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:41.570 --> 00:29:42.330
<v Speaker 2>two places.

NOTE CONF {"raw":[100,100]}

00:29:42.530 --> 00:29:43.370
<v Speaker 2>What I can do.

NOTE CONF {"raw":[100,100,100,100]}

00:29:44.570 --> 00:29:47.650
<v Speaker 2>All right I know it's uppercase is I can create

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:47.650 --> 00:29:48.370
<v Speaker 2>a method.

NOTE CONF {"raw":[100,100]}

00:29:48.410 --> 00:29:48.650
<v Speaker 2>Right.

NOTE CONF {"raw":[93]}

00:29:48.690 --> 00:29:51.290
<v Speaker 2>So instead of saying I'm going to do this by

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:51.290 --> 00:29:54.770
<v Speaker 2>adding these two, I'm going to create a method that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:29:54.770 --> 00:29:56.570
<v Speaker 2>is called join names.

NOTE CONF {"raw":[100,100,100,100]}

00:29:57.010 --> 00:29:57.330
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:29:57.370 --> 00:30:00.770
<v Speaker 2>So I'm going to get rid of that join names.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:01.370 --> 00:30:02.970
<v Speaker 2>And I'm going to pass it in the names I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:02.970 --> 00:30:07.530
<v Speaker 2>want it to join which is jock and MacInnes.

NOTE CONF {"raw":[100,100,100,100,100,100,76,100,72]}

00:30:09.210 --> 00:30:12.730
<v Speaker 2>Um, and I don't need this anymore because I've got

NOTE CONF {"raw":[99,100,100,100,100,100,100,100,100,100]}

00:30:12.730 --> 00:30:13.090
<v Speaker 2>a method.

NOTE CONF {"raw":[100,100]}

00:30:13.090 --> 00:30:15.090
<v Speaker 2>So this is going to go off and do that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:15.090 --> 00:30:15.570
<v Speaker 2>for me.

NOTE CONF {"raw":[100,100]}

00:30:15.690 --> 00:30:17.730
<v Speaker 2>The stuff that I was doing above is now going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:17.730 --> 00:30:19.690
<v Speaker 2>to be done in a separate method, and I can

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:19.690 --> 00:30:24.610
<v Speaker 2>put this in here as well, join names and then

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:24.610 --> 00:30:25.810
<v Speaker 2>put these names in.

NOTE CONF {"raw":[100,100,100,100]}

00:30:35.900 --> 00:30:36.860
<v Speaker 2>Get rid of that.

NOTE CONF {"raw":[100,100,100,100]}

00:30:40.380 --> 00:30:42.980
<v Speaker 2>Okay, so now you can see those already look a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:42.980 --> 00:30:43.620
<v Speaker 2>little bit neater.

NOTE CONF {"raw":[100,100,100]}

00:30:43.620 --> 00:30:45.340
<v Speaker 2>And I'm already using the same method to do to

NOTE CONF {"raw":[100,100,100,100,100,100,74,100,100,73]}

00:30:45.500 --> 00:30:46.780
<v Speaker 2>two different things which is nice.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:30:47.300 --> 00:30:50.460
<v Speaker 2>It's got this in red of course because I'm calling

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:50.460 --> 00:30:52.260
<v Speaker 2>a method, but it doesn't know what this method is.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:52.260 --> 00:30:54.180
<v Speaker 2>And I can't call a method that doesn't exist.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:30:54.260 --> 00:30:55.580
<v Speaker 2>So if I want to do this, I need to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:30:55.620 --> 00:30:57.980
<v Speaker 2>first create my method before I can run this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:30:57.980 --> 00:31:00.340
<v Speaker 2>So it's quite common practice to put in methods that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:00.340 --> 00:31:02.260
<v Speaker 2>don't exist that you know you want to create and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:02.260 --> 00:31:04.300
<v Speaker 2>then create them afterwards, but obviously you can't run it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:04.300 --> 00:31:05.500
<v Speaker 2>until you have created them.

NOTE CONF {"raw":[100,100,100,100,100]}

00:31:06.060 --> 00:31:06.540
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:31:06.820 --> 00:31:10.700
<v Speaker 2>So I'm so methods they can go anywhere in a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:10.700 --> 00:31:13.980
<v Speaker 2>class file as long as it's before they're called.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:31:14.140 --> 00:31:14.300
<v Speaker 2>Right.

NOTE CONF {"raw":[100]}

00:31:14.340 --> 00:31:17.420
<v Speaker 2>So they've got to be physically before they're called.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:31:18.740 --> 00:31:20.860
<v Speaker 2>So main will go at the bottom generally because it's

NOTE CONF {"raw":[100,63,100,100,97,100,100,100,100,97]}

00:31:20.860 --> 00:31:22.740
<v Speaker 2>calling things that you need to define elsewhere.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:23.300 --> 00:31:25.870
<v Speaker 2>So I'm going to call a method called join names

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:25.870 --> 00:31:26.670
<v Speaker 2>and what?

NOTE CONF {"raw":[100,100]}

00:31:26.830 --> 00:31:27.230
<v Speaker 2>What?

NOTE CONF {"raw":[67]}

00:31:27.270 --> 00:31:27.710
<v Speaker 2>What is this?

NOTE CONF {"raw":[100,100,100]}

00:31:27.750 --> 00:31:28.910
<v Speaker 2>What is the input going to be?

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:31:28.950 --> 00:31:32.470
<v Speaker 2>It's going to be first name and last name.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:31:33.790 --> 00:31:37.510
<v Speaker 2>Okay, now, as with all everything in Java, I have

NOTE CONF {"raw":[98,100,100,100,100,100,100,100,100,100]}

00:31:37.510 --> 00:31:39.670
<v Speaker 2>to tell it what type these things are going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:39.670 --> 00:31:39.790
<v Speaker 2>be.

NOTE CONF {"raw":[100]}

00:31:39.790 --> 00:31:41.350
<v Speaker 2>So these are both going to be strings.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:43.030 --> 00:31:45.350
<v Speaker 2>And with all methods I need to give it certain

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:45.350 --> 00:31:46.110
<v Speaker 2>information about it.

NOTE CONF {"raw":[100,100,100]}

00:31:46.110 --> 00:31:48.630
<v Speaker 2>So I want this to be a public method and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:31:48.630 --> 00:31:49.470
<v Speaker 2>it's going to be static.

NOTE CONF {"raw":[100,100,100,100,100]}

00:31:49.470 --> 00:31:51.070
<v Speaker 2>We're going to look later on what that means.

NOTE CONF {"raw":[100,100,100,100,98,78,100,100,100]}

00:31:51.110 --> 00:31:52.430
<v Speaker 2>Now what do I want to do.

NOTE CONF {"raw":[100,100,100,100,100,100,49]}

00:31:52.630 --> 00:31:54.990
<v Speaker 2>What do I want this method to return.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:31:55.830 --> 00:31:57.190
<v Speaker 2>Do I want it to turn anything?

NOTE CONF {"raw":[100,100,100,88,100,93,100]}

00:31:58.350 --> 00:31:59.830
<v Speaker 2>Yeah, I want it to return a string.

NOTE CONF {"raw":[97,100,100,100,100,100,100,100]}

00:32:00.030 --> 00:32:00.270
<v Speaker 2>Right.

NOTE CONF {"raw":[92]}

00:32:00.270 --> 00:32:02.070
<v Speaker 2>That's kind of obvious because we're getting a name out

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:02.070 --> 00:32:02.230
<v Speaker 2>of it.

NOTE CONF {"raw":[100,100]}

00:32:02.230 --> 00:32:04.590
<v Speaker 2>But we can also see here we are assigning it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:04.590 --> 00:32:06.030
<v Speaker 2>to something that's a string.

NOTE CONF {"raw":[100,100,100,100,100]}

00:32:06.030 --> 00:32:07.670
<v Speaker 2>So what we're saying is call this name, this is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:07.670 --> 00:32:08.870
<v Speaker 2>going to return something.

NOTE CONF {"raw":[100,100,100,100]}

00:32:09.150 --> 00:32:10.510
<v Speaker 2>And that's something is going to be a string.

NOTE CONF {"raw":[100,90,100,100,100,100,100,100,100]}

00:32:10.510 --> 00:32:11.590
<v Speaker 2>So this has got to be a string.

NOTE CONF {"raw":[100,100,97,97,100,100,100,100]}

00:32:11.590 --> 00:32:13.990
<v Speaker 2>So I'm saying here this is going to return a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:13.990 --> 00:32:14.390
<v Speaker 2>string.

NOTE CONF {"raw":[100]}

00:32:15.110 --> 00:32:18.190
<v Speaker 2>Now I'm going to use the word return.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:32:18.590 --> 00:32:22.230
<v Speaker 2>So every method that's not void has to have the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:22.230 --> 00:32:23.150
<v Speaker 2>keyword return.

NOTE CONF {"raw":[100,100]}

00:32:23.150 --> 00:32:25.410
<v Speaker 2>That's telling you telling the method what it should return.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:25.490 --> 00:32:28.050
<v Speaker 2>That's only not the case if it isn't returning anything

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:28.330 --> 00:32:29.530
<v Speaker 2>like a void method.

NOTE CONF {"raw":[100,100,100,100]}

00:32:29.850 --> 00:32:31.690
<v Speaker 2>What do I want it to return?

NOTE CONF {"raw":[100,99,100,100,69,76,100]}

00:32:32.330 --> 00:32:35.610
<v Speaker 2>Just first name plus last name.

NOTE CONF {"raw":[100,100,100,99,100,100]}

00:32:35.770 --> 00:32:39.650
<v Speaker 2>And as we saw last week, this is doing the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:39.650 --> 00:32:40.970
<v Speaker 2>job of string concatenation.

NOTE CONF {"raw":[100,100,100,100]}

00:32:40.970 --> 00:32:42.210
<v Speaker 2>So it's just shoving those together.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:32:42.330 --> 00:32:43.330
<v Speaker 2>So if I run that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:32:46.810 --> 00:32:47.770
<v Speaker 2>That should work.

NOTE CONF {"raw":[100,100,100]}

00:32:47.770 --> 00:32:50.170
<v Speaker 2>Although you can see that I don't have a gap.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:32:50.770 --> 00:32:53.730
<v Speaker 2>Those are run straight together because I'm concatenating straight together.

NOTE CONF {"raw":[100,100,77,100,100,100,100,64,100,100]}

00:32:53.770 --> 00:32:55.730
<v Speaker 2>Actually I probably would want a space with that.

NOTE CONF {"raw":[100,100,100,100,100,56,100,100,100]}

00:32:55.730 --> 00:32:59.970
<v Speaker 2>So let's put in a space and run that.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:33:02.890 --> 00:33:03.170
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:33:03.210 --> 00:33:04.450
<v Speaker 2>And then that's got a space.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:33:05.650 --> 00:33:05.930
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:33:05.970 --> 00:33:07.410
<v Speaker 2>And there's other things we can do.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:33:07.530 --> 00:33:08.770
<v Speaker 2>So there's weeks to save.

NOTE CONF {"raw":[100,84,94,100,100]}

00:33:08.770 --> 00:33:11.970
<v Speaker 2>You can see there's some duplication coming in here as

NOTE CONF {"raw":[100,100,100,100,82,100,100,100,100,100]}

00:33:11.970 --> 00:33:12.370
<v Speaker 2>well.

NOTE CONF {"raw":[100]}

00:33:12.610 --> 00:33:15.650
<v Speaker 2>So I can just quickly do that.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:33:15.970 --> 00:33:18.290
<v Speaker 2>Uh to oops.

NOTE CONF {"raw":[67,99,99]}

00:33:20.410 --> 00:33:23.010
<v Speaker 2>To say ten.

NOTE CONF {"raw":[100,40,100]}

00:33:23.010 --> 00:33:23.780
<v Speaker 2>And to.

NOTE CONF {"raw":[97,98]}

00:33:23.820 --> 00:33:24.260
<v Speaker 3>Ten.

NOTE CONF {"raw":[100]}

00:33:25.580 --> 00:33:26.500
<v Speaker 2>Get rid of that.

NOTE CONF {"raw":[100,100,100,100]}

00:33:27.540 --> 00:33:29.860
<v Speaker 2>And I'm going to make a method here, which is

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:29.860 --> 00:33:32.940
<v Speaker 2>also going to be public and static.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:33:32.940 --> 00:33:37.140
<v Speaker 2>And this is going to return an integer weeks to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:37.300 --> 00:33:39.780
<v Speaker 2>save int.

NOTE CONF {"raw":[100,98]}

00:33:40.500 --> 00:33:42.460
<v Speaker 2>What is this pocket money.

NOTE CONF {"raw":[100,100,100,100,100]}

00:33:45.700 --> 00:33:48.300
<v Speaker 2>And an integer which is target.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:33:49.500 --> 00:33:50.980
<v Speaker 2>And what's this function going to look like.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:33:50.980 --> 00:33:52.300
<v Speaker 2>What am I actually trying to do here.

NOTE CONF {"raw":[92,100,100,100,100,100,100,100]}

00:33:52.300 --> 00:33:54.740
<v Speaker 2>We can see here I just want to divide them.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:33:54.820 --> 00:33:58.060
<v Speaker 2>So I'm just going to return target.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:01.500 --> 00:34:04.980
<v Speaker 2>Divided by pocket money okay.

NOTE CONF {"raw":[100,100,100,100,100]}

00:34:05.500 --> 00:34:08.379
<v Speaker 2>And if I haven't messed that up that should work

NOTE CONF {"raw":[100,100,100,100,100,95,100,100,100,100]}

00:34:09.379 --> 00:34:09.860
<v Speaker 2>okay.

NOTE CONF {"raw":[100]}

00:34:10.460 --> 00:34:13.419
<v Speaker 2>So you can see this is already looking much easier

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:13.419 --> 00:34:13.899
<v Speaker 2>to read.

NOTE CONF {"raw":[100,100]}

00:34:13.899 --> 00:34:16.100
<v Speaker 2>I need to do this again at the bottom so

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:16.100 --> 00:34:18.980
<v Speaker 2>that I'm using the method again here.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:34:19.220 --> 00:34:20.580
<v Speaker 2>So I'm separating these out.

NOTE CONF {"raw":[100,100,100,99,100]}

00:34:20.580 --> 00:34:22.360
<v Speaker 2>It's just much clearer and easier.

NOTE CONF {"raw":[62,100,100,100,100,100]}

00:34:22.879 --> 00:34:23.639
<v Speaker 2>All right.

NOTE CONF {"raw":[100,100]}

00:34:24.919 --> 00:34:25.320
<v Speaker 2>Oops.

NOTE CONF {"raw":[90]}

00:34:27.159 --> 00:34:29.560
<v Speaker 2>So this is talking through everything we've just discussed.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:34:29.560 --> 00:34:30.800
<v Speaker 2>If you'd like to see it written down.

NOTE CONF {"raw":[100,97,100,100,100,100,100,100]}

00:34:30.840 --> 00:34:31.679
<v Speaker 2>Have a look at that.

NOTE CONF {"raw":[100,100,100,97,100]}

00:34:31.760 --> 00:34:32.879
<v Speaker 2>So why do I want to do this?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:34:32.919 --> 00:34:35.840
<v Speaker 2>I'm breaking down a complex task into simpler steps.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:34:36.040 --> 00:34:39.520
<v Speaker 2>I'm hiding the implementation details from anybody who calls it,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:39.520 --> 00:34:40.960
<v Speaker 2>which is actually really useful.

NOTE CONF {"raw":[100,100,100,100,100]}

00:34:41.120 --> 00:34:44.440
<v Speaker 2>So it's useful to me, perhaps as someone using this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:44.440 --> 00:34:46.560
<v Speaker 2>to say, oh, right, is his his.

NOTE CONF {"raw":[100,100,100,100,100,83,91]}

00:34:46.600 --> 00:34:48.360
<v Speaker 2>They're going to join the names I and some others

NOTE CONF {"raw":[84,100,100,100,100,100,76,72,85,74]}

00:34:48.360 --> 00:34:49.120
<v Speaker 2>doings join names.

NOTE CONF {"raw":[41,97,100]}

00:34:49.120 --> 00:34:50.639
<v Speaker 2>I don't care how you do during names.

NOTE CONF {"raw":[100,100,100,100,100,100,69,100]}

00:34:50.639 --> 00:34:52.480
<v Speaker 2>I don't want to see all that code, all the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:52.480 --> 00:34:53.760
<v Speaker 2>detail of how you do this.

NOTE CONF {"raw":[86,100,100,100,100,100]}

00:34:53.879 --> 00:34:56.000
<v Speaker 2>How does maths generate random numbers?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:34:56.000 --> 00:34:57.680
<v Speaker 2>I don't know, I don't really want to look at

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:34:57.680 --> 00:34:58.960
<v Speaker 2>those codes, that code.

NOTE CONF {"raw":[100,100,100,100]}

00:34:59.000 --> 00:35:00.920
<v Speaker 2>I just need to know that that's what it's going

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:00.920 --> 00:35:01.280
<v Speaker 2>to do.

NOTE CONF {"raw":[100,100]}

00:35:01.480 --> 00:35:03.480
<v Speaker 2>So very often you don't want to look at this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:03.480 --> 00:35:04.760
<v Speaker 2>code of methods.

NOTE CONF {"raw":[100,100,100]}

00:35:04.760 --> 00:35:06.120
<v Speaker 2>You just need to know the functionality.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:35:06.120 --> 00:35:08.400
<v Speaker 2>So it's kind of a way of hiding the implementation

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:08.600 --> 00:35:12.880
<v Speaker 2>so that it's not, um, not cluttering things up.

NOTE CONF {"raw":[100,100,100,100,74,100,100,100,100]}

00:35:13.440 --> 00:35:14.160
<v Speaker 2>Um, okay.

NOTE CONF {"raw":[84,100]}

00:35:14.200 --> 00:35:17.000
<v Speaker 2>This principle writing dry code.

NOTE CONF {"raw":[100,96,100,97,100]}

00:35:17.040 --> 00:35:18.080
<v Speaker 2>Have I mentioned this before?

NOTE CONF {"raw":[100,100,100,100,100]}

00:35:18.080 --> 00:35:19.640
<v Speaker 2>I'm going to bang on about this a lot.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:35:19.680 --> 00:35:19.880
<v Speaker 2>Okay.

NOTE CONF {"raw":[85]}

00:35:19.920 --> 00:35:22.130
<v Speaker 2>Dry is an acronym for Don't Repeat Yourself.

NOTE CONF {"raw":[100,98,100,100,100,100,100,100]}

00:35:22.370 --> 00:35:25.050
<v Speaker 2>If you're if you're typing the same code in different

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:25.050 --> 00:35:27.410
<v Speaker 2>parts in different places.

NOTE CONF {"raw":[100,97,100,100]}

00:35:28.010 --> 00:35:29.330
<v Speaker 2>That should be a function.

NOTE CONF {"raw":[100,100,100,100,100]}

00:35:29.330 --> 00:35:31.450
<v Speaker 2>And instead of typing the same code in different places,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:31.450 --> 00:35:33.370
<v Speaker 2>you should be calling that function okay.

NOTE CONF {"raw":[100,100,100,100,100,100,71]}

00:35:33.410 --> 00:35:34.490
<v Speaker 2>Why should you do this?

NOTE CONF {"raw":[100,100,100,100,100]}

00:35:34.930 --> 00:35:37.610
<v Speaker 2>Because it's easier to read and it's easier to maintain.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:37.690 --> 00:35:41.930
<v Speaker 2>So here, for example, I might decide actually I want

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:41.970 --> 00:35:42.930
<v Speaker 2>middle name as well.

NOTE CONF {"raw":[100,100,100,100]}

00:35:43.690 --> 00:35:45.290
<v Speaker 2>String middle name.

NOTE CONF {"raw":[100,100,100]}

00:35:47.090 --> 00:35:48.650
<v Speaker 2>So I just need to go to this function.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:35:48.650 --> 00:35:51.530
<v Speaker 2>And then I'm going to add that there.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:35:52.730 --> 00:35:53.210
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:35:53.810 --> 00:35:56.530
<v Speaker 2>And now every call to that function I'm going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:35:56.530 --> 00:35:58.530
<v Speaker 2>have to change because that now takes a different number

NOTE CONF {"raw":[100,100,100,100,52,100,100,100,100,100]}

00:35:58.530 --> 00:35:59.250
<v Speaker 2>of arguments.

NOTE CONF {"raw":[100,100]}

00:35:59.690 --> 00:36:03.050
<v Speaker 2>Um, but I don't have to change the code how

NOTE CONF {"raw":[77,100,100,100,100,100,100,100,100,100]}

00:36:03.050 --> 00:36:04.090
<v Speaker 2>I'm putting those together.

NOTE CONF {"raw":[100,100,100,100]}

00:36:04.090 --> 00:36:06.570
<v Speaker 2>Or it might be I'm not even out in an

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,45,79]}

00:36:06.570 --> 00:36:06.970
<v Speaker 2>argument.

NOTE CONF {"raw":[100]}

00:36:06.970 --> 00:36:08.810
<v Speaker 2>I might say, actually, it's better if they're the other

NOTE CONF {"raw":[100,100,100,100,100,100,100,93,100,100]}

00:36:08.810 --> 00:36:09.570
<v Speaker 2>way around.

NOTE CONF {"raw":[100,52]}

00:36:10.130 --> 00:36:12.290
<v Speaker 2>Uh, I want to be last name and then first

NOTE CONF {"raw":[90,100,100,100,100,100,100,100,100,100]}

00:36:12.330 --> 00:36:12.690
<v Speaker 2>name.

NOTE CONF {"raw":[100]}

00:36:13.210 --> 00:36:14.290
<v Speaker 2>I can just do that here.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:36:17.010 --> 00:36:17.250
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:36:17.290 --> 00:36:19.330
<v Speaker 2>And then this is going to happen in every place

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:19.330 --> 00:36:19.690
<v Speaker 2>I call.

NOTE CONF {"raw":[100,100]}

00:36:19.690 --> 00:36:21.620
<v Speaker 2>This Is this going to happen to both Jane and

NOTE CONF {"raw":[100,91,46,100,100,100,100,100,100,100]}

00:36:21.620 --> 00:36:23.900
<v Speaker 2>to John and to what's he called jock?

NOTE CONF {"raw":[100,100,100,100,100,50,100,76]}

00:36:25.060 --> 00:36:27.060
<v Speaker 2>Whereas if I hadn't got this in a function, I'm

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:27.060 --> 00:36:29.300
<v Speaker 2>going to have to go through both of those and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:29.300 --> 00:36:33.620
<v Speaker 2>change it twice, which when it's twice, not too bad.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:33.700 --> 00:36:35.980
<v Speaker 2>But if it's multiple, it gets more and more complicated,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:36.020 --> 00:36:37.460
<v Speaker 2>more and more easier to make a mistake.

NOTE CONF {"raw":[100,100,100,100,100,100,47,93]}

00:36:37.820 --> 00:36:40.180
<v Speaker 2>So it just makes it much better code.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:36:40.980 --> 00:36:43.220
<v Speaker 2>You can reuse code across multiple programs.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:36:43.220 --> 00:36:45.100
<v Speaker 2>So it's not just something that's happening within a method.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:45.100 --> 00:36:46.780
<v Speaker 2>It's something that I can call from elsewhere.

NOTE CONF {"raw":[100,100,100,69,100,100,100,100]}

00:36:46.940 --> 00:36:49.820
<v Speaker 2>So it's just much better in all kinds of ways.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:50.900 --> 00:36:53.740
<v Speaker 2>So how do you know when to put something into

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:36:53.740 --> 00:36:54.940
<v Speaker 2>a method and when not to?

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:36:54.980 --> 00:36:59.220
<v Speaker 2>So generally, if it's a subtask, a clear kind of

NOTE CONF {"raw":[100,100,100,100,100,88,100,100,100,100]}

00:36:59.260 --> 00:37:01.100
<v Speaker 2>unit you should be putting elsewhere.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:37:01.300 --> 00:37:03.340
<v Speaker 2>A good rule of thumb is that a method should

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:03.340 --> 00:37:04.780
<v Speaker 2>never be more than ten to.

NOTE CONF {"raw":[100,100,100,100,100,82]}

00:37:04.820 --> 00:37:07.300
<v Speaker 2>Well, a method should generally not be more than 10

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:07.300 --> 00:37:08.460
<v Speaker 2>to 15 lines long.

NOTE CONF {"raw":[100,100,100,100]}

00:37:08.460 --> 00:37:09.940
<v Speaker 2>So if you look to the coding I had to

NOTE CONF {"raw":[100,100,100,80,72,100,100,100,100,100]}

00:37:09.940 --> 00:37:12.220
<v Speaker 2>begin with, that was more than 15 lines long, I

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:12.220 --> 00:37:12.420
<v Speaker 2>think.

NOTE CONF {"raw":[100]}

00:37:12.420 --> 00:37:14.500
<v Speaker 2>So generally you look at that and you're like, well,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:14.500 --> 00:37:16.220
<v Speaker 2>probably the stuff that we can put up in a

NOTE CONF {"raw":[100,100,100,100,100,100,100,85,98,100]}

00:37:16.220 --> 00:37:18.420
<v Speaker 2>method, this is not a hard rule.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:18.500 --> 00:37:20.880
<v Speaker 2>There are some cases where you really do need a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:20.880 --> 00:37:23.240
<v Speaker 2>method that's longer than this, but if it's more than

NOTE CONF {"raw":[100,94,100,100,100,100,100,100,100,100]}

00:37:23.240 --> 00:37:25.360
<v Speaker 2>about ten lines, just begin to start thinking.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:37:25.400 --> 00:37:27.520
<v Speaker 2>Actually, maybe I can put some of this into separate

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:27.520 --> 00:37:29.200
<v Speaker 2>functions and that's going to be better.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:37:29.520 --> 00:37:32.760
<v Speaker 2>And certainly if you're writing things twice, if you're repeating

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,94,100]}

00:37:32.760 --> 00:37:34.680
<v Speaker 2>yourself, you shouldn't be repeating yourself.

NOTE CONF {"raw":[100,88,100,100,100,100]}

00:37:34.680 --> 00:37:36.360
<v Speaker 2>You should be putting that in a method and calling

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:36.360 --> 00:37:37.000
<v Speaker 2>that method.

NOTE CONF {"raw":[100,100]}

00:37:38.800 --> 00:37:39.280
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:37:39.320 --> 00:37:41.760
<v Speaker 2>So this is some examples of ways we might want

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:41.760 --> 00:37:45.200
<v Speaker 2>to change and how it's nice and useful to have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:45.200 --> 00:37:48.240
<v Speaker 2>that in functions much easier to localise modifications.

NOTE CONF {"raw":[100,100,100,100,100,100,85,100]}

00:37:48.560 --> 00:37:48.760
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:37:48.800 --> 00:37:50.920
<v Speaker 2>Now we're going to look at Euclidean distance between two

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:50.920 --> 00:37:51.240
<v Speaker 2>points.

NOTE CONF {"raw":[100]}

00:37:51.280 --> 00:37:51.480
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:37:51.520 --> 00:37:53.960
<v Speaker 2>So maybe if you've done a lot of math recently

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,96,100]}

00:37:53.960 --> 00:37:55.440
<v Speaker 2>this is really familiar to you.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:37:55.520 --> 00:37:58.800
<v Speaker 2>I haven't actually done Euclidean distance for a long time.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:37:59.080 --> 00:38:03.200
<v Speaker 2>But this is basically you're trying to find a you're

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,95,93]}

00:38:03.200 --> 00:38:05.400
<v Speaker 2>given a point P, and you're trying to figure out

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:05.400 --> 00:38:07.040
<v Speaker 2>how close other points are to P.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:38:07.040 --> 00:38:08.640
<v Speaker 2>So for example, you might be trying to find the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:08.640 --> 00:38:09.680
<v Speaker 2>closest point to P.

NOTE CONF {"raw":[100,100,100,100]}

00:38:10.320 --> 00:38:13.880
<v Speaker 2>And you've got this sort of vaguely complex equation to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:13.920 --> 00:38:14.960
<v Speaker 2>tell you how to do that.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:38:16.240 --> 00:38:19.530
<v Speaker 2>So here We've got that coded.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:38:20.290 --> 00:38:22.410
<v Speaker 2>So we've got what's going on here.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:38:22.450 --> 00:38:26.330
<v Speaker 2>Distance takes in four doubles which is the two points.

NOTE CONF {"raw":[94,100,100,85,100,100,100,100,100,100]}

00:38:26.810 --> 00:38:28.890
<v Speaker 2>It works out the distance between the x values and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:28.890 --> 00:38:30.210
<v Speaker 2>the distance between the y values.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:38:30.210 --> 00:38:32.810
<v Speaker 2>And then and this does this equation.

NOTE CONF {"raw":[100,100,93,100,100,100,100]}

00:38:34.330 --> 00:38:35.930
<v Speaker 2>Um okay.

NOTE CONF {"raw":[100,100]}

00:38:35.970 --> 00:38:39.210
<v Speaker 2>So just to look at the anatomy of a Java

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:39.210 --> 00:38:41.210
<v Speaker 2>function because we've talked about these quite a lot.

NOTE CONF {"raw":[100,100,100,100,100,95,100,100,100]}

00:38:41.210 --> 00:38:43.770
<v Speaker 2>So probably most of these are familiar to you now.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:44.050 --> 00:38:47.450
<v Speaker 2>So public and static or whatever they may be.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:38:47.450 --> 00:38:48.730
<v Speaker 2>These are called modifiers.

NOTE CONF {"raw":[100,100,100,100]}

00:38:48.850 --> 00:38:51.250
<v Speaker 2>These are attached to classes and methods and tell you

NOTE CONF {"raw":[100,60,94,100,100,100,100,100,100,100]}

00:38:51.250 --> 00:38:54.370
<v Speaker 2>things about about the class that we'll talk about later.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:54.570 --> 00:38:56.930
<v Speaker 2>As we've seen the next one is called the return

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:38:56.930 --> 00:38:59.410
<v Speaker 2>type tells you what is going to be returned.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:38:59.530 --> 00:39:01.170
<v Speaker 2>Then you have the method name, and then you have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:01.170 --> 00:39:04.130
<v Speaker 2>the parameters which have both the parameters themselves, the names

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:04.130 --> 00:39:05.930
<v Speaker 2>of the parameters, and they have the type of the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:05.930 --> 00:39:06.650
<v Speaker 2>parameters.

NOTE CONF {"raw":[100]}

00:39:07.210 --> 00:39:12.650
<v Speaker 2>Um, and you might have local variables which you're giving

NOTE CONF {"raw":[76,100,100,100,100,100,100,100,100,100]}

00:39:12.650 --> 00:39:15.130
<v Speaker 2>specific values within the class.

NOTE CONF {"raw":[100,100,100,100,100]}

00:39:15.650 --> 00:39:20.700
<v Speaker 2>Um, And you always have a return statement unless your

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:20.980 --> 00:39:22.100
<v Speaker 2>method is void.

NOTE CONF {"raw":[100,100,100]}

00:39:22.500 --> 00:39:24.940
<v Speaker 2>Uh, this bit here where they're doing the working out

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,100,100]}

00:39:24.940 --> 00:39:26.420
<v Speaker 2>is called the function body.

NOTE CONF {"raw":[71,100,100,100,100]}

00:39:26.620 --> 00:39:29.220
<v Speaker 2>And the whole thing is the declaration.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:39:29.740 --> 00:39:31.900
<v Speaker 2>Okay, so that is the kind of language we're using.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:31.900 --> 00:39:34.260
<v Speaker 2>If you're not quite clear about this, you should come

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:34.260 --> 00:39:35.580
<v Speaker 2>back to the slide and take a look.

NOTE CONF {"raw":[100,100,88,97,100,100,100,100]}

00:39:35.580 --> 00:39:37.420
<v Speaker 2>But I will be using this quite frequently.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:39:39.300 --> 00:39:39.940
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:39:40.060 --> 00:39:43.100
<v Speaker 2>So calling a function we've got literal arguments right here

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:39:43.420 --> 00:39:45.100
<v Speaker 2>D has got something.

NOTE CONF {"raw":[58,100,100,100]}

00:39:45.500 --> 00:39:47.300
<v Speaker 2>This is grounded in something specific.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:39:47.340 --> 00:39:49.580
<v Speaker 2>These are literals that have actual values.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:39:49.700 --> 00:39:51.420
<v Speaker 2>Whereas D here is a variable.

NOTE CONF {"raw":[100,90,100,100,100,100]}

00:39:51.700 --> 00:39:54.700
<v Speaker 2>We're defining it in terms of other arguments.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:39:54.900 --> 00:39:56.660
<v Speaker 2>And these here these are literals.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:39:56.660 --> 00:39:58.140
<v Speaker 2>But these could also be variables.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:39:58.180 --> 00:39:58.340
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:39:58.380 --> 00:40:00.460
<v Speaker 2>So a variable is defined in terms of other things

NOTE CONF {"raw":[100,77,100,100,100,100,100,100,100,100]}

00:40:00.580 --> 00:40:02.580
<v Speaker 2>a literal has an explicit value.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:40:05.860 --> 00:40:07.020
<v Speaker 0>All right.

NOTE CONF {"raw":[99,100]}

00:40:07.020 --> 00:40:09.940
<v Speaker 2>So now we're going to look at the structure control.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,98]}

00:40:09.980 --> 00:40:10.380
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:40:10.420 --> 00:40:14.300
<v Speaker 2>So functions provide ways to control the flow of execution.

NOTE CONF {"raw":[100,100,96,100,100,100,100,100,100,100]}

00:40:15.100 --> 00:40:15.340
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:40:15.380 --> 00:40:17.800
<v Speaker 2>So when you start off, when you first call a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:17.800 --> 00:40:18.160
<v Speaker 2>function.

NOTE CONF {"raw":[100]}

00:40:18.160 --> 00:40:19.920
<v Speaker 2>So when you when you begin, you always call.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:40:19.920 --> 00:40:21.640
<v Speaker 2>When you run a class that always calls main.

NOTE CONF {"raw":[100,100,100,100,100,80,100,88,100]}

00:40:21.640 --> 00:40:24.440
<v Speaker 2>That means the control of what's happening is in main.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:24.440 --> 00:40:27.560
<v Speaker 2>It's in the function when when you call another function,

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,100,100]}

00:40:27.560 --> 00:40:29.600
<v Speaker 2>it passes control over to that function.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:40:29.600 --> 00:40:30.240
<v Speaker 2>It'll go off.

NOTE CONF {"raw":[100,100,100]}

00:40:30.240 --> 00:40:32.720
<v Speaker 2>Something will happen in that function, and then that function

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:32.720 --> 00:40:35.240
<v Speaker 2>will return something assuming it has a return value, or

NOTE CONF {"raw":[100,100,100,91,100,100,100,100,100,100]}

00:40:35.240 --> 00:40:37.680
<v Speaker 2>just do whatever it's doing and not return anything if

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:37.680 --> 00:40:40.040
<v Speaker 2>it's void and that pass is controlled back to where

NOTE CONF {"raw":[100,100,100,100,72,100,100,100,100,100]}

00:40:40.040 --> 00:40:40.960
<v Speaker 2>it happens, right?

NOTE CONF {"raw":[100,100,94]}

00:40:41.000 --> 00:40:42.360
<v Speaker 2>If that's not clear, we're going to have a lot

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:42.360 --> 00:40:45.200
<v Speaker 2>of practice looking at what that really means when you're

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:45.200 --> 00:40:46.240
<v Speaker 2>doing it in practice.

NOTE CONF {"raw":[100,100,100,100]}

00:40:47.720 --> 00:40:48.640
<v Speaker 2>Um, okay.

NOTE CONF {"raw":[85,100]}

00:40:48.680 --> 00:40:52.480
<v Speaker 2>So in Java we use what we call pass by

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:52.480 --> 00:40:53.160
<v Speaker 2>value okay.

NOTE CONF {"raw":[100,100]}

00:40:53.200 --> 00:40:56.680
<v Speaker 2>So that means parameter values are assigned the values given

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:40:56.680 --> 00:40:57.920
<v Speaker 2>by arguments to the call.

NOTE CONF {"raw":[100,100,100,100,100]}

00:40:58.080 --> 00:40:59.720
<v Speaker 2>I'll give you examples of this later.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:41:00.320 --> 00:41:03.640
<v Speaker 2>Um yeah I think it's better.

NOTE CONF {"raw":[100,99,100,100,100,100]}

00:41:03.640 --> 00:41:05.160
<v Speaker 2>I think it's easier if I give you an example

NOTE CONF {"raw":[92,92,100,100,100,100,100,100,100,100]}

00:41:05.160 --> 00:41:06.880
<v Speaker 2>later rather than randomly trying to find one now.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,96]}

00:41:07.120 --> 00:41:09.400
<v Speaker 2>But the idea is that when I'm calling an argument,

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:09.400 --> 00:41:12.200
<v Speaker 2>I'm sorry, when I call a function, I tell it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:12.320 --> 00:41:13.440
<v Speaker 2>what the arguments are.

NOTE CONF {"raw":[100,100,100,100]}

00:41:13.480 --> 00:41:17.050
<v Speaker 2>Those pass in to the parameters of the function as

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:17.050 --> 00:41:17.850
<v Speaker 2>the arguments.

NOTE CONF {"raw":[100,94]}

00:41:17.850 --> 00:41:20.410
<v Speaker 2>So I'm passing the values of the arguments around.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:41:20.770 --> 00:41:22.930
<v Speaker 2>So the function itself only has access to the value

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:22.930 --> 00:41:25.010
<v Speaker 2>of its argument and not the arguments themselves.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:41:25.050 --> 00:41:25.210
<v Speaker 2>Right.

NOTE CONF {"raw":[99]}

00:41:25.250 --> 00:41:27.050
<v Speaker 2>So it only knows what's being passed into it.

NOTE CONF {"raw":[99,95,100,100,100,100,100,100,100]}

00:41:27.050 --> 00:41:29.050
<v Speaker 2>We'll look at examples of what this means in a

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:29.050 --> 00:41:31.490
<v Speaker 2>minute okay.

NOTE CONF {"raw":[100,100]}

00:41:31.530 --> 00:41:32.970
<v Speaker 2>So let's go to add one.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:41:35.410 --> 00:41:37.730
<v Speaker 2>Oh sorry I was on silent okay.

NOTE CONF {"raw":[58,100,63,100,89,70,100]}

00:41:37.730 --> 00:41:38.690
<v Speaker 2>So what's going on here.

NOTE CONF {"raw":[100,100,100,100,100]}

00:41:38.730 --> 00:41:38.930
<v Speaker 2>Right.

NOTE CONF {"raw":[100]}

00:41:38.970 --> 00:41:41.650
<v Speaker 2>So we start in the main method I'm instantiating an

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:41.650 --> 00:41:43.890
<v Speaker 2>integer to zero calling x.

NOTE CONF {"raw":[100,100,100,100,100]}

00:41:43.890 --> 00:41:45.170
<v Speaker 2>And then I'm printing it out.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:41:46.090 --> 00:41:48.170
<v Speaker 2>But I've also got this add one method right.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:41:48.210 --> 00:41:51.250
<v Speaker 2>And what this does is it takes a value um

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,89]}

00:41:51.610 --> 00:41:53.930
<v Speaker 2>and num plus plus we looked at this with iterators.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:53.930 --> 00:41:55.450
<v Speaker 2>This means add one to it okay.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:41:55.490 --> 00:41:56.730
<v Speaker 2>So this is called add one.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:41:56.730 --> 00:41:58.610
<v Speaker 2>So if I, if I run this what does it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:41:58.610 --> 00:41:59.130
<v Speaker 2>return.

NOTE CONF {"raw":[100]}

00:41:59.730 --> 00:42:03.250
<v Speaker 2>Well it just returns zero because I'm not actually using

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:03.250 --> 00:42:03.570
<v Speaker 2>this.

NOTE CONF {"raw":[100]}

00:42:03.650 --> 00:42:04.690
<v Speaker 2>But let's uncomment this.

NOTE CONF {"raw":[100,100,100,100]}

00:42:04.690 --> 00:42:07.730
<v Speaker 2>So now this is actually passing control up to this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:07.730 --> 00:42:08.410
<v Speaker 2>method here.

NOTE CONF {"raw":[100,100]}

00:42:09.050 --> 00:42:10.570
<v Speaker 2>Um so what is it going to do.

NOTE CONF {"raw":[96,100,100,100,100,100,100,100]}

00:42:10.610 --> 00:42:12.490
<v Speaker 2>So have a little think what is this going to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:12.490 --> 00:42:12.770
<v Speaker 2>do.

NOTE CONF {"raw":[100]}

00:42:13.090 --> 00:42:14.140
<v Speaker 2>I'm passing at zero.

NOTE CONF {"raw":[100,100,61,92]}

00:42:14.180 --> 00:42:16.540
<v Speaker 2>I'm doing this one and then I'm printing out zero.

NOTE CONF {"raw":[100,100,89,100,100,100,100,100,100,100]}

00:42:17.980 --> 00:42:22.700
<v Speaker 2>Do I have a minty for this?

NOTE CONF {"raw":[100,100,100,100,97,100,100]}

00:42:23.420 --> 00:42:23.820
<v Speaker 2>No.

NOTE CONF {"raw":[98]}

00:42:25.420 --> 00:42:25.940
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:42:26.380 --> 00:42:28.980
<v Speaker 2>Um, so what is what is actually going to do?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:42:29.020 --> 00:42:29.820
<v Speaker 2>Let's have a look.

NOTE CONF {"raw":[100,100,100,100]}

00:42:31.060 --> 00:42:31.260
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:42:31.300 --> 00:42:32.420
<v Speaker 2>It's going to return zero.

NOTE CONF {"raw":[100,100,100,100,100]}

00:42:32.460 --> 00:42:32.660
<v Speaker 2>Right.

NOTE CONF {"raw":[100]}

00:42:32.700 --> 00:42:33.540
<v Speaker 2>So what's going on there.

NOTE CONF {"raw":[100,100,100,100,100]}

00:42:33.580 --> 00:42:33.740
<v Speaker 2>Right.

NOTE CONF {"raw":[100]}

00:42:33.780 --> 00:42:35.060
<v Speaker 2>I call this add one function.

NOTE CONF {"raw":[100,97,100,100,100,100]}

00:42:35.060 --> 00:42:36.620
<v Speaker 2>This add one adds one to it.

NOTE CONF {"raw":[100,100,100,70,100,100,100]}

00:42:37.020 --> 00:42:38.900
<v Speaker 2>But it didn't make any difference okay.

NOTE CONF {"raw":[100,100,93,100,100,100,100]}

00:42:38.940 --> 00:42:42.780
<v Speaker 2>This is because variables are local within functions.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:42:42.900 --> 00:42:46.380
<v Speaker 2>So I'm passing it zero and it's taking in an

NOTE CONF {"raw":[100,100,100,58,100,100,100,100,94,100]}

00:42:46.380 --> 00:42:46.980
<v Speaker 2>argument.

NOTE CONF {"raw":[100]}

00:42:46.980 --> 00:42:51.900
<v Speaker 2>And now within this locally this is called num num

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,45,73]}

00:42:51.900 --> 00:42:55.540
<v Speaker 2>is now assigned to zero I'm integrating in iterating it

NOTE CONF {"raw":[100,100,100,100,100,100,75,98,100,100]}

00:42:55.540 --> 00:42:56.420
<v Speaker 2>I'm adding one.

NOTE CONF {"raw":[100,100,100]}

00:42:56.540 --> 00:42:58.060
<v Speaker 2>NUM now has the value one.

NOTE CONF {"raw":[100,100,100,64,100,100]}

00:42:59.260 --> 00:43:01.020
<v Speaker 2>But I'm not passing anything back right.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:43:01.020 --> 00:43:03.420
<v Speaker 2>So this is void I'm not passing anything back.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:03.700 --> 00:43:05.620
<v Speaker 2>So now this this is only.

NOTE CONF {"raw":[100,100,84,100,64,100]}

00:43:05.660 --> 00:43:08.300
<v Speaker 2>So this is incremented by one but only locally.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:08.420 --> 00:43:09.460
<v Speaker 2>I'm not doing anything with it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:43:09.460 --> 00:43:10.980
<v Speaker 2>So that's just completely forgotten.

NOTE CONF {"raw":[100,100,100,100,100]}

00:43:11.060 --> 00:43:13.160
<v Speaker 2>I go back here and X hasn't changed.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:43:13.400 --> 00:43:13.560
<v Speaker 2>Okay.

NOTE CONF {"raw":[86]}

00:43:13.600 --> 00:43:17.120
<v Speaker 2>Because X is just within this this function here.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:43:17.400 --> 00:43:19.960
<v Speaker 2>So if I want to pass changes back I have

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:19.960 --> 00:43:21.400
<v Speaker 2>to be passing the values.

NOTE CONF {"raw":[100,100,100,100,100]}

00:43:21.480 --> 00:43:25.880
<v Speaker 2>So that means here I have got to collect this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:27.280 --> 00:43:30.240
<v Speaker 2>So I want to say x equals add one x.

NOTE CONF {"raw":[100,100,100,100,100,100,100,96,100,100]}

00:43:30.240 --> 00:43:32.840
<v Speaker 2>So this is saying go and do add one and

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:32.840 --> 00:43:35.680
<v Speaker 2>then assign that whatever comes back assign that to x

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:35.680 --> 00:43:36.600
<v Speaker 2>and then print x out.

NOTE CONF {"raw":[100,100,96,100,100]}

00:43:36.640 --> 00:43:38.840
<v Speaker 2>Now obviously it doesn't like this because this is void.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:38.840 --> 00:43:40.040
<v Speaker 2>It's not returning anything.

NOTE CONF {"raw":[100,100,100,100]}

00:43:40.280 --> 00:43:42.360
<v Speaker 2>So I need to say what I want it to

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:42.360 --> 00:43:42.720
<v Speaker 2>return.

NOTE CONF {"raw":[100]}

00:43:42.720 --> 00:43:43.600
<v Speaker 2>What is x.

NOTE CONF {"raw":[100,100,100]}

00:43:43.840 --> 00:43:45.680
<v Speaker 2>X is an integer okay.

NOTE CONF {"raw":[100,100,100,100,83]}

00:43:45.720 --> 00:43:47.920
<v Speaker 2>And I need the magic keyword return.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:43:49.000 --> 00:43:50.280
<v Speaker 2>So let's run that.

NOTE CONF {"raw":[100,100,100,100]}

00:43:50.880 --> 00:43:52.600
<v Speaker 2>There's another I don't know whether I should put this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:43:52.600 --> 00:43:53.120
<v Speaker 2>computation in.

NOTE CONF {"raw":[100,100]}

00:43:53.160 --> 00:43:54.160
<v Speaker 2>Maybe it's just confusing.

NOTE CONF {"raw":[100,100,100,100]}

00:43:54.240 --> 00:43:55.640
<v Speaker 2>But if I run that okay.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:43:55.680 --> 00:43:57.240
<v Speaker 2>This is also returning zero.

NOTE CONF {"raw":[100,100,100,100,100]}

00:43:57.400 --> 00:43:59.400
<v Speaker 2>This is not anymore because of local variables.

NOTE CONF {"raw":[100,100,100,78,100,100,100,100]}

00:43:59.400 --> 00:44:01.760
<v Speaker 2>This is because this is because of how iteration works.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:01.840 --> 00:44:03.440
<v Speaker 2>And this is something that trips you up a lot.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:03.480 --> 00:44:05.640
<v Speaker 2>You'll be practising this in tutorials because this is kind

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:05.640 --> 00:44:06.120
<v Speaker 2>of weird.

NOTE CONF {"raw":[100,100]}

00:44:06.160 --> 00:44:10.040
<v Speaker 2>But basically iteration this what this shorthand means is do

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:10.040 --> 00:44:10.840
<v Speaker 2>whatever you're doing.

NOTE CONF {"raw":[100,100,100]}

00:44:11.050 --> 00:44:12.890
<v Speaker 2>And after you've done it, add one.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:44:12.890 --> 00:44:14.650
<v Speaker 2>This is why it's useful in four loops, because you

NOTE CONF {"raw":[100,100,100,100,100,100,58,100,100,100]}

00:44:14.650 --> 00:44:15.930
<v Speaker 2>do whatever's happening in the for loop.

NOTE CONF {"raw":[100,55,100,100,100,100,100]}

00:44:15.930 --> 00:44:18.130
<v Speaker 2>And then when everything's finished you add one and you

NOTE CONF {"raw":[100,100,100,88,100,100,100,100,100,100]}

00:44:18.130 --> 00:44:18.570
<v Speaker 2>move on.

NOTE CONF {"raw":[100,100]}

00:44:18.650 --> 00:44:21.130
<v Speaker 2>So basically what this says is return number.

NOTE CONF {"raw":[100,100,100,100,100,100,98,100]}

00:44:21.330 --> 00:44:23.770
<v Speaker 2>And after you do that add one to number.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:44:23.770 --> 00:44:25.010
<v Speaker 2>So number is now at one.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:44:25.010 --> 00:44:26.810
<v Speaker 2>But what's returned was before that happened.

NOTE CONF {"raw":[100,100,100,100,100,100,58]}

00:44:26.810 --> 00:44:29.770
<v Speaker 2>So what we actually need to do here is say

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:29.810 --> 00:44:30.210
<v Speaker 2>num.

NOTE CONF {"raw":[100]}

00:44:32.170 --> 00:44:34.050
<v Speaker 2>We can just do that.

NOTE CONF {"raw":[100,100,100,100,100]}

00:44:35.690 --> 00:44:36.650
<v Speaker 2>That should work right.

NOTE CONF {"raw":[100,100,100,100]}

00:44:36.690 --> 00:44:37.090
<v Speaker 2>Oops.

NOTE CONF {"raw":[100]}

00:44:37.450 --> 00:44:38.370
<v Speaker 2>Semicolon there.

NOTE CONF {"raw":[96,100]}

00:44:39.250 --> 00:44:40.010
<v Speaker 2>Let me just check.

NOTE CONF {"raw":[100,100,100,100]}

00:44:40.010 --> 00:44:41.730
<v Speaker 2>That works okay.

NOTE CONF {"raw":[100,100,100]}

00:44:41.770 --> 00:44:42.610
<v Speaker 2>So this now works.

NOTE CONF {"raw":[100,100,100,100]}

00:44:42.610 --> 00:44:44.970
<v Speaker 2>So I'm saying first of all increment num and then

NOTE CONF {"raw":[76,100,100,100,100,100,100,100,100,100]}

00:44:44.970 --> 00:44:45.530
<v Speaker 2>return it.

NOTE CONF {"raw":[100,100]}

00:44:45.530 --> 00:44:47.770
<v Speaker 2>So now it's it's passing x.

NOTE CONF {"raw":[100,100,100,100,100,97]}

00:44:48.410 --> 00:44:50.770
<v Speaker 2>It's passing whatever the value of x is which is

NOTE CONF {"raw":[87,100,100,100,100,100,100,100,100,100]}

00:44:50.770 --> 00:44:53.370
<v Speaker 2>zero back here is adding one to it.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:44:53.410 --> 00:44:55.930
<v Speaker 2>It's returning the new value.

NOTE CONF {"raw":[100,100,100,100,100]}

00:44:56.010 --> 00:44:58.130
<v Speaker 2>And then that's assigning it to one and printing it

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:44:58.130 --> 00:44:58.610
<v Speaker 2>out okay.

NOTE CONF {"raw":[100,100]}

00:44:58.650 --> 00:45:01.890
<v Speaker 2>So it's not it's so it's passing the local value

NOTE CONF {"raw":[100,100,96,84,100,100,100,100,100,100]}

00:45:01.890 --> 00:45:03.090
<v Speaker 2>back to the original control.

NOTE CONF {"raw":[100,100,100,100,100]}

00:45:03.090 --> 00:45:07.210
<v Speaker 2>And therefore it's still knows what's going on okay.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:45:09.250 --> 00:45:11.860
<v Speaker 2>So this is a lot to do with what's actually

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:11.860 --> 00:45:12.620
<v Speaker 2>happening in memory.

NOTE CONF {"raw":[100,100,100]}

00:45:12.620 --> 00:45:15.500
<v Speaker 2>So we'll get on to memory, uh, quite soon, a

NOTE CONF {"raw":[100,100,100,85,85,100,80,100,100,100]}

00:45:15.500 --> 00:45:16.220
<v Speaker 2>couple of weeks.

NOTE CONF {"raw":[100,100,100]}

00:45:16.580 --> 00:45:18.620
<v Speaker 2>Um, but basically it's all to do with the calling

NOTE CONF {"raw":[97,100,100,100,100,100,100,100,100,100]}

00:45:18.620 --> 00:45:18.940
<v Speaker 2>code.

NOTE CONF {"raw":[100]}

00:45:18.940 --> 00:45:21.580
<v Speaker 2>So we're passing this number over and number is local

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:21.620 --> 00:45:21.940
<v Speaker 2>here.

NOTE CONF {"raw":[100]}

00:45:22.940 --> 00:45:26.420
<v Speaker 2>Um, so in memory X and number are completely unrelated.

NOTE CONF {"raw":[69,100,100,100,95,75,100,100,100,100]}

00:45:26.420 --> 00:45:28.500
<v Speaker 2>We can see how they're related, but they're not related

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:28.500 --> 00:45:28.980
<v Speaker 2>in memory.

NOTE CONF {"raw":[100,100]}

00:45:28.980 --> 00:45:30.780
<v Speaker 2>So anything we do to num is not being passed

NOTE CONF {"raw":[100,100,100,100,100,60,100,100,100,100]}

00:45:30.780 --> 00:45:31.300
<v Speaker 2>on to X.

NOTE CONF {"raw":[95,95,100]}

00:45:31.300 --> 00:45:32.420
<v Speaker 2>You actually have to write it.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:45:32.460 --> 00:45:34.340
<v Speaker 2>Write it over to X, assign it to X.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:45:34.820 --> 00:45:36.460
<v Speaker 2>Um to pass that information on.

NOTE CONF {"raw":[97,100,100,63,100,100]}

00:45:37.620 --> 00:45:39.940
<v Speaker 2>Uh, this is just more about the structure.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:45:40.340 --> 00:45:41.500
<v Speaker 2>I actually should have put these before.

NOTE CONF {"raw":[97,100,97,96,100,88,100]}

00:45:41.580 --> 00:45:42.580
<v Speaker 2>So here's the examples.

NOTE CONF {"raw":[100,100,100,52]}

00:45:42.620 --> 00:45:44.020
<v Speaker 2>This is what we call a signature.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:45:44.300 --> 00:45:47.900
<v Speaker 2>This is a name with the values of the arguments.

NOTE CONF {"raw":[100,100,97,100,100,100,100,100,100,100]}

00:45:48.260 --> 00:45:50.780
<v Speaker 2>And the head of the definition has also got the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:45:50.780 --> 00:45:51.580
<v Speaker 2>modifiers.

NOTE CONF {"raw":[100]}

00:45:52.860 --> 00:45:55.060
<v Speaker 2>We've done all the return types.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:45:55.300 --> 00:45:56.300
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:45:56.940 --> 00:45:57.700
<v Speaker 2>We've got five minutes.

NOTE CONF {"raw":[100,100,100,100]}

00:45:57.700 --> 00:45:59.980
<v Speaker 2>I'm just going to have a look quickly at this.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:00.820 --> 00:46:04.460
<v Speaker 2>Um yeah I think we've covered all of what this

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:04.460 --> 00:46:04.940
<v Speaker 2>is saying.

NOTE CONF {"raw":[100,100]}

00:46:05.700 --> 00:46:08.940
<v Speaker 2>So the passed by value, um, here this is being

NOTE CONF {"raw":[100,100,52,100,100,100,100,100,100,100]}

00:46:09.040 --> 00:46:12.520
<v Speaker 2>passed over because we're actually assigning the value to something

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:12.520 --> 00:46:13.760
<v Speaker 2>that's in the main code.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:15.520 --> 00:46:17.320
<v Speaker 2>So arrays of reference types.

NOTE CONF {"raw":[100,100,100,100,100]}

00:46:17.360 --> 00:46:17.640
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:46:17.680 --> 00:46:19.920
<v Speaker 2>So actually no I don't want to get into this

NOTE CONF {"raw":[100,100,92,100,100,100,100,98,100,100]}

00:46:19.920 --> 00:46:20.080
<v Speaker 2>now.

NOTE CONF {"raw":[100]}

00:46:20.080 --> 00:46:21.160
<v Speaker 2>We'll have a look at this tomorrow.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:46:21.160 --> 00:46:23.120
<v Speaker 2>So this is what happens with most things.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:46:23.120 --> 00:46:25.440
<v Speaker 2>But arrays slightly complicate the issue.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:46:25.560 --> 00:46:27.400
<v Speaker 2>Arrays do things a little bit differently.

NOTE CONF {"raw":[100,100,100,100,100,100,100]}

00:46:27.760 --> 00:46:31.760
<v Speaker 2>Um and we'll go on to that uh, on Monday.

NOTE CONF {"raw":[87,100,100,100,74,74,100,48,100,100]}

00:46:32.160 --> 00:46:32.480
<v Speaker 2>Okay.

NOTE CONF {"raw":[100]}

00:46:32.520 --> 00:46:32.880
<v Speaker 2>So.

NOTE CONF {"raw":[98]}

00:46:36.360 --> 00:46:38.160
<v Speaker 2>I'm going to put the ask me anything up.

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100]}

00:46:38.360 --> 00:46:41.320
<v Speaker 2>Um, so just put questions in now.

NOTE CONF {"raw":[79,99,100,100,100,73,97]}

00:46:41.320 --> 00:46:46.640
<v Speaker 2>I will answer them on Monday and um, but if

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:46:46.640 --> 00:46:50.120
<v Speaker 2>anything comes up actually answers come in if it's useful.

NOTE CONF {"raw":[100,100,100,100,100,96,96,100,100,100]}

00:46:51.320 --> 00:46:52.400
<v Speaker 3>Ah.

NOTE CONF {"raw":[91]}

00:46:54.760 --> 00:46:55.240
<v Speaker 3>Okay.

NOTE CONF {"raw":[100]}

00:46:59.640 --> 00:46:59.800
<v Speaker 2>Oh.

NOTE CONF {"raw":[100]}

00:46:59.840 --> 00:47:01.800
<v Speaker 2>How is it possible to get an Informatics hoodie?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,89]}

00:47:01.840 --> 00:47:03.520
<v Speaker 2>I actually have no idea, but I can find that

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:03.520 --> 00:47:03.760
<v Speaker 2>out.

NOTE CONF {"raw":[100]}

00:47:03.800 --> 00:47:05.480
<v Speaker 2>By the way, I'm not sure what's happening with the

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:05.480 --> 00:47:08.250
<v Speaker 2>ceilidh tomorrow, because there's this red warning for wind, which

NOTE CONF {"raw":[21,100,100,100,100,100,100,100,100,100]}

00:47:08.250 --> 00:47:10.130
<v Speaker 2>is quite serious, so they might.

NOTE CONF {"raw":[100,100,100,100,100,100]}

00:47:10.170 --> 00:47:12.370
<v Speaker 2>If you've got tickets for ceilidh, just look out for

NOTE CONF {"raw":[100,100,100,100,100,50,100,100,100,100]}

00:47:12.370 --> 00:47:13.530
<v Speaker 2>information about that.

NOTE CONF {"raw":[100,100,100]}

00:47:13.530 --> 00:47:15.210
<v Speaker 2>I hope they can still run it, but it's quite

NOTE CONF {"raw":[100,100,100,100,100,100,100,100,100,100]}

00:47:15.210 --> 00:47:15.490
<v Speaker 2>bad.

NOTE CONF {"raw":[100]}

00:47:15.850 --> 00:47:18.490
<v Speaker 2>Read warnings so just watch out tomorrow it's going to

NOTE CONF {"raw":[86,100,100,100,100,100,100,100,100,100]}

00:47:18.490 --> 00:47:19.210
<v Speaker 2>be really bad.

NOTE CONF {"raw":[100,100,100]}

00:47:24.690 --> 00:47:25.850
<v Speaker 2>Okay, okay.

NOTE CONF {"raw":[100,81]}

00:47:25.890 --> 00:47:27.450
<v Speaker 2>I'm going to answer these questions later.

NOTE CONF {"raw":[100,100,100,85,100,100,100]}

00:47:42.090 --> 00:47:42.410
<v Speaker 4>I.

NOTE CONF {"raw":[88]}

00:47:46.130 --> 00:47:47.810
<v Speaker 2>Know you don't have tutorials today.

NOTE CONF {"raw":[91,100,100,100,100,100]}

00:47:47.810 --> 00:47:52.930
<v Speaker 2>Whoever asked that there are no tutorials on this week.

NOTE CONF {"raw":[100,76,100,100,100,100,100,100,100,100]}

00:47:52.930 --> 00:47:54.370
<v Speaker 2>Tutorials start next week.

NOTE CONF {"raw":[100,100,100,100]}

00:48:03.090 --> 00:48:03.730
<v Speaker 4>Oh yes.

NOTE CONF {"raw":[100,100]}

00:48:04.330 --> 00:48:08.020
<v Speaker 4>No I can I found it Oh, you did okay.

NOTE CONF {"raw":[99,100,92,100,100,86,100,100,100,90]}

00:48:08.260 --> 00:48:09.700
<v Speaker 4>There was an error with the calendar.

NOTE CONF {"raw":[96,100,100,100,100,100,98]}

00:48:10.420 --> 00:48:11.140
<v Speaker 2>Okay, good.

NOTE CONF {"raw":[99,95]}

00:48:11.380 --> 00:48:11.980
<v Speaker 4>That's good.

NOTE CONF {"raw":[100,100]}

00:48:12.660 --> 00:48:14.980
<v Speaker 4>Do you know where I might find the PDF version

NOTE CONF {"raw":[54,100,100,100,100,100,100,100,100,100]}

00:48:14.980 --> 00:48:18.060
<v Speaker 4>of the book other than the epub one?

NOTE CONF {"raw":[100,100,100,100,100,100,100,100]}

00:48:19.620 --> 00:48:20.020
<v Speaker 4>No.

NOTE CONF {"raw":[100]}
